
10| 129 - kw char
10| 42 - op/sep *
10| 5 - id TITLE #781
10| 61 - op/sep =
10| 4 - str "Georgiy Pruss C99C 0.26149"
10| 59 - op/sep ;

14| 131 - kw enum
14| 123 - op/sep {
14| 5 - id INTSZ #949
14| 61 - op/sep =
14| 2 - num 4
14| 44 - op/sep ,

15| 5 - id STR_MAX_SZ #631
15| 61 - op/sep =
15| 2 - num 260
15| 44 - op/sep ,

16| 5 - id ID_TABLE_DIM #644
16| 61 - op/sep =
16| 2 - num 1009
16| 44 - op/sep ,

17| 5 - id SL_TABLE_DIM #95
17| 61 - op/sep =
17| 2 - num 500
17| 44 - op/sep ,

18| 5 - id ST_DIM #473
18| 61 - op/sep =
18| 2 - num 500
18| 44 - op/sep ,

19| 5 - id RD_BUF #964
19| 61 - op/sep =
19| 2 - num 8000
19| 44 - op/sep ,

20| 5 - id BF_WRT_SZ #945
20| 61 - op/sep =
20| 2 - num 4000
20| 44 - op/sep ,

21| 5 - id MAX_INIT_DIM #583
21| 61 - op/sep =
21| 2 - num 600
21| 44 - op/sep ,

22| 5 - id BSS_ORG #398
22| 61 - op/sep =
22| 2 - num 100000
22| 125 - op/sep }
22| 59 - op/sep ;

24| 130 - kw int
24| 5 - id SC_DEBUG #598
24| 61 - op/sep =
24| 2 - num 0
24| 59 - op/sep ;

25| 130 - kw int
25| 5 - id PA_TRACE #918
25| 61 - op/sep =
25| 2 - num 0
25| 59 - op/sep ;

26| 130 - kw int
26| 5 - id IT_DEBUG #861
26| 61 - op/sep =
26| 2 - num 0
26| 59 - op/sep ;

27| 130 - kw int
27| 5 - id IT_DUMP #623
27| 61 - op/sep =
27| 2 - num 0
27| 59 - op/sep ;

28| 130 - kw int
28| 5 - id ST_DUMP #185
28| 61 - op/sep =
28| 2 - num 0
28| 59 - op/sep ;

29| 130 - kw int
29| 5 - id ET_TRACE #18
29| 61 - op/sep =
29| 2 - num 0
29| 59 - op/sep ;

30| 130 - kw int
30| 5 - id CG_LINES #579
30| 61 - op/sep =
30| 2 - num 1
30| 59 - op/sep ;

34| 130 - kw int
34| 5 - id open #413
34| 40 - op/sep (
34| 129 - kw char
34| 42 - op/sep *
34| 5 - id path #564
34| 44 - op/sep ,
34| 130 - kw int
34| 5 - id oflag #347
34| 44 - op/sep ,
34| 130 - kw int
34| 5 - id cmode #123
34| 41 - op/sep )
34| 59 - op/sep ;

35| 130 - kw int
35| 5 - id close #173
35| 40 - op/sep (
35| 130 - kw int
35| 5 - id fd #771
35| 41 - op/sep )
35| 59 - op/sep ;

36| 130 - kw int
36| 5 - id read #448
36| 40 - op/sep (
36| 130 - kw int
36| 5 - id fd #771
36| 44 - op/sep ,
36| 129 - kw char
36| 42 - op/sep *
36| 5 - id buf #617
36| 44 - op/sep ,
36| 130 - kw int
36| 5 - id count #562
36| 41 - op/sep )
36| 59 - op/sep ;

37| 130 - kw int
37| 5 - id write #600
37| 40 - op/sep (
37| 130 - kw int
37| 5 - id fd #771
37| 44 - op/sep ,
37| 129 - kw char
37| 42 - op/sep *
37| 5 - id buf #617
37| 44 - op/sep ,
37| 130 - kw int
37| 5 - id count #562
37| 41 - op/sep )
37| 59 - op/sep ;

38| 129 - kw char
38| 42 - op/sep *
38| 5 - id malloc #352
38| 40 - op/sep (
38| 130 - kw int
38| 5 - id size #283
38| 41 - op/sep )
38| 59 - op/sep ;

39| 128 - kw void
39| 5 - id free #656
39| 40 - op/sep (
39| 129 - kw char
39| 42 - op/sep *
39| 5 - id ptr #1007
39| 41 - op/sep )
39| 59 - op/sep ;

40| 128 - kw void
40| 5 - id exit #906
40| 40 - op/sep (
40| 130 - kw int
40| 5 - id status #660
40| 41 - op/sep )
40| 59 - op/sep ;

42| 131 - kw enum
42| 123 - op/sep {
42| 5 - id O_RDONLY #844
42| 44 - op/sep ,
42| 5 - id O_WRONLY #328
42| 44 - op/sep ,
42| 5 - id O_RDWR #585
42| 44 - op/sep ,
42| 5 - id O_APPEND #581
42| 61 - op/sep =
42| 2 - num 8
42| 44 - op/sep ,
42| 5 - id O_CREAT #922
42| 61 - op/sep =
42| 2 - num 512
42| 44 - op/sep ,
42| 5 - id O_TRUNC #307
42| 61 - op/sep =
42| 2 - num 1024
42| 44 - op/sep ,
42| 5 - id O_EXCL #502
42| 61 - op/sep =
42| 2 - num 2048
42| 125 - op/sep }
42| 59 - op/sep ;

46| 130 - kw int
46| 5 - id is_abc #64
46| 40 - op/sep (
46| 130 - kw int
46| 5 - id c #77
46| 41 - op/sep )
46| 123 - op/sep {
46| 137 - kw return
46| 5 - id c #77
46| 103 - op/sep g
46| 3 - chr 97
46| 97 - op/sep a
46| 5 - id c #77
46| 108 - op/sep l
46| 3 - chr 122
46| 111 - op/sep o
46| 5 - id c #77
46| 103 - op/sep g
46| 3 - chr 65
46| 97 - op/sep a
46| 5 - id c #77
46| 108 - op/sep l
46| 3 - chr 90
46| 111 - op/sep o
46| 5 - id c #77
46| 101 - op/sep e
46| 3 - chr 95
46| 59 - op/sep ;
46| 125 - op/sep }

48| 128 - kw void
48| 5 - id memcopy #487
48| 40 - op/sep (
48| 129 - kw char
48| 42 - op/sep *
48| 5 - id d #78
48| 44 - op/sep ,
48| 129 - kw char
48| 42 - op/sep *
48| 5 - id s #93
48| 44 - op/sep ,
48| 130 - kw int
48| 5 - id n #88
48| 41 - op/sep )
48| 123 - op/sep {
48| 135 - kw for
48| 40 - op/sep (
48| 59 - op/sep ;
48| 5 - id n #88
48| 62 - op/sep >
48| 2 - num 0
48| 59 - op/sep ;
48| 105 - op/sep i
48| 5 - id d #78
48| 44 - op/sep ,
48| 105 - op/sep i
48| 5 - id s #93
48| 44 - op/sep ,
48| 100 - op/sep d
48| 5 - id n #88
48| 41 - op/sep )
48| 42 - op/sep *
48| 5 - id d #78
48| 61 - op/sep =
48| 42 - op/sep *
48| 5 - id s #93
48| 59 - op/sep ;
48| 125 - op/sep }

50| 129 - kw char
50| 42 - op/sep *
50| 5 - id memchr #91
50| 40 - op/sep (
50| 129 - kw char
50| 42 - op/sep *
50| 5 - id s #93
50| 44 - op/sep ,
50| 130 - kw int
50| 5 - id c #77
50| 44 - op/sep ,
50| 130 - kw int
50| 5 - id n #88
50| 41 - op/sep )
50| 123 - op/sep {
50| 135 - kw for
50| 40 - op/sep (
50| 59 - op/sep ;
50| 5 - id n #88
50| 62 - op/sep >
50| 2 - num 0
50| 59 - op/sep ;
50| 100 - op/sep d
50| 5 - id n #88
50| 44 - op/sep ,
50| 105 - op/sep i
50| 5 - id s #93
50| 41 - op/sep )
50| 132 - kw if
50| 40 - op/sep (
50| 42 - op/sep *
50| 5 - id s #93
50| 101 - op/sep e
50| 5 - id c #77
50| 41 - op/sep )
50| 137 - kw return
50| 5 - id s #93
50| 59 - op/sep ;
50| 137 - kw return
50| 2 - num 0
50| 59 - op/sep ;
50| 125 - op/sep }

52| 130 - kw int
52| 5 - id strlen #338
52| 40 - op/sep (
52| 129 - kw char
52| 42 - op/sep *
52| 5 - id s #93
52| 41 - op/sep )
52| 123 - op/sep {
52| 129 - kw char
52| 42 - op/sep *
52| 5 - id b #76
52| 61 - op/sep =
52| 5 - id s #93
52| 59 - op/sep ;
52| 134 - kw while
52| 40 - op/sep (
52| 42 - op/sep *
52| 5 - id s #93
52| 41 - op/sep )
52| 105 - op/sep i
52| 5 - id s #93
52| 59 - op/sep ;
52| 137 - kw return
52| 5 - id s #93
52| 45 - op/sep -
52| 5 - id b #76
52| 59 - op/sep ;
52| 125 - op/sep }

54| 129 - kw char
54| 42 - op/sep *
54| 5 - id strdup #854
54| 40 - op/sep (
54| 129 - kw char
54| 42 - op/sep *
54| 5 - id s #93
54| 41 - op/sep )

55| 123 - op/sep {

56| 130 - kw int
56| 5 - id n #88
56| 61 - op/sep =
56| 5 - id strlen #338
56| 40 - op/sep (
56| 5 - id s #93
56| 41 - op/sep )
56| 59 - op/sep ;
56| 129 - kw char
56| 42 - op/sep *
56| 5 - id d #78
56| 61 - op/sep =
56| 5 - id malloc #352
56| 40 - op/sep (
56| 5 - id n #88
56| 43 - op/sep +
56| 2 - num 1
56| 41 - op/sep )
56| 59 - op/sep ;
56| 5 - id memcopy #487
56| 40 - op/sep (
56| 5 - id d #78
56| 44 - op/sep ,
56| 5 - id s #93
56| 44 - op/sep ,
56| 5 - id n #88
56| 43 - op/sep +
56| 2 - num 1
56| 41 - op/sep )
56| 59 - op/sep ;

57| 137 - kw return
57| 5 - id d #78
57| 59 - op/sep ;

58| 125 - op/sep }

60| 129 - kw char
60| 42 - op/sep *
60| 5 - id strrev #248
60| 40 - op/sep (
60| 129 - kw char
60| 42 - op/sep *
60| 5 - id s #93
60| 41 - op/sep )

61| 123 - op/sep {

62| 130 - kw int
62| 5 - id n #88
62| 61 - op/sep =
62| 5 - id strlen #338
62| 40 - op/sep (
62| 5 - id s #93
62| 41 - op/sep )
62| 59 - op/sep ;
62| 132 - kw if
62| 40 - op/sep (
62| 5 - id n #88
62| 108 - op/sep l
62| 2 - num 1
62| 41 - op/sep )
62| 137 - kw return
62| 5 - id s #93
62| 59 - op/sep ;

63| 135 - kw for
63| 40 - op/sep (
63| 129 - kw char
63| 42 - op/sep *
63| 5 - id b #76
63| 61 - op/sep =
63| 5 - id s #93
63| 44 - op/sep ,
63| 42 - op/sep *
63| 5 - id e #79
63| 61 - op/sep =
63| 5 - id s #93
63| 43 - op/sep +
63| 5 - id n #88
63| 45 - op/sep -
63| 2 - num 1
63| 59 - op/sep ;
63| 5 - id b #76
63| 60 - op/sep <
63| 5 - id e #79
63| 59 - op/sep ;
63| 105 - op/sep i
63| 5 - id b #76
63| 44 - op/sep ,
63| 100 - op/sep d
63| 5 - id e #79
63| 41 - op/sep )
63| 123 - op/sep {
63| 129 - kw char
63| 5 - id t #94
63| 61 - op/sep =
63| 42 - op/sep *
63| 5 - id e #79
63| 59 - op/sep ;
63| 42 - op/sep *
63| 5 - id e #79
63| 61 - op/sep =
63| 42 - op/sep *
63| 5 - id b #76
63| 59 - op/sep ;
63| 42 - op/sep *
63| 5 - id b #76
63| 61 - op/sep =
63| 5 - id t #94
63| 59 - op/sep ;
63| 125 - op/sep }

64| 137 - kw return
64| 5 - id s #93
64| 59 - op/sep ;

65| 125 - op/sep }

67| 130 - kw int
67| 5 - id strcmp #6
67| 40 - op/sep (
67| 129 - kw char
67| 42 - op/sep *
67| 5 - id s #93
67| 44 - op/sep ,
67| 129 - kw char
67| 42 - op/sep *
67| 5 - id t #94
67| 41 - op/sep )

68| 123 - op/sep {

69| 135 - kw for
69| 40 - op/sep (
69| 59 - op/sep ;
69| 42 - op/sep *
69| 5 - id t #94
69| 59 - op/sep ;
69| 105 - op/sep i
69| 5 - id s #93
69| 44 - op/sep ,
69| 105 - op/sep i
69| 5 - id t #94
69| 41 - op/sep )
69| 123 - op/sep {
69| 132 - kw if
69| 40 - op/sep (
69| 42 - op/sep *
69| 5 - id s #93
69| 101 - op/sep e
69| 2 - num 0
69| 111 - op/sep o
69| 42 - op/sep *
69| 5 - id s #93
69| 60 - op/sep <
69| 42 - op/sep *
69| 5 - id t #94
69| 41 - op/sep )
69| 137 - kw return
69| 45 - op/sep -
69| 2 - num 1
69| 59 - op/sep ;
69| 132 - kw if
69| 40 - op/sep (
69| 42 - op/sep *
69| 5 - id s #93
69| 62 - op/sep >
69| 42 - op/sep *
69| 5 - id t #94
69| 41 - op/sep )
69| 137 - kw return
69| 2 - num 1
69| 59 - op/sep ;
69| 125 - op/sep }

70| 137 - kw return
70| 42 - op/sep *
70| 5 - id s #93
70| 110 - op/sep n
70| 2 - num 0
70| 59 - op/sep ;

71| 125 - op/sep }

73| 130 - kw int
73| 5 - id strequ #915
73| 40 - op/sep (
73| 129 - kw char
73| 42 - op/sep *
73| 5 - id s #93
73| 44 - op/sep ,
73| 129 - kw char
73| 42 - op/sep *
73| 5 - id t #94
73| 41 - op/sep )
73| 123 - op/sep {
73| 137 - kw return
73| 5 - id strcmp #6
73| 40 - op/sep (
73| 5 - id s #93
73| 44 - op/sep ,
73| 5 - id t #94
73| 41 - op/sep )
73| 101 - op/sep e
73| 2 - num 0
73| 59 - op/sep ;
73| 125 - op/sep }

75| 129 - kw char
75| 42 - op/sep *
75| 5 - id strrchr #954
75| 40 - op/sep (
75| 129 - kw char
75| 42 - op/sep *
75| 5 - id s #93
75| 44 - op/sep ,
75| 130 - kw int
75| 5 - id c #77
75| 41 - op/sep )

76| 123 - op/sep {

77| 135 - kw for
77| 40 - op/sep (
77| 130 - kw int
77| 5 - id n #88
77| 61 - op/sep =
77| 5 - id strlen #338
77| 40 - op/sep (
77| 5 - id s #93
77| 41 - op/sep )
77| 59 - op/sep ;
77| 5 - id n #88
77| 62 - op/sep >
77| 2 - num 0
77| 59 - op/sep ;
77| 100 - op/sep d
77| 5 - id n #88
77| 41 - op/sep )
77| 132 - kw if
77| 40 - op/sep (
77| 5 - id s #93
77| 91 - op/sep [
77| 5 - id n #88
77| 45 - op/sep -
77| 2 - num 1
77| 93 - op/sep ]
77| 101 - op/sep e
77| 5 - id c #77
77| 41 - op/sep )
77| 137 - kw return
77| 5 - id s #93
77| 43 - op/sep +
77| 40 - op/sep (
77| 5 - id n #88
77| 45 - op/sep -
77| 2 - num 1
77| 41 - op/sep )
77| 59 - op/sep ;

78| 137 - kw return
78| 2 - num 0
78| 59 - op/sep ;

79| 125 - op/sep }

81| 129 - kw char
81| 5 - id str_repr_buf #84
81| 91 - op/sep [
81| 5 - id STR_MAX_SZ #631
81| 93 - op/sep ]
81| 59 - op/sep ;

83| 129 - kw char
83| 42 - op/sep *
83| 5 - id str_repr #862
83| 40 - op/sep (
83| 129 - kw char
83| 42 - op/sep *
83| 5 - id s #93
83| 41 - op/sep )

84| 123 - op/sep {

85| 129 - kw char
85| 42 - op/sep *
85| 5 - id d #78
85| 61 - op/sep =
85| 5 - id str_repr_buf #84
85| 59 - op/sep ;
85| 42 - op/sep *
85| 5 - id d #78
85| 61 - op/sep =
85| 3 - chr 34
85| 59 - op/sep ;

86| 135 - kw for
86| 40 - op/sep (
86| 105 - op/sep i
86| 5 - id d #78
86| 59 - op/sep ;
86| 42 - op/sep *
86| 5 - id s #93
86| 59 - op/sep ;
86| 105 - op/sep i
86| 5 - id d #78
86| 44 - op/sep ,
86| 105 - op/sep i
86| 5 - id s #93
86| 41 - op/sep )

87| 123 - op/sep {

88| 132 - kw if
88| 40 - op/sep (
88| 42 - op/sep *
88| 5 - id s #93
88| 101 - op/sep e
88| 3 - chr 10
88| 41 - op/sep )
88| 123 - op/sep {
88| 42 - op/sep *
88| 5 - id d #78
88| 61 - op/sep =
88| 3 - chr 92
88| 59 - op/sep ;
88| 42 - op/sep *
88| 105 - op/sep i
88| 5 - id d #78
88| 61 - op/sep =
88| 3 - chr 110
88| 59 - op/sep ;
88| 125 - op/sep }

89| 133 - kw else
89| 132 - kw if
89| 40 - op/sep (
89| 42 - op/sep *
89| 5 - id s #93
89| 101 - op/sep e
89| 2 - num 0
89| 41 - op/sep )
89| 123 - op/sep {
89| 42 - op/sep *
89| 5 - id d #78
89| 61 - op/sep =
89| 3 - chr 92
89| 59 - op/sep ;
89| 42 - op/sep *
89| 105 - op/sep i
89| 5 - id d #78
89| 61 - op/sep =
89| 3 - chr 48
89| 59 - op/sep ;
89| 125 - op/sep }

90| 133 - kw else
90| 132 - kw if
90| 40 - op/sep (
90| 42 - op/sep *
90| 5 - id s #93
90| 101 - op/sep e
90| 3 - chr 8
90| 41 - op/sep )
90| 123 - op/sep {
90| 42 - op/sep *
90| 5 - id d #78
90| 61 - op/sep =
90| 3 - chr 92
90| 59 - op/sep ;
90| 42 - op/sep *
90| 105 - op/sep i
90| 5 - id d #78
90| 61 - op/sep =
90| 3 - chr 98
90| 59 - op/sep ;
90| 125 - op/sep }

91| 133 - kw else
91| 132 - kw if
91| 40 - op/sep (
91| 42 - op/sep *
91| 5 - id s #93
91| 101 - op/sep e
91| 3 - chr 13
91| 41 - op/sep )
91| 123 - op/sep {
91| 42 - op/sep *
91| 5 - id d #78
91| 61 - op/sep =
91| 3 - chr 92
91| 59 - op/sep ;
91| 42 - op/sep *
91| 105 - op/sep i
91| 5 - id d #78
91| 61 - op/sep =
91| 3 - chr 114
91| 59 - op/sep ;
91| 125 - op/sep }

92| 133 - kw else
92| 42 - op/sep *
92| 5 - id d #78
92| 61 - op/sep =
92| 42 - op/sep *
92| 5 - id s #93
92| 59 - op/sep ;

93| 125 - op/sep }

94| 42 - op/sep *
94| 5 - id d #78
94| 61 - op/sep =
94| 3 - chr 34
94| 59 - op/sep ;
94| 42 - op/sep *
94| 105 - op/sep i
94| 5 - id d #78
94| 61 - op/sep =
94| 3 - chr 0
94| 59 - op/sep ;

95| 137 - kw return
95| 5 - id str_repr_buf #84
95| 59 - op/sep ;

96| 125 - op/sep }

98| 129 - kw char
98| 5 - id i2s_buf #829
98| 91 - op/sep [
98| 2 - num 12
98| 93 - op/sep ]
98| 59 - op/sep ;

100| 129 - kw char
100| 42 - op/sep *
100| 5 - id i2s #466
100| 40 - op/sep (
100| 130 - kw int
100| 5 - id value #863
100| 41 - op/sep )

101| 123 - op/sep {

102| 132 - kw if
102| 40 - op/sep (
102| 5 - id value #863
102| 101 - op/sep e
102| 2 - num 0
102| 41 - op/sep )
102| 137 - kw return
102| 4 - str "0"
102| 59 - op/sep ;

103| 129 - kw char
103| 42 - op/sep *
103| 5 - id dst #130
103| 61 - op/sep =
103| 5 - id i2s_buf #829
103| 59 - op/sep ;

104| 132 - kw if
104| 40 - op/sep (
104| 5 - id value #863
104| 60 - op/sep <
104| 2 - num 0
104| 41 - op/sep )

105| 123 - op/sep {

106| 132 - kw if
106| 40 - op/sep (
106| 5 - id value #863
106| 101 - op/sep e
106| 40 - op/sep (
106| 45 - op/sep -
106| 2 - num 2147483647
106| 45 - op/sep -
106| 2 - num 1
106| 41 - op/sep )
106| 41 - op/sep )
106| 137 - kw return
106| 4 - str "-2147483648"
106| 59 - op/sep ;

107| 42 - op/sep *
107| 5 - id dst #130
107| 61 - op/sep =
107| 3 - chr 45
107| 59 - op/sep ;
107| 105 - op/sep i
107| 5 - id dst #130
107| 59 - op/sep ;

108| 5 - id value #863
108| 61 - op/sep =
108| 45 - op/sep -
108| 5 - id value #863
108| 59 - op/sep ;

109| 125 - op/sep }

110| 129 - kw char
110| 42 - op/sep *
110| 5 - id to_rev #618
110| 61 - op/sep =
110| 5 - id dst #130
110| 59 - op/sep ;

111| 135 - kw for
111| 40 - op/sep (
111| 59 - op/sep ;
111| 5 - id value #863
111| 110 - op/sep n
111| 2 - num 0
111| 59 - op/sep ;
111| 105 - op/sep i
111| 5 - id dst #130
111| 41 - op/sep )
111| 123 - op/sep {
111| 42 - op/sep *
111| 5 - id dst #130
111| 61 - op/sep =
111| 40 - op/sep (
111| 129 - kw char
111| 41 - op/sep )
111| 40 - op/sep (
111| 5 - id value #863
111| 37 - op/sep %
111| 2 - num 10
111| 43 - op/sep +
111| 3 - chr 48
111| 41 - op/sep )
111| 59 - op/sep ;
111| 5 - id value #863
111| 61 - op/sep =
111| 5 - id value #863
111| 47 - op/sep /
111| 2 - num 10
111| 59 - op/sep ;
111| 125 - op/sep }

112| 42 - op/sep *
112| 5 - id dst #130
112| 61 - op/sep =
112| 2 - num 0
112| 59 - op/sep ;

113| 5 - id strrev #248
113| 40 - op/sep (
113| 5 - id to_rev #618
113| 41 - op/sep )
113| 59 - op/sep ;

114| 137 - kw return
114| 5 - id i2s_buf #829
114| 59 - op/sep ;

115| 125 - op/sep }

117| 128 - kw void
117| 5 - id p1 #371
117| 40 - op/sep (
117| 129 - kw char
117| 42 - op/sep *
117| 5 - id s #93
117| 41 - op/sep )
117| 123 - op/sep {
117| 5 - id write #600
117| 40 - op/sep (
117| 2 - num 1
117| 44 - op/sep ,
117| 5 - id s #93
117| 44 - op/sep ,
117| 5 - id strlen #338
117| 40 - op/sep (
117| 5 - id s #93
117| 41 - op/sep )
117| 41 - op/sep )
117| 59 - op/sep ;
117| 125 - op/sep }

118| 128 - kw void
118| 5 - id p2 #372
118| 40 - op/sep (
118| 129 - kw char
118| 42 - op/sep *
118| 5 - id s #93
118| 44 - op/sep ,
118| 129 - kw char
118| 42 - op/sep *
118| 5 - id s2 #570
118| 41 - op/sep )
118| 123 - op/sep {
118| 5 - id p1 #371
118| 40 - op/sep (
118| 5 - id s #93
118| 41 - op/sep )
118| 59 - op/sep ;
118| 5 - id p1 #371
118| 40 - op/sep (
118| 5 - id s2 #570
118| 41 - op/sep )
118| 59 - op/sep ;
118| 125 - op/sep }

119| 128 - kw void
119| 5 - id p3 #373
119| 40 - op/sep (
119| 129 - kw char
119| 42 - op/sep *
119| 5 - id s #93
119| 44 - op/sep ,
119| 129 - kw char
119| 42 - op/sep *
119| 5 - id s2 #570
119| 44 - op/sep ,
119| 129 - kw char
119| 42 - op/sep *
119| 5 - id s3 #571
119| 41 - op/sep )
119| 123 - op/sep {
119| 5 - id p1 #371
119| 40 - op/sep (
119| 5 - id s #93
119| 41 - op/sep )
119| 59 - op/sep ;
119| 5 - id p1 #371
119| 40 - op/sep (
119| 5 - id s2 #570
119| 41 - op/sep )
119| 59 - op/sep ;
119| 5 - id p1 #371
119| 40 - op/sep (
119| 5 - id s3 #571
119| 41 - op/sep )
119| 59 - op/sep ;
119| 125 - op/sep }

120| 128 - kw void
120| 5 - id p4 #374
120| 40 - op/sep (
120| 129 - kw char
120| 42 - op/sep *
120| 5 - id s #93
120| 44 - op/sep ,
120| 129 - kw char
120| 42 - op/sep *
120| 5 - id s2 #570
120| 44 - op/sep ,
120| 129 - kw char
120| 42 - op/sep *
120| 5 - id s3 #571
120| 44 - op/sep ,
120| 129 - kw char
120| 42 - op/sep *
120| 5 - id s4 #572
120| 41 - op/sep )
120| 123 - op/sep {
120| 5 - id p1 #371
120| 40 - op/sep (
120| 5 - id s #93
120| 41 - op/sep )
120| 59 - op/sep ;
120| 5 - id p1 #371
120| 40 - op/sep (
120| 5 - id s2 #570
120| 41 - op/sep )
120| 59 - op/sep ;
120| 5 - id p1 #371
120| 40 - op/sep (
120| 5 - id s3 #571
120| 41 - op/sep )
120| 59 - op/sep ;
120| 5 - id p1 #371
120| 40 - op/sep (
120| 5 - id s4 #572
120| 41 - op/sep )
120| 59 - op/sep ;
120| 125 - op/sep }

121| 128 - kw void
121| 5 - id p0n #551
121| 40 - op/sep (
121| 41 - op/sep )
121| 123 - op/sep {
121| 5 - id write #600
121| 40 - op/sep (
121| 2 - num 1
121| 44 - op/sep ,
121| 4 - str "\n"
121| 44 - op/sep ,
121| 2 - num 1
121| 41 - op/sep )
121| 59 - op/sep ;
121| 125 - op/sep }

122| 128 - kw void
122| 5 - id p1n #619
122| 40 - op/sep (
122| 129 - kw char
122| 42 - op/sep *
122| 5 - id s #93
122| 41 - op/sep )
122| 123 - op/sep {
122| 5 - id write #600
122| 40 - op/sep (
122| 2 - num 1
122| 44 - op/sep ,
122| 5 - id s #93
122| 44 - op/sep ,
122| 5 - id strlen #338
122| 40 - op/sep (
122| 5 - id s #93
122| 41 - op/sep )
122| 41 - op/sep )
122| 59 - op/sep ;
122| 5 - id p0n #551
122| 40 - op/sep (
122| 41 - op/sep )
122| 59 - op/sep ;
122| 125 - op/sep }

123| 128 - kw void
123| 5 - id p2n #683
123| 40 - op/sep (
123| 129 - kw char
123| 42 - op/sep *
123| 5 - id s #93
123| 44 - op/sep ,
123| 129 - kw char
123| 42 - op/sep *
123| 5 - id s2 #570
123| 41 - op/sep )
123| 123 - op/sep {
123| 5 - id p1 #371
123| 40 - op/sep (
123| 5 - id s #93
123| 41 - op/sep )
123| 59 - op/sep ;
123| 5 - id p1 #371
123| 40 - op/sep (
123| 5 - id s2 #570
123| 41 - op/sep )
123| 59 - op/sep ;
123| 5 - id p0n #551
123| 40 - op/sep (
123| 41 - op/sep )
123| 59 - op/sep ;
123| 125 - op/sep }

124| 128 - kw void
124| 5 - id p3n #749
124| 40 - op/sep (
124| 129 - kw char
124| 42 - op/sep *
124| 5 - id s #93
124| 44 - op/sep ,
124| 129 - kw char
124| 42 - op/sep *
124| 5 - id s2 #570
124| 44 - op/sep ,
124| 129 - kw char
124| 42 - op/sep *
124| 5 - id s3 #571
124| 41 - op/sep )
124| 123 - op/sep {
124| 5 - id p1 #371
124| 40 - op/sep (
124| 5 - id s #93
124| 41 - op/sep )
124| 59 - op/sep ;
124| 5 - id p1 #371
124| 40 - op/sep (
124| 5 - id s2 #570
124| 41 - op/sep )
124| 59 - op/sep ;
124| 5 - id p1 #371
124| 40 - op/sep (
124| 5 - id s3 #571
124| 41 - op/sep )
124| 59 - op/sep ;
124| 5 - id p0n #551
124| 40 - op/sep (
124| 41 - op/sep )
124| 59 - op/sep ;
124| 125 - op/sep }

126| 128 - kw void
126| 5 - id before_exit #492
126| 40 - op/sep (
126| 41 - op/sep )
126| 59 - op/sep ;

128| 128 - kw void
128| 5 - id assert #124
128| 40 - op/sep (
128| 130 - kw int
128| 5 - id cond #496
128| 44 - op/sep ,
128| 129 - kw char
128| 42 - op/sep *
128| 5 - id msg #979
128| 41 - op/sep )

129| 123 - op/sep {

130| 132 - kw if
130| 40 - op/sep (
130| 5 - id cond #496
130| 110 - op/sep n
130| 2 - num 0
130| 41 - op/sep )
130| 137 - kw return
130| 59 - op/sep ;

131| 5 - id write #600
131| 40 - op/sep (
131| 2 - num 2
131| 44 - op/sep ,
131| 4 - str "ASSERT FAILED: "
131| 44 - op/sep ,
131| 2 - num 15
131| 41 - op/sep )
131| 59 - op/sep ;
131| 5 - id write #600
131| 40 - op/sep (
131| 2 - num 2
131| 44 - op/sep ,
131| 5 - id msg #979
131| 44 - op/sep ,
131| 5 - id strlen #338
131| 40 - op/sep (
131| 5 - id msg #979
131| 41 - op/sep )
131| 41 - op/sep )
131| 59 - op/sep ;
131| 5 - id write #600
131| 40 - op/sep (
131| 2 - num 2
131| 44 - op/sep ,
131| 4 - str "\n"
131| 44 - op/sep ,
131| 2 - num 1
131| 41 - op/sep )
131| 59 - op/sep ;

132| 5 - id before_exit #492
132| 40 - op/sep (
132| 41 - op/sep )
132| 59 - op/sep ;

133| 5 - id exit #906
133| 40 - op/sep (
133| 2 - num 1
133| 41 - op/sep )
133| 59 - op/sep ;

134| 125 - op/sep }

136| 128 - kw void
136| 5 - id p2wLN #481
136| 40 - op/sep (
136| 129 - kw char
136| 42 - op/sep *
136| 5 - id k #85
136| 44 - op/sep ,
136| 129 - kw char
136| 42 - op/sep *
136| 5 - id m #87
136| 41 - op/sep )
136| 59 - op/sep ;

138| 128 - kw void
138| 5 - id warn #965
138| 40 - op/sep (
138| 129 - kw char
138| 42 - op/sep *
138| 5 - id msg #979
138| 41 - op/sep )
138| 123 - op/sep {
138| 5 - id p2wLN #481
138| 40 - op/sep (
138| 4 - str "Warning"
138| 44 - op/sep ,
138| 5 - id msg #979
138| 41 - op/sep )
138| 59 - op/sep ;
138| 125 - op/sep }

139| 128 - kw void
139| 5 - id err1 #522
139| 40 - op/sep (
139| 129 - kw char
139| 42 - op/sep *
139| 5 - id msg #979
139| 41 - op/sep )
139| 123 - op/sep {
139| 5 - id p2wLN #481
139| 40 - op/sep (
139| 4 - str "Error"
139| 44 - op/sep ,
139| 5 - id msg #979
139| 41 - op/sep )
139| 59 - op/sep ;
139| 5 - id before_exit #492
139| 40 - op/sep (
139| 41 - op/sep )
139| 59 - op/sep ;
139| 5 - id exit #906
139| 40 - op/sep (
139| 2 - num 1
139| 41 - op/sep )
139| 59 - op/sep ;
139| 125 - op/sep }

140| 128 - kw void
140| 5 - id err2 #523
140| 40 - op/sep (
140| 129 - kw char
140| 42 - op/sep *
140| 5 - id msg #979
140| 44 - op/sep ,
140| 129 - kw char
140| 42 - op/sep *
140| 5 - id m2 #174
140| 41 - op/sep )
140| 123 - op/sep {
140| 5 - id p2wLN #481
140| 40 - op/sep (
140| 4 - str "Error"
140| 44 - op/sep ,
140| 5 - id msg #979
140| 41 - op/sep )
140| 59 - op/sep ;

141| 5 - id p2n #683
141| 40 - op/sep (
141| 4 - str "*** "
141| 44 - op/sep ,
141| 5 - id m2 #174
141| 41 - op/sep )
141| 59 - op/sep ;
141| 5 - id before_exit #492
141| 40 - op/sep (
141| 41 - op/sep )
141| 59 - op/sep ;
141| 5 - id exit #906
141| 40 - op/sep (
141| 2 - num 1
141| 41 - op/sep )
141| 59 - op/sep ;
141| 125 - op/sep }

145| 131 - kw enum
145| 123 - op/sep {
145| 5 - id Err #232
145| 44 - op/sep ,
145| 5 - id Eof #22
145| 44 - op/sep ,
145| 5 - id Num #278
145| 44 - op/sep ,
145| 5 - id Chr #950
145| 44 - op/sep ,
145| 5 - id Str #808
145| 44 - op/sep ,
145| 5 - id Id #875
145| 44 - op/sep ,

148| 5 - id Kw #17
148| 61 - op/sep =
148| 2 - num 128
148| 125 - op/sep }
148| 59 - op/sep ;

150| 131 - kw enum
150| 123 - op/sep {
150| 5 - id Void #54
150| 44 - op/sep ,
150| 5 - id Char #193
150| 44 - op/sep ,
150| 5 - id Int #241
150| 44 - op/sep ,
150| 5 - id Enum #699
150| 44 - op/sep ,
150| 5 - id If #877
150| 44 - op/sep ,
150| 5 - id Else #928
150| 44 - op/sep ,
150| 5 - id While #633
150| 44 - op/sep ,
150| 5 - id For #354
150| 44 - op/sep ,
150| 5 - id Break #375
150| 44 - op/sep ,
150| 5 - id Return #684
150| 44 - op/sep ,
150| 5 - id NKW #511
150| 125 - op/sep }
150| 59 - op/sep ;

152| 129 - kw char
152| 42 - op/sep *
152| 5 - id KWDS #764
152| 91 - op/sep [
152| 5 - id NKW #511
152| 93 - op/sep ]
152| 61 - op/sep =
152| 123 - op/sep {
152| 4 - str "void"
152| 44 - op/sep ,
152| 4 - str "char"
152| 44 - op/sep ,
152| 4 - str "int"
152| 44 - op/sep ,
152| 4 - str "enum"
152| 44 - op/sep ,
152| 4 - str "if"
152| 44 - op/sep ,
152| 4 - str "else"
152| 44 - op/sep ,
152| 4 - str "while"
152| 44 - op/sep ,
152| 4 - str "for"
152| 44 - op/sep ,
152| 4 - str "break"
152| 44 - op/sep ,
152| 4 - str "return"
152| 125 - op/sep }
152| 59 - op/sep ;

154| 130 - kw int
154| 5 - id find_kw #796
154| 40 - op/sep (
154| 129 - kw char
154| 42 - op/sep *
154| 5 - id s #93
154| 41 - op/sep )

155| 123 - op/sep {

156| 135 - kw for
156| 40 - op/sep (
156| 130 - kw int
156| 5 - id i #83
156| 61 - op/sep =
156| 2 - num 0
156| 59 - op/sep ;
156| 5 - id i #83
156| 60 - op/sep <
156| 5 - id NKW #511
156| 59 - op/sep ;
156| 105 - op/sep i
156| 5 - id i #83
156| 41 - op/sep )
156| 132 - kw if
156| 40 - op/sep (
156| 5 - id strequ #915
156| 40 - op/sep (
156| 5 - id s #93
156| 44 - op/sep ,
156| 5 - id KWDS #764
156| 91 - op/sep [
156| 5 - id i #83
156| 93 - op/sep ]
156| 41 - op/sep )
156| 41 - op/sep )
156| 137 - kw return
156| 5 - id i #83
156| 59 - op/sep ;

157| 137 - kw return
157| 45 - op/sep -
157| 2 - num 1
157| 59 - op/sep ;

158| 125 - op/sep }

160| 129 - kw char
160| 42 - op/sep *
160| 5 - id OPS #148
160| 61 - op/sep =
160| 4 - str "=+-en*/%<>lgao&^|"
160| 59 - op/sep ;

161| 129 - kw char
161| 42 - op/sep *
161| 5 - id PRC #584
161| 61 - op/sep =
161| 4 - str "1BB88CCC999943765"
161| 59 - op/sep ;

162| 131 - kw enum
162| 123 - op/sep {
162| 5 - id OPS_LEN #785
162| 61 - op/sep =
162| 2 - num 17
162| 125 - op/sep }
162| 59 - op/sep ;

164| 130 - kw int
164| 5 - id op_prec #591
164| 91 - op/sep [
164| 2 - num 128
164| 93 - op/sep ]
164| 59 - op/sep ;

166| 128 - kw void
166| 5 - id op_set_prec #687
166| 40 - op/sep (
166| 41 - op/sep )
166| 123 - op/sep {
166| 135 - kw for
166| 40 - op/sep (
166| 130 - kw int
166| 5 - id i #83
166| 61 - op/sep =
166| 2 - num 0
166| 59 - op/sep ;
166| 5 - id OPS #148
166| 91 - op/sep [
166| 5 - id i #83
166| 93 - op/sep ]
166| 59 - op/sep ;
166| 105 - op/sep i
166| 5 - id i #83
166| 41 - op/sep )
166| 5 - id op_prec #591
166| 91 - op/sep [
166| 5 - id OPS #148
166| 91 - op/sep [
166| 5 - id i #83
166| 93 - op/sep ]
166| 93 - op/sep ]
166| 61 - op/sep =
166| 5 - id PRC #584
166| 91 - op/sep [
166| 5 - id i #83
166| 93 - op/sep ]
166| 45 - op/sep -
166| 3 - chr 48
166| 59 - op/sep ;
166| 125 - op/sep }

170| 129 - kw char
170| 5 - id rd_buf #416
170| 91 - op/sep [
170| 5 - id RD_BUF #964
170| 93 - op/sep ]
170| 59 - op/sep ;

171| 130 - kw int
171| 5 - id rd_buf_len #792
171| 61 - op/sep =
171| 45 - op/sep -
171| 2 - num 1
171| 59 - op/sep ;

172| 130 - kw int
172| 5 - id rd_char_pos #972
172| 61 - op/sep =
172| 2 - num 0
172| 59 - op/sep ;

173| 130 - kw int
173| 5 - id rd_char #240
173| 61 - op/sep =
173| 45 - op/sep -
173| 2 - num 1
173| 59 - op/sep ;

174| 130 - kw int
174| 5 - id rd_file #57
174| 61 - op/sep =
174| 45 - op/sep -
174| 2 - num 1
174| 59 - op/sep ;

175| 130 - kw int
175| 5 - id rd_line #784
175| 61 - op/sep =
175| 45 - op/sep -
175| 2 - num 1
175| 59 - op/sep ;

177| 128 - kw void
177| 5 - id rd_next #41
177| 40 - op/sep (
177| 41 - op/sep )

178| 123 - op/sep {

179| 132 - kw if
179| 40 - op/sep (
179| 5 - id rd_char_pos #972
179| 103 - op/sep g
179| 5 - id rd_buf_len #792
179| 41 - op/sep )

180| 123 - op/sep {

181| 5 - id rd_buf_len #792
181| 61 - op/sep =
181| 5 - id read #448
181| 40 - op/sep (
181| 5 - id rd_file #57
181| 44 - op/sep ,
181| 5 - id rd_buf #416
181| 44 - op/sep ,
181| 5 - id RD_BUF #964
181| 45 - op/sep -
181| 2 - num 1
181| 41 - op/sep )
181| 59 - op/sep ;

182| 132 - kw if
182| 40 - op/sep (
182| 5 - id rd_buf_len #792
182| 108 - op/sep l
182| 2 - num 0
182| 41 - op/sep )
182| 123 - op/sep {
182| 5 - id rd_char #240
182| 61 - op/sep =
182| 45 - op/sep -
182| 2 - num 1
182| 59 - op/sep ;
182| 137 - kw return
182| 59 - op/sep ;
182| 125 - op/sep }

183| 5 - id rd_buf #416
183| 91 - op/sep [
183| 5 - id rd_buf_len #792
183| 93 - op/sep ]
183| 61 - op/sep =
183| 2 - num 0
183| 59 - op/sep ;

184| 5 - id rd_char_pos #972
184| 61 - op/sep =
184| 2 - num 0
184| 59 - op/sep ;

185| 125 - op/sep }

186| 5 - id rd_char #240
186| 61 - op/sep =
186| 5 - id rd_buf #416
186| 91 - op/sep [
186| 5 - id rd_char_pos #972
186| 93 - op/sep ]
186| 59 - op/sep ;
186| 105 - op/sep i
186| 5 - id rd_char_pos #972
186| 59 - op/sep ;

187| 132 - kw if
187| 40 - op/sep (
187| 5 - id rd_char #240
187| 60 - op/sep <
187| 2 - num 0
187| 41 - op/sep )
187| 5 - id rd_char #240
187| 61 - op/sep =
187| 5 - id rd_char #240
187| 43 - op/sep +
187| 2 - num 256
187| 59 - op/sep ;

188| 125 - op/sep }

190| 128 - kw void
190| 5 - id p2wLN #481
190| 40 - op/sep (
190| 129 - kw char
190| 42 - op/sep *
190| 5 - id sev #981
190| 44 - op/sep ,
190| 129 - kw char
190| 42 - op/sep *
190| 5 - id msg #979
190| 41 - op/sep )

191| 123 - op/sep {

192| 5 - id p4 #374
192| 40 - op/sep (
192| 4 - str "\n*** "
192| 44 - op/sep ,
192| 5 - id sev #981
192| 44 - op/sep ,
192| 4 - str " at or before line "
192| 44 - op/sep ,
192| 5 - id i2s #466
192| 40 - op/sep (
192| 5 - id rd_line #784
192| 41 - op/sep )
192| 41 - op/sep )
192| 59 - op/sep ;
192| 5 - id p2n #683
192| 40 - op/sep (
192| 4 - str "\n*** "
192| 44 - op/sep ,
192| 5 - id msg #979
192| 41 - op/sep )
192| 59 - op/sep ;

193| 125 - op/sep }

197| 129 - kw char
197| 42 - op/sep *
197| 42 - op/sep *
197| 5 - id id_table #669
197| 61 - op/sep =
197| 2 - num 0
197| 59 - op/sep ;

198| 130 - kw int
198| 5 - id id_table_dim #657
198| 61 - op/sep =
198| 2 - num 0
198| 59 - op/sep ;

199| 130 - kw int
199| 5 - id id_count #399
199| 61 - op/sep =
199| 2 - num 0
199| 59 - op/sep ;

200| 130 - kw int
200| 5 - id collisions #849
200| 61 - op/sep =
200| 2 - num 0
200| 59 - op/sep ;

202| 128 - kw void
202| 5 - id id_table_create #200
202| 40 - op/sep (
202| 130 - kw int
202| 5 - id n #88
202| 41 - op/sep )

203| 123 - op/sep {

204| 5 - id id_table #669
204| 61 - op/sep =
204| 40 - op/sep (
204| 129 - kw char
204| 42 - op/sep *
204| 42 - op/sep *
204| 41 - op/sep )
204| 5 - id malloc #352
204| 40 - op/sep (
204| 2 - num 4
204| 42 - op/sep *
204| 5 - id n #88
204| 41 - op/sep )
204| 59 - op/sep ;
204| 5 - id id_table_dim #657
204| 61 - op/sep =
204| 5 - id n #88
204| 59 - op/sep ;

205| 135 - kw for
205| 40 - op/sep (
205| 100 - op/sep d
205| 5 - id n #88
205| 59 - op/sep ;
205| 5 - id n #88
205| 103 - op/sep g
205| 2 - num 0
205| 59 - op/sep ;
205| 100 - op/sep d
205| 5 - id n #88
205| 41 - op/sep )
205| 5 - id id_table #669
205| 91 - op/sep [
205| 5 - id n #88
205| 93 - op/sep ]
205| 61 - op/sep =
205| 2 - num 0
205| 59 - op/sep ;

206| 125 - op/sep }

208| 130 - kw int
208| 5 - id id_hash #7
208| 40 - op/sep (
208| 129 - kw char
208| 42 - op/sep *
208| 5 - id s #93
208| 41 - op/sep )

209| 123 - op/sep {

210| 130 - kw int
210| 5 - id h #82
210| 61 - op/sep =
210| 2 - num 5381
210| 59 - op/sep ;
210| 135 - kw for
210| 40 - op/sep (
210| 59 - op/sep ;
210| 42 - op/sep *
210| 5 - id s #93
210| 59 - op/sep ;
210| 105 - op/sep i
210| 5 - id s #93
210| 41 - op/sep )
210| 5 - id h #82
210| 61 - op/sep =
210| 40 - op/sep (
210| 5 - id h #82
210| 42 - op/sep *
210| 2 - num 66
210| 43 - op/sep +
210| 42 - op/sep *
210| 5 - id s #93
210| 41 - op/sep )
210| 37 - op/sep %
210| 2 - num 16777216
210| 59 - op/sep ;
210| 137 - kw return
210| 5 - id h #82
210| 59 - op/sep ;

211| 125 - op/sep }

213| 130 - kw int
213| 5 - id id_index #435
213| 40 - op/sep (
213| 129 - kw char
213| 42 - op/sep *
213| 5 - id s #93
213| 41 - op/sep )

214| 123 - op/sep {

215| 132 - kw if
215| 40 - op/sep (
215| 5 - id IT_DEBUG #861
215| 41 - op/sep )
215| 5 - id p1 #371
215| 40 - op/sep (
215| 5 - id s #93
215| 41 - op/sep )
215| 59 - op/sep ;

216| 130 - kw int
216| 5 - id h #82
216| 61 - op/sep =
216| 5 - id id_hash #7
216| 40 - op/sep (
216| 5 - id s #93
216| 41 - op/sep )
216| 37 - op/sep %
216| 5 - id id_table_dim #657
216| 59 - op/sep ;
216| 130 - kw int
216| 5 - id h0 #851
216| 61 - op/sep =
216| 5 - id h #82
216| 59 - op/sep ;

217| 130 - kw int
217| 5 - id collision #707
217| 61 - op/sep =
217| 2 - num 0
217| 59 - op/sep ;

218| 134 - kw while
218| 40 - op/sep (
218| 5 - id id_table #669
218| 91 - op/sep [
218| 5 - id h #82
218| 93 - op/sep ]
218| 41 - op/sep )

219| 123 - op/sep {

220| 132 - kw if
220| 40 - op/sep (
220| 5 - id strequ #915
220| 40 - op/sep (
220| 5 - id id_table #669
220| 91 - op/sep [
220| 5 - id h #82
220| 93 - op/sep ]
220| 44 - op/sep ,
220| 5 - id s #93
220| 41 - op/sep )
220| 41 - op/sep )
220| 123 - op/sep {
220| 132 - kw if
220| 40 - op/sep (
220| 5 - id IT_DEBUG #861
220| 41 - op/sep )
220| 5 - id p2n #683
220| 40 - op/sep (
220| 4 - str " == "
220| 44 - op/sep ,
220| 5 - id i2s #466
220| 40 - op/sep (
220| 5 - id h #82
220| 41 - op/sep )
220| 41 - op/sep )
220| 59 - op/sep ;
220| 137 - kw return
220| 5 - id h #82
220| 59 - op/sep ;
220| 125 - op/sep }

221| 5 - id h #82
221| 61 - op/sep =
221| 40 - op/sep (
221| 5 - id h #82
221| 43 - op/sep +
221| 2 - num 1
221| 41 - op/sep )
221| 37 - op/sep %
221| 5 - id id_table_dim #657
221| 59 - op/sep ;

222| 132 - kw if
222| 40 - op/sep (
222| 5 - id h #82
222| 101 - op/sep e
222| 5 - id h0 #851
222| 41 - op/sep )
222| 5 - id err1 #522
222| 40 - op/sep (
222| 4 - str "Too many ids; id_table is full"
222| 41 - op/sep )
222| 59 - op/sep ;

223| 5 - id collision #707
223| 61 - op/sep =
223| 2 - num 1
223| 59 - op/sep ;

224| 125 - op/sep }

225| 132 - kw if
225| 40 - op/sep (
225| 5 - id collision #707
225| 41 - op/sep )
225| 105 - op/sep i
225| 5 - id collisions #849
225| 59 - op/sep ;

226| 132 - kw if
226| 40 - op/sep (
226| 5 - id IT_DEBUG #861
226| 41 - op/sep )
226| 5 - id p2n #683
226| 40 - op/sep (
226| 4 - str " ++ "
226| 44 - op/sep ,
226| 5 - id i2s #466
226| 40 - op/sep (
226| 5 - id h #82
226| 41 - op/sep )
226| 41 - op/sep )
226| 59 - op/sep ;

227| 5 - id id_table #669
227| 91 - op/sep [
227| 5 - id h #82
227| 93 - op/sep ]
227| 61 - op/sep =
227| 5 - id strdup #854
227| 40 - op/sep (
227| 5 - id s #93
227| 41 - op/sep )
227| 59 - op/sep ;

228| 105 - op/sep i
228| 5 - id id_count #399
228| 59 - op/sep ;

229| 137 - kw return
229| 5 - id h #82
229| 59 - op/sep ;

230| 125 - op/sep }

232| 128 - kw void
232| 5 - id id_table_dump #552
232| 40 - op/sep (
232| 41 - op/sep )

233| 123 - op/sep {

234| 130 - kw int
234| 5 - id k #85
234| 61 - op/sep =
234| 2 - num 0
234| 59 - op/sep ;

235| 135 - kw for
235| 40 - op/sep (
235| 130 - kw int
235| 5 - id i #83
235| 61 - op/sep =
235| 2 - num 0
235| 59 - op/sep ;
235| 5 - id i #83
235| 60 - op/sep <
235| 5 - id id_table_dim #657
235| 59 - op/sep ;
235| 105 - op/sep i
235| 5 - id i #83
235| 41 - op/sep )

236| 132 - kw if
236| 40 - op/sep (
236| 5 - id id_table #669
236| 91 - op/sep [
236| 5 - id i #83
236| 93 - op/sep ]
236| 41 - op/sep )
236| 123 - op/sep {
236| 105 - op/sep i
236| 5 - id k #85
236| 59 - op/sep ;
236| 5 - id p3n #749
236| 40 - op/sep (
236| 5 - id i2s #466
236| 40 - op/sep (
236| 5 - id i #83
236| 41 - op/sep )
236| 44 - op/sep ,
236| 4 - str " "
236| 44 - op/sep ,
236| 5 - id id_table #669
236| 91 - op/sep [
236| 5 - id i #83
236| 93 - op/sep ]
236| 41 - op/sep )
236| 59 - op/sep ;
236| 125 - op/sep }

237| 5 - id p1 #371
237| 40 - op/sep (
237| 4 - str "-------------------------------------\n"
237| 41 - op/sep )
237| 59 - op/sep ;

238| 5 - id p2 #372
238| 40 - op/sep (
238| 5 - id i2s #466
238| 40 - op/sep (
238| 5 - id k #85
238| 41 - op/sep )
238| 44 - op/sep ,
238| 4 - str " ids, "
238| 41 - op/sep )
238| 59 - op/sep ;

239| 5 - id assert #124
239| 40 - op/sep (
239| 5 - id k #85
239| 101 - op/sep e
239| 5 - id id_count #399
239| 44 - op/sep ,
239| 4 - str "Errors in id_table (negative hash?)"
239| 41 - op/sep )
239| 59 - op/sep ;

240| 5 - id p2 #372
240| 40 - op/sep (
240| 5 - id i2s #466
240| 40 - op/sep (
240| 5 - id collisions #849
240| 41 - op/sep )
240| 44 - op/sep ,
240| 4 - str " collisions\n"
240| 41 - op/sep )
240| 59 - op/sep ;

241| 125 - op/sep }

245| 129 - kw char
245| 42 - op/sep *
245| 42 - op/sep *
245| 5 - id sl_table #893
245| 59 - op/sep ;

246| 130 - kw int
246| 5 - id sl_count #622
246| 59 - op/sep ;

248| 128 - kw void
248| 5 - id sl_table_create #533
248| 40 - op/sep (
248| 130 - kw int
248| 5 - id n #88
248| 41 - op/sep )
248| 123 - op/sep {
248| 5 - id sl_table #893
248| 61 - op/sep =
248| 40 - op/sep (
248| 129 - kw char
248| 42 - op/sep *
248| 42 - op/sep *
248| 41 - op/sep )
248| 5 - id malloc #352
248| 40 - op/sep (
248| 5 - id n #88
248| 42 - op/sep *
248| 5 - id INTSZ #949
248| 41 - op/sep )
248| 59 - op/sep ;
248| 5 - id sl_count #622
248| 61 - op/sep =
248| 2 - num 0
248| 59 - op/sep ;
248| 125 - op/sep }

250| 130 - kw int
250| 5 - id sl_add #864
250| 40 - op/sep (
250| 129 - kw char
250| 42 - op/sep *
250| 5 - id s #93
250| 41 - op/sep )

251| 123 - op/sep {

252| 135 - kw for
252| 40 - op/sep (
252| 130 - kw int
252| 5 - id i #83
252| 61 - op/sep =
252| 2 - num 0
252| 59 - op/sep ;
252| 5 - id i #83
252| 60 - op/sep <
252| 5 - id sl_count #622
252| 59 - op/sep ;
252| 105 - op/sep i
252| 5 - id i #83
252| 41 - op/sep )
252| 132 - kw if
252| 40 - op/sep (
252| 5 - id strequ #915
252| 40 - op/sep (
252| 5 - id s #93
252| 44 - op/sep ,
252| 5 - id sl_table #893
252| 91 - op/sep [
252| 5 - id i #83
252| 93 - op/sep ]
252| 41 - op/sep )
252| 41 - op/sep )
252| 137 - kw return
252| 5 - id i #83
252| 59 - op/sep ;

253| 132 - kw if
253| 40 - op/sep (
253| 5 - id sl_count #622
253| 101 - op/sep e
253| 5 - id SL_TABLE_DIM #95
253| 41 - op/sep )
253| 5 - id err1 #522
253| 40 - op/sep (
253| 4 - str "Too many literal strings"
253| 41 - op/sep )
253| 59 - op/sep ;

254| 5 - id sl_table #893
254| 91 - op/sep [
254| 5 - id sl_count #622
254| 93 - op/sep ]
254| 61 - op/sep =
254| 5 - id strdup #854
254| 40 - op/sep (
254| 5 - id s #93
254| 41 - op/sep )
254| 59 - op/sep ;

255| 105 - op/sep i
255| 5 - id sl_count #622
255| 59 - op/sep ;

256| 137 - kw return
256| 5 - id sl_count #622
256| 45 - op/sep -
256| 2 - num 1
256| 59 - op/sep ;

257| 125 - op/sep }

259| 128 - kw void
259| 5 - id sl_table_dump #891
259| 40 - op/sep (
259| 41 - op/sep )

260| 123 - op/sep {

261| 135 - kw for
261| 40 - op/sep (
261| 130 - kw int
261| 5 - id i #83
261| 61 - op/sep =
261| 2 - num 0
261| 59 - op/sep ;
261| 5 - id i #83
261| 60 - op/sep <
261| 5 - id sl_count #622
261| 59 - op/sep ;
261| 105 - op/sep i
261| 5 - id i #83
261| 41 - op/sep )
261| 5 - id p3n #749
261| 40 - op/sep (
261| 5 - id i2s #466
261| 40 - op/sep (
261| 5 - id i #83
261| 41 - op/sep )
261| 44 - op/sep ,
261| 4 - str " -> "
261| 44 - op/sep ,
261| 5 - id str_repr #862
261| 40 - op/sep (
261| 5 - id sl_table #893
261| 91 - op/sep [
261| 5 - id i #83
261| 93 - op/sep ]
261| 41 - op/sep )
261| 41 - op/sep )
261| 59 - op/sep ;

262| 125 - op/sep }

266| 130 - kw int
266| 5 - id sc_tkn #655
266| 59 - op/sep ;

267| 129 - kw char
267| 5 - id sc_text #842
267| 91 - op/sep [
267| 5 - id STR_MAX_SZ #631
267| 93 - op/sep ]
267| 59 - op/sep ;

268| 130 - kw int
268| 5 - id sc_num #403
268| 59 - op/sep ;

270| 128 - kw void
270| 5 - id cg_line #577
270| 40 - op/sep (
270| 41 - op/sep )
270| 59 - op/sep ;

272| 128 - kw void
272| 5 - id sc_do_backslash #765
272| 40 - op/sep (
272| 41 - op/sep )

273| 123 - op/sep {

274| 5 - id rd_next #41
274| 40 - op/sep (
274| 41 - op/sep )
274| 59 - op/sep ;

275| 132 - kw if
275| 40 - op/sep (
275| 5 - id rd_char #240
275| 101 - op/sep e
275| 3 - chr 110
275| 41 - op/sep )
275| 5 - id rd_char #240
275| 61 - op/sep =
275| 3 - chr 10
275| 59 - op/sep ;

276| 133 - kw else
276| 132 - kw if
276| 40 - op/sep (
276| 5 - id rd_char #240
276| 101 - op/sep e
276| 3 - chr 114
276| 41 - op/sep )
276| 5 - id rd_char #240
276| 61 - op/sep =
276| 3 - chr 13
276| 59 - op/sep ;

277| 133 - kw else
277| 132 - kw if
277| 40 - op/sep (
277| 5 - id rd_char #240
277| 101 - op/sep e
277| 3 - chr 98
277| 41 - op/sep )
277| 5 - id rd_char #240
277| 61 - op/sep =
277| 3 - chr 8
277| 59 - op/sep ;

278| 133 - kw else
278| 132 - kw if
278| 40 - op/sep (
278| 5 - id rd_char #240
278| 101 - op/sep e
278| 3 - chr 48
278| 41 - op/sep )
278| 5 - id rd_char #240
278| 61 - op/sep =
278| 2 - num 0
278| 59 - op/sep ;

279| 125 - op/sep }

281| 130 - kw int
281| 5 - id sc_read_next #227
281| 40 - op/sep (
281| 41 - op/sep )

282| 123 - op/sep {

283| 132 - kw if
283| 40 - op/sep (
283| 5 - id rd_char #240
283| 60 - op/sep <
283| 2 - num 0
283| 41 - op/sep )
283| 123 - op/sep {
283| 5 - id rd_next #41
283| 40 - op/sep (
283| 41 - op/sep )
283| 59 - op/sep ;
283| 5 - id rd_line #784
283| 61 - op/sep =
283| 2 - num 1
283| 59 - op/sep ;
283| 5 - id cg_line #577
283| 40 - op/sep (
283| 41 - op/sep )
283| 59 - op/sep ;
283| 125 - op/sep }

284| 134 - kw while
284| 40 - op/sep (
284| 5 - id rd_char #240
284| 101 - op/sep e
284| 3 - chr 32
284| 111 - op/sep o
284| 5 - id rd_char #240
284| 101 - op/sep e
284| 3 - chr 10
284| 111 - op/sep o
284| 5 - id rd_char #240
284| 101 - op/sep e
284| 3 - chr 13
284| 41 - op/sep )

285| 123 - op/sep {

286| 132 - kw if
286| 40 - op/sep (
286| 5 - id rd_char #240
286| 101 - op/sep e
286| 3 - chr 10
286| 41 - op/sep )
286| 123 - op/sep {
286| 105 - op/sep i
286| 5 - id rd_line #784
286| 59 - op/sep ;
286| 5 - id cg_line #577
286| 40 - op/sep (
286| 41 - op/sep )
286| 59 - op/sep ;
286| 125 - op/sep }

287| 5 - id rd_next #41
287| 40 - op/sep (
287| 41 - op/sep )
287| 59 - op/sep ;

288| 125 - op/sep }

289| 132 - kw if
289| 40 - op/sep (
289| 5 - id rd_char #240
289| 60 - op/sep <
289| 2 - num 0
289| 41 - op/sep )
289| 137 - kw return
289| 5 - id Eof #22
289| 59 - op/sep ;

290| 132 - kw if
290| 40 - op/sep (
290| 5 - id rd_char #240
290| 103 - op/sep g
290| 3 - chr 48
290| 97 - op/sep a
290| 5 - id rd_char #240
290| 108 - op/sep l
290| 3 - chr 57
290| 41 - op/sep )

291| 123 - op/sep {

292| 130 - kw int
292| 5 - id v #96
292| 61 - op/sep =
292| 5 - id rd_char #240
292| 45 - op/sep -
292| 3 - chr 48
292| 59 - op/sep ;

293| 132 - kw if
293| 40 - op/sep (
293| 5 - id v #96
293| 101 - op/sep e
293| 2 - num 0
293| 41 - op/sep )

294| 135 - kw for
294| 40 - op/sep (
294| 5 - id rd_next #41
294| 40 - op/sep (
294| 41 - op/sep )
294| 59 - op/sep ;
294| 5 - id rd_char #240
294| 103 - op/sep g
294| 3 - chr 48
294| 97 - op/sep a
294| 5 - id rd_char #240
294| 108 - op/sep l
294| 3 - chr 55
294| 59 - op/sep ;
294| 5 - id rd_next #41
294| 40 - op/sep (
294| 41 - op/sep )
294| 41 - op/sep )
294| 5 - id v #96
294| 61 - op/sep =
294| 2 - num 8
294| 42 - op/sep *
294| 5 - id v #96
294| 43 - op/sep +
294| 5 - id rd_char #240
294| 45 - op/sep -
294| 3 - chr 48
294| 59 - op/sep ;

296| 133 - kw else

297| 135 - kw for
297| 40 - op/sep (
297| 5 - id rd_next #41
297| 40 - op/sep (
297| 41 - op/sep )
297| 59 - op/sep ;
297| 5 - id rd_char #240
297| 103 - op/sep g
297| 3 - chr 48
297| 97 - op/sep a
297| 5 - id rd_char #240
297| 108 - op/sep l
297| 3 - chr 57
297| 59 - op/sep ;
297| 5 - id rd_next #41
297| 40 - op/sep (
297| 41 - op/sep )
297| 41 - op/sep )
297| 5 - id v #96
297| 61 - op/sep =
297| 2 - num 10
297| 42 - op/sep *
297| 5 - id v #96
297| 43 - op/sep +
297| 5 - id rd_char #240
297| 45 - op/sep -
297| 3 - chr 48
297| 59 - op/sep ;

298| 5 - id sc_num #403
298| 61 - op/sep =
298| 5 - id v #96
298| 59 - op/sep ;

299| 137 - kw return
299| 5 - id Num #278
299| 59 - op/sep ;

300| 125 - op/sep }

301| 132 - kw if
301| 40 - op/sep (
301| 5 - id is_abc #64
301| 40 - op/sep (
301| 5 - id rd_char #240
301| 41 - op/sep )
301| 41 - op/sep )

302| 123 - op/sep {

303| 129 - kw char
303| 42 - op/sep *
303| 5 - id p #90
303| 61 - op/sep =
303| 5 - id sc_text #842
303| 59 - op/sep ;

304| 134 - kw while
304| 40 - op/sep (
304| 5 - id is_abc #64
304| 40 - op/sep (
304| 5 - id rd_char #240
304| 41 - op/sep )
304| 111 - op/sep o
304| 5 - id rd_char #240
304| 103 - op/sep g
304| 3 - chr 48
304| 97 - op/sep a
304| 5 - id rd_char #240
304| 108 - op/sep l
304| 3 - chr 57
304| 41 - op/sep )
304| 123 - op/sep {
304| 42 - op/sep *
304| 5 - id p #90
304| 61 - op/sep =
304| 5 - id rd_char #240
304| 59 - op/sep ;
304| 105 - op/sep i
304| 5 - id p #90
304| 59 - op/sep ;
304| 5 - id rd_next #41
304| 40 - op/sep (
304| 41 - op/sep )
304| 59 - op/sep ;
304| 125 - op/sep }

305| 42 - op/sep *
305| 5 - id p #90
305| 61 - op/sep =
305| 2 - num 0
305| 59 - op/sep ;

306| 130 - kw int
306| 5 - id k #85
306| 61 - op/sep =
306| 5 - id find_kw #796
306| 40 - op/sep (
306| 5 - id sc_text #842
306| 41 - op/sep )
306| 59 - op/sep ;

307| 132 - kw if
307| 40 - op/sep (
307| 5 - id k #85
307| 103 - op/sep g
307| 2 - num 0
307| 41 - op/sep )
307| 137 - kw return
307| 5 - id Kw #17
307| 43 - op/sep +
307| 5 - id k #85
307| 59 - op/sep ;

308| 5 - id sc_num #403
308| 61 - op/sep =
308| 5 - id id_index #435
308| 40 - op/sep (
308| 5 - id sc_text #842
308| 41 - op/sep )
308| 59 - op/sep ;

309| 137 - kw return
309| 5 - id Id #875
309| 59 - op/sep ;

310| 125 - op/sep }

311| 132 - kw if
311| 40 - op/sep (
311| 5 - id rd_char #240
311| 101 - op/sep e
311| 3 - chr 34
311| 41 - op/sep )

312| 123 - op/sep {

313| 5 - id rd_next #41
313| 40 - op/sep (
313| 41 - op/sep )
313| 59 - op/sep ;

314| 129 - kw char
314| 42 - op/sep *
314| 5 - id p #90
314| 61 - op/sep =
314| 5 - id sc_text #842
314| 59 - op/sep ;

315| 134 - kw while
315| 40 - op/sep (
315| 5 - id rd_char #240
315| 110 - op/sep n
315| 3 - chr 34
315| 41 - op/sep )

316| 123 - op/sep {

317| 132 - kw if
317| 40 - op/sep (
317| 5 - id rd_char #240
317| 101 - op/sep e
317| 3 - chr 92
317| 41 - op/sep )
317| 5 - id sc_do_backslash #765
317| 40 - op/sep (
317| 41 - op/sep )
317| 59 - op/sep ;

318| 42 - op/sep *
318| 5 - id p #90
318| 61 - op/sep =
318| 5 - id rd_char #240
318| 59 - op/sep ;
318| 105 - op/sep i
318| 5 - id p #90
318| 59 - op/sep ;
318| 5 - id rd_next #41
318| 40 - op/sep (
318| 41 - op/sep )
318| 59 - op/sep ;

319| 125 - op/sep }

320| 42 - op/sep *
320| 5 - id p #90
320| 61 - op/sep =
320| 2 - num 0
320| 59 - op/sep ;

321| 5 - id sc_num #403
321| 61 - op/sep =
321| 5 - id sl_add #864
321| 40 - op/sep (
321| 5 - id sc_text #842
321| 41 - op/sep )
321| 59 - op/sep ;

322| 5 - id rd_next #41
322| 40 - op/sep (
322| 41 - op/sep )
322| 59 - op/sep ;

323| 137 - kw return
323| 5 - id Str #808
323| 59 - op/sep ;

324| 125 - op/sep }

325| 132 - kw if
325| 40 - op/sep (
325| 5 - id rd_char #240
325| 101 - op/sep e
325| 3 - chr 39
325| 41 - op/sep )

326| 123 - op/sep {

327| 5 - id rd_next #41
327| 40 - op/sep (
327| 41 - op/sep )
327| 59 - op/sep ;

328| 132 - kw if
328| 40 - op/sep (
328| 5 - id rd_char #240
328| 101 - op/sep e
328| 3 - chr 92
328| 41 - op/sep )
328| 5 - id sc_do_backslash #765
328| 40 - op/sep (
328| 41 - op/sep )
328| 59 - op/sep ;

329| 5 - id sc_num #403
329| 61 - op/sep =
329| 5 - id rd_char #240
329| 59 - op/sep ;

330| 5 - id rd_next #41
330| 40 - op/sep (
330| 41 - op/sep )
330| 59 - op/sep ;

331| 132 - kw if
331| 40 - op/sep (
331| 5 - id rd_char #240
331| 110 - op/sep n
331| 3 - chr 39
331| 41 - op/sep )
331| 137 - kw return
331| 5 - id Err #232
331| 59 - op/sep ;

332| 5 - id rd_next #41
332| 40 - op/sep (
332| 41 - op/sep )
332| 59 - op/sep ;

333| 137 - kw return
333| 5 - id Chr #950
333| 59 - op/sep ;

334| 125 - op/sep }

335| 132 - kw if
335| 40 - op/sep (
335| 5 - id memchr #91
335| 40 - op/sep (
335| 4 - str "(){}[],;*%^~"
335| 44 - op/sep ,
335| 5 - id rd_char #240
335| 44 - op/sep ,
335| 2 - num 12
335| 41 - op/sep )
335| 41 - op/sep )

336| 123 - op/sep {

337| 130 - kw int
337| 5 - id c #77
337| 61 - op/sep =
337| 5 - id rd_char #240
337| 59 - op/sep ;
337| 5 - id rd_next #41
337| 40 - op/sep (
337| 41 - op/sep )
337| 59 - op/sep ;

338| 137 - kw return
338| 5 - id c #77
338| 59 - op/sep ;

339| 125 - op/sep }

340| 132 - kw if
340| 40 - op/sep (
340| 5 - id rd_char #240
340| 101 - op/sep e
340| 3 - chr 61
340| 111 - op/sep o
340| 5 - id rd_char #240
340| 101 - op/sep e
340| 3 - chr 60
340| 111 - op/sep o
340| 5 - id rd_char #240
340| 101 - op/sep e
340| 3 - chr 62
340| 111 - op/sep o
340| 5 - id rd_char #240
340| 101 - op/sep e
340| 3 - chr 33
340| 41 - op/sep )

341| 123 - op/sep {

342| 130 - kw int
342| 5 - id c #77
342| 61 - op/sep =
342| 5 - id rd_char #240
342| 59 - op/sep ;
342| 5 - id rd_next #41
342| 40 - op/sep (
342| 41 - op/sep )
342| 59 - op/sep ;

343| 132 - kw if
343| 40 - op/sep (
343| 5 - id rd_char #240
343| 101 - op/sep e
343| 3 - chr 61
343| 41 - op/sep )

344| 123 - op/sep {

345| 5 - id rd_next #41
345| 40 - op/sep (
345| 41 - op/sep )
345| 59 - op/sep ;

346| 132 - kw if
346| 40 - op/sep (
346| 5 - id c #77
346| 101 - op/sep e
346| 3 - chr 61
346| 41 - op/sep )
346| 5 - id c #77
346| 61 - op/sep =
346| 3 - chr 101
346| 59 - op/sep ;
346| 133 - kw else
346| 132 - kw if
346| 40 - op/sep (
346| 5 - id c #77
346| 101 - op/sep e
346| 3 - chr 60
346| 41 - op/sep )
346| 5 - id c #77
346| 61 - op/sep =
346| 3 - chr 108
346| 59 - op/sep ;
346| 133 - kw else
346| 132 - kw if
346| 40 - op/sep (
346| 5 - id c #77
346| 101 - op/sep e
346| 3 - chr 62
346| 41 - op/sep )
346| 5 - id c #77
346| 61 - op/sep =
346| 3 - chr 103
346| 59 - op/sep ;
346| 133 - kw else
346| 5 - id c #77
346| 61 - op/sep =
346| 3 - chr 110
346| 59 - op/sep ;

347| 125 - op/sep }

348| 137 - kw return
348| 5 - id c #77
348| 59 - op/sep ;

349| 125 - op/sep }

350| 132 - kw if
350| 40 - op/sep (
350| 5 - id rd_char #240
350| 101 - op/sep e
350| 3 - chr 43
350| 111 - op/sep o
350| 5 - id rd_char #240
350| 101 - op/sep e
350| 3 - chr 45
350| 41 - op/sep )

351| 123 - op/sep {

352| 130 - kw int
352| 5 - id c #77
352| 61 - op/sep =
352| 5 - id rd_char #240
352| 59 - op/sep ;
352| 5 - id rd_next #41
352| 40 - op/sep (
352| 41 - op/sep )
352| 59 - op/sep ;

353| 132 - kw if
353| 40 - op/sep (
353| 5 - id rd_char #240
353| 101 - op/sep e
353| 5 - id c #77
353| 41 - op/sep )
353| 123 - op/sep {
353| 5 - id rd_next #41
353| 40 - op/sep (
353| 41 - op/sep )
353| 59 - op/sep ;
353| 132 - kw if
353| 40 - op/sep (
353| 5 - id c #77
353| 101 - op/sep e
353| 3 - chr 43
353| 41 - op/sep )
353| 5 - id c #77
353| 61 - op/sep =
353| 3 - chr 105
353| 59 - op/sep ;
353| 133 - kw else
353| 5 - id c #77
353| 61 - op/sep =
353| 3 - chr 100
353| 59 - op/sep ;
353| 125 - op/sep }

354| 137 - kw return
354| 5 - id c #77
354| 59 - op/sep ;

355| 125 - op/sep }

356| 132 - kw if
356| 40 - op/sep (
356| 5 - id rd_char #240
356| 101 - op/sep e
356| 3 - chr 38
356| 111 - op/sep o
356| 5 - id rd_char #240
356| 101 - op/sep e
356| 3 - chr 124
356| 41 - op/sep )

357| 123 - op/sep {

358| 130 - kw int
358| 5 - id c #77
358| 61 - op/sep =
358| 5 - id rd_char #240
358| 59 - op/sep ;
358| 5 - id rd_next #41
358| 40 - op/sep (
358| 41 - op/sep )
358| 59 - op/sep ;

359| 132 - kw if
359| 40 - op/sep (
359| 5 - id rd_char #240
359| 101 - op/sep e
359| 5 - id c #77
359| 41 - op/sep )
359| 123 - op/sep {
359| 5 - id rd_next #41
359| 40 - op/sep (
359| 41 - op/sep )
359| 59 - op/sep ;
359| 132 - kw if
359| 40 - op/sep (
359| 5 - id c #77
359| 101 - op/sep e
359| 3 - chr 38
359| 41 - op/sep )
359| 5 - id c #77
359| 61 - op/sep =
359| 3 - chr 97
359| 59 - op/sep ;
359| 133 - kw else
359| 5 - id c #77
359| 61 - op/sep =
359| 3 - chr 111
359| 59 - op/sep ;
359| 125 - op/sep }

360| 137 - kw return
360| 5 - id c #77
360| 59 - op/sep ;

361| 125 - op/sep }

362| 132 - kw if
362| 40 - op/sep (
362| 5 - id rd_char #240
362| 101 - op/sep e
362| 3 - chr 35
362| 41 - op/sep )

363| 123 - op/sep {

364| 5 - id rd_next #41
364| 40 - op/sep (
364| 41 - op/sep )
364| 59 - op/sep ;

365| 134 - kw while
365| 40 - op/sep (
365| 5 - id rd_char #240
365| 110 - op/sep n
365| 3 - chr 10
365| 97 - op/sep a
365| 5 - id rd_char #240
365| 62 - op/sep >
365| 2 - num 0
365| 41 - op/sep )

366| 5 - id rd_next #41
366| 40 - op/sep (
366| 41 - op/sep )
366| 59 - op/sep ;

367| 132 - kw if
367| 40 - op/sep (
367| 5 - id rd_char #240
367| 101 - op/sep e
367| 3 - chr 10
367| 41 - op/sep )
367| 123 - op/sep {
367| 105 - op/sep i
367| 5 - id rd_line #784
367| 59 - op/sep ;
367| 5 - id cg_line #577
367| 40 - op/sep (
367| 41 - op/sep )
367| 59 - op/sep ;
367| 125 - op/sep }

368| 132 - kw if
368| 40 - op/sep (
368| 5 - id rd_char #240
368| 62 - op/sep >
368| 2 - num 0
368| 41 - op/sep )
368| 5 - id rd_next #41
368| 40 - op/sep (
368| 41 - op/sep )
368| 59 - op/sep ;

369| 137 - kw return
369| 5 - id sc_read_next #227
369| 40 - op/sep (
369| 41 - op/sep )
369| 59 - op/sep ;

370| 125 - op/sep }

371| 132 - kw if
371| 40 - op/sep (
371| 5 - id rd_char #240
371| 101 - op/sep e
371| 3 - chr 47
371| 41 - op/sep )

372| 123 - op/sep {

373| 5 - id rd_next #41
373| 40 - op/sep (
373| 41 - op/sep )
373| 59 - op/sep ;

374| 132 - kw if
374| 40 - op/sep (
374| 5 - id rd_char #240
374| 101 - op/sep e
374| 3 - chr 47
374| 41 - op/sep )

375| 123 - op/sep {

376| 5 - id rd_next #41
376| 40 - op/sep (
376| 41 - op/sep )
376| 59 - op/sep ;

377| 134 - kw while
377| 40 - op/sep (
377| 5 - id rd_char #240
377| 110 - op/sep n
377| 3 - chr 10
377| 97 - op/sep a
377| 5 - id rd_char #240
377| 62 - op/sep >
377| 2 - num 0
377| 41 - op/sep )

378| 5 - id rd_next #41
378| 40 - op/sep (
378| 41 - op/sep )
378| 59 - op/sep ;

379| 132 - kw if
379| 40 - op/sep (
379| 5 - id rd_char #240
379| 101 - op/sep e
379| 3 - chr 10
379| 41 - op/sep )
379| 123 - op/sep {
379| 105 - op/sep i
379| 5 - id rd_line #784
379| 59 - op/sep ;
379| 5 - id cg_line #577
379| 40 - op/sep (
379| 41 - op/sep )
379| 59 - op/sep ;
379| 125 - op/sep }

380| 132 - kw if
380| 40 - op/sep (
380| 5 - id rd_char #240
380| 62 - op/sep >
380| 2 - num 0
380| 41 - op/sep )
380| 5 - id rd_next #41
380| 40 - op/sep (
380| 41 - op/sep )
380| 59 - op/sep ;

381| 137 - kw return
381| 5 - id sc_read_next #227
381| 40 - op/sep (
381| 41 - op/sep )
381| 59 - op/sep ;

382| 125 - op/sep }

383| 132 - kw if
383| 40 - op/sep (
383| 5 - id rd_char #240
383| 101 - op/sep e
383| 3 - chr 42
383| 41 - op/sep )

384| 123 - op/sep {

385| 5 - id rd_next #41
385| 40 - op/sep (
385| 41 - op/sep )
385| 59 - op/sep ;

386| 132 - kw if
386| 40 - op/sep (
386| 5 - id rd_char #240
386| 101 - op/sep e
386| 3 - chr 10
386| 41 - op/sep )
386| 123 - op/sep {
386| 105 - op/sep i
386| 5 - id rd_line #784
386| 59 - op/sep ;
386| 5 - id cg_line #577
386| 40 - op/sep (
386| 41 - op/sep )
386| 59 - op/sep ;
386| 125 - op/sep }

387| 134 - kw while
387| 40 - op/sep (
387| 2 - num 1
387| 41 - op/sep )

388| 123 - op/sep {

389| 134 - kw while
389| 40 - op/sep (
389| 5 - id rd_char #240
389| 110 - op/sep n
389| 3 - chr 42
389| 97 - op/sep a
389| 5 - id rd_char #240
389| 62 - op/sep >
389| 2 - num 0
389| 41 - op/sep )

390| 123 - op/sep {

391| 5 - id rd_next #41
391| 40 - op/sep (
391| 41 - op/sep )
391| 59 - op/sep ;

392| 132 - kw if
392| 40 - op/sep (
392| 5 - id rd_char #240
392| 101 - op/sep e
392| 3 - chr 10
392| 41 - op/sep )
392| 123 - op/sep {
392| 105 - op/sep i
392| 5 - id rd_line #784
392| 59 - op/sep ;
392| 5 - id cg_line #577
392| 40 - op/sep (
392| 41 - op/sep )
392| 59 - op/sep ;
392| 125 - op/sep }

393| 125 - op/sep }

394| 132 - kw if
394| 40 - op/sep (
394| 5 - id rd_char #240
394| 62 - op/sep >
394| 2 - num 0
394| 41 - op/sep )
394| 5 - id rd_next #41
394| 40 - op/sep (
394| 41 - op/sep )
394| 59 - op/sep ;

395| 132 - kw if
395| 40 - op/sep (
395| 5 - id rd_char #240
395| 101 - op/sep e
395| 3 - chr 47
395| 41 - op/sep )

396| 136 - kw break
396| 59 - op/sep ;

397| 125 - op/sep }

398| 132 - kw if
398| 40 - op/sep (
398| 5 - id rd_char #240
398| 62 - op/sep >
398| 2 - num 0
398| 41 - op/sep )
398| 5 - id rd_next #41
398| 40 - op/sep (
398| 41 - op/sep )
398| 59 - op/sep ;

399| 137 - kw return
399| 5 - id sc_read_next #227
399| 40 - op/sep (
399| 41 - op/sep )
399| 59 - op/sep ;

400| 125 - op/sep }

401| 137 - kw return
401| 3 - chr 47
401| 59 - op/sep ;

402| 125 - op/sep }

403| 5 - id sc_text #842
403| 91 - op/sep [
403| 2 - num 0
403| 93 - op/sep ]
403| 61 - op/sep =
403| 5 - id rd_char #240
403| 59 - op/sep ;
403| 5 - id sc_text #842
403| 91 - op/sep [
403| 2 - num 1
403| 93 - op/sep ]
403| 61 - op/sep =
403| 2 - num 0
403| 59 - op/sep ;

404| 137 - kw return
404| 5 - id Err #232
404| 59 - op/sep ;

405| 125 - op/sep }

407| 130 - kw int
407| 5 - id sc_n_tokens #257
407| 61 - op/sep =
407| 2 - num 0
407| 59 - op/sep ;

408| 130 - kw int
408| 5 - id sc_prev_line #434
408| 59 - op/sep ;

410| 128 - kw void
410| 5 - id sc_next #247
410| 40 - op/sep (
410| 41 - op/sep )

411| 123 - op/sep {

412| 5 - id sc_tkn #655
412| 61 - op/sep =
412| 5 - id sc_read_next #227
412| 40 - op/sep (
412| 41 - op/sep )
412| 59 - op/sep ;

413| 105 - op/sep i
413| 5 - id sc_n_tokens #257
413| 59 - op/sep ;

414| 132 - kw if
414| 40 - op/sep (
414| 5 - id SC_DEBUG #598
414| 41 - op/sep )

415| 123 - op/sep {

416| 132 - kw if
416| 40 - op/sep (
416| 5 - id rd_line #784
416| 110 - op/sep n
416| 5 - id sc_prev_line #434
416| 41 - op/sep )
416| 123 - op/sep {
416| 5 - id p0n #551
416| 40 - op/sep (
416| 41 - op/sep )
416| 59 - op/sep ;
416| 5 - id sc_prev_line #434
416| 61 - op/sep =
416| 5 - id rd_line #784
416| 59 - op/sep ;
416| 125 - op/sep }

417| 5 - id p2 #372
417| 40 - op/sep (
417| 5 - id i2s #466
417| 40 - op/sep (
417| 5 - id rd_line #784
417| 41 - op/sep )
417| 44 - op/sep ,
417| 4 - str "| "
417| 41 - op/sep )
417| 59 - op/sep ;
417| 5 - id p2 #372
417| 40 - op/sep (
417| 5 - id i2s #466
417| 40 - op/sep (
417| 5 - id sc_tkn #655
417| 41 - op/sep )
417| 44 - op/sep ,
417| 4 - str " - "
417| 41 - op/sep )
417| 59 - op/sep ;

418| 132 - kw if
418| 40 - op/sep (
418| 5 - id sc_tkn #655
418| 103 - op/sep g
418| 5 - id Kw #17
418| 41 - op/sep )
418| 5 - id p2 #372
418| 40 - op/sep (
418| 4 - str "kw "
418| 44 - op/sep ,
418| 5 - id KWDS #764
418| 91 - op/sep [
418| 5 - id sc_tkn #655
418| 45 - op/sep -
418| 5 - id Kw #17
418| 93 - op/sep ]
418| 41 - op/sep )
418| 59 - op/sep ;

419| 133 - kw else
419| 132 - kw if
419| 40 - op/sep (
419| 5 - id sc_tkn #655
419| 101 - op/sep e
419| 5 - id Id #875
419| 41 - op/sep )
419| 5 - id p4 #374
419| 40 - op/sep (
419| 4 - str "id "
419| 44 - op/sep ,
419| 5 - id id_table #669
419| 91 - op/sep [
419| 5 - id sc_num #403
419| 93 - op/sep ]
419| 44 - op/sep ,
419| 4 - str " #"
419| 44 - op/sep ,
419| 5 - id i2s #466
419| 40 - op/sep (
419| 5 - id sc_num #403
419| 41 - op/sep )
419| 41 - op/sep )
419| 59 - op/sep ;

420| 133 - kw else
420| 132 - kw if
420| 40 - op/sep (
420| 5 - id sc_tkn #655
420| 101 - op/sep e
420| 5 - id Str #808
420| 41 - op/sep )
420| 5 - id p2 #372
420| 40 - op/sep (
420| 4 - str "str "
420| 44 - op/sep ,
420| 5 - id str_repr #862
420| 40 - op/sep (
420| 5 - id sl_table #893
420| 91 - op/sep [
420| 5 - id sc_num #403
420| 93 - op/sep ]
420| 41 - op/sep )
420| 41 - op/sep )
420| 59 - op/sep ;

421| 133 - kw else
421| 132 - kw if
421| 40 - op/sep (
421| 5 - id sc_tkn #655
421| 101 - op/sep e
421| 5 - id Num #278
421| 41 - op/sep )
421| 5 - id p2 #372
421| 40 - op/sep (
421| 4 - str "num "
421| 44 - op/sep ,
421| 5 - id i2s #466
421| 40 - op/sep (
421| 5 - id sc_num #403
421| 41 - op/sep )
421| 41 - op/sep )
421| 59 - op/sep ;

422| 133 - kw else
422| 132 - kw if
422| 40 - op/sep (
422| 5 - id sc_tkn #655
422| 101 - op/sep e
422| 5 - id Chr #950
422| 41 - op/sep )
422| 5 - id p2 #372
422| 40 - op/sep (
422| 4 - str "chr "
422| 44 - op/sep ,
422| 5 - id i2s #466
422| 40 - op/sep (
422| 5 - id sc_num #403
422| 41 - op/sep )
422| 41 - op/sep )
422| 59 - op/sep ;

423| 133 - kw else
423| 132 - kw if
423| 40 - op/sep (
423| 5 - id sc_tkn #655
423| 101 - op/sep e
423| 5 - id Eof #22
423| 41 - op/sep )
423| 5 - id p1 #371
423| 40 - op/sep (
423| 4 - str "eof\n"
423| 41 - op/sep )
423| 59 - op/sep ;

424| 133 - kw else
424| 132 - kw if
424| 40 - op/sep (
424| 5 - id sc_tkn #655
424| 101 - op/sep e
424| 5 - id Err #232
424| 41 - op/sep )
424| 5 - id p2 #372
424| 40 - op/sep (
424| 4 - str "err"
424| 44 - op/sep ,
424| 5 - id sc_text #842
424| 41 - op/sep )
424| 59 - op/sep ;

425| 133 - kw else
425| 132 - kw if
425| 40 - op/sep (
425| 5 - id sc_tkn #655
425| 60 - op/sep <
425| 5 - id Kw #17
425| 41 - op/sep )
425| 123 - op/sep {
425| 129 - kw char
425| 5 - id o #89
425| 91 - op/sep [
425| 2 - num 2
425| 93 - op/sep ]
425| 59 - op/sep ;
425| 5 - id o #89
425| 91 - op/sep [
425| 2 - num 0
425| 93 - op/sep ]
425| 61 - op/sep =
425| 5 - id sc_tkn #655
425| 59 - op/sep ;
425| 5 - id o #89
425| 91 - op/sep [
425| 2 - num 1
425| 93 - op/sep ]
425| 61 - op/sep =
425| 3 - chr 0
425| 59 - op/sep ;
425| 5 - id p2 #372
425| 40 - op/sep (
425| 4 - str "op/sep "
425| 44 - op/sep ,
425| 5 - id o #89
425| 41 - op/sep )
425| 59 - op/sep ;
425| 125 - op/sep }

426| 133 - kw else
426| 5 - id p2 #372
426| 40 - op/sep (
426| 4 - str "???"
426| 44 - op/sep ,
426| 5 - id sc_text #842
426| 41 - op/sep )
426| 59 - op/sep ;

427| 5 - id p0n #551
427| 40 - op/sep (
427| 41 - op/sep )
427| 59 - op/sep ;

428| 125 - op/sep }

429| 125 - op/sep }

433| 130 - kw int
433| 5 - id st_dim #934
433| 61 - op/sep =
433| 2 - num 0
433| 59 - op/sep ;

434| 130 - kw int
434| 42 - op/sep *
434| 5 - id st_id #463
434| 59 - op/sep ;

435| 129 - kw char
435| 42 - op/sep *
435| 5 - id st_type #985
435| 59 - op/sep ;

436| 129 - kw char
436| 42 - op/sep *
436| 5 - id st_kind #389
436| 59 - op/sep ;

437| 130 - kw int
437| 42 - op/sep *
437| 5 - id st_value #595
437| 59 - op/sep ;

438| 130 - kw int
438| 42 - op/sep *
438| 5 - id st_prop #984
438| 59 - op/sep ;

439| 130 - kw int
439| 5 - id st_count #730
439| 59 - op/sep ;

440| 130 - kw int
440| 5 - id st_local #865
440| 59 - op/sep ;

442| 131 - kw enum
442| 123 - op/sep {
442| 5 - id T_v #755
442| 44 - op/sep ,
442| 5 - id T_c #736
442| 44 - op/sep ,
442| 5 - id T_cp #742
442| 44 - op/sep ,
442| 5 - id T_cpp #428
442| 44 - op/sep ,
442| 5 - id T_i #743
442| 44 - op/sep ,
442| 5 - id T_ip #129
442| 44 - op/sep ,
442| 5 - id T_ipp #330
442| 125 - op/sep }
442| 59 - op/sep ;

444| 131 - kw enum
444| 123 - op/sep {
444| 5 - id K_enum #356
444| 44 - op/sep ,
444| 5 - id K_var #777
444| 44 - op/sep ,
444| 5 - id K_array #367
444| 44 - op/sep ,
444| 5 - id K_arg #213
444| 44 - op/sep ,
444| 5 - id K_fn #550
444| 125 - op/sep }
444| 59 - op/sep ;

446| 129 - kw char
446| 42 - op/sep *
446| 5 - id st_type_str #537
446| 91 - op/sep [
446| 93 - op/sep ]
446| 61 - op/sep =
446| 123 - op/sep {
446| 4 - str "Void"
446| 44 - op/sep ,
446| 4 - str "Char"
446| 44 - op/sep ,
446| 4 - str "Char*"
446| 44 - op/sep ,
446| 4 - str "Char**"
446| 44 - op/sep ,
446| 4 - str "Int"
446| 44 - op/sep ,
446| 4 - str "Int*"
446| 44 - op/sep ,
446| 4 - str "Int**"
446| 125 - op/sep }
446| 59 - op/sep ;

447| 129 - kw char
447| 42 - op/sep *
447| 5 - id st_kind_str #853
447| 91 - op/sep [
447| 93 - op/sep ]
447| 61 - op/sep =
447| 123 - op/sep {
447| 4 - str "Enum"
447| 44 - op/sep ,
447| 4 - str "Var"
447| 44 - op/sep ,
447| 4 - str "Array"
447| 44 - op/sep ,
447| 4 - str "Arg"
447| 44 - op/sep ,
447| 4 - str "Fn"
447| 125 - op/sep }
447| 59 - op/sep ;

449| 130 - kw int
449| 5 - id se_is_int #769
449| 40 - op/sep (
449| 130 - kw int
449| 5 - id t #94
449| 41 - op/sep )
449| 123 - op/sep {
449| 137 - kw return
449| 5 - id t #94
449| 101 - op/sep e
449| 5 - id T_c #736
449| 111 - op/sep o
449| 5 - id t #94
449| 101 - op/sep e
449| 5 - id T_i #743
449| 59 - op/sep ;
449| 125 - op/sep }

450| 130 - kw int
450| 5 - id se_is_ptr #376
450| 40 - op/sep (
450| 130 - kw int
450| 5 - id t #94
450| 41 - op/sep )
450| 123 - op/sep {
450| 137 - kw return
450| 5 - id t #94
450| 101 - op/sep e
450| 5 - id T_cp #742
450| 111 - op/sep o
450| 5 - id t #94
450| 101 - op/sep e
450| 5 - id T_cpp #428
450| 111 - op/sep o
450| 5 - id t #94
450| 101 - op/sep e
450| 5 - id T_ip #129
450| 111 - op/sep o
450| 5 - id t #94
450| 101 - op/sep e
450| 5 - id T_ipp #330
450| 59 - op/sep ;
450| 125 - op/sep }

451| 130 - kw int
451| 5 - id se_is_ptr4 #142
451| 40 - op/sep (
451| 130 - kw int
451| 5 - id t #94
451| 41 - op/sep )
451| 123 - op/sep {
451| 137 - kw return
451| 5 - id t #94
451| 101 - op/sep e
451| 5 - id T_cpp #428
451| 111 - op/sep o
451| 5 - id t #94
451| 101 - op/sep e
451| 5 - id T_ip #129
451| 111 - op/sep o
451| 5 - id t #94
451| 101 - op/sep e
451| 5 - id T_ipp #330
451| 59 - op/sep ;
451| 125 - op/sep }

453| 128 - kw void
453| 5 - id st_create #733
453| 40 - op/sep (
453| 130 - kw int
453| 5 - id n #88
453| 41 - op/sep )

454| 123 - op/sep {

456| 5 - id st_id #463
456| 61 - op/sep =
456| 40 - op/sep (
456| 130 - kw int
456| 42 - op/sep *
456| 41 - op/sep )
456| 5 - id malloc #352
456| 40 - op/sep (
456| 5 - id INTSZ #949
456| 42 - op/sep *
456| 5 - id n #88
456| 41 - op/sep )
456| 59 - op/sep ;

457| 5 - id st_type #985
457| 61 - op/sep =
457| 5 - id malloc #352
457| 40 - op/sep (
457| 5 - id n #88
457| 41 - op/sep )
457| 59 - op/sep ;

458| 5 - id st_kind #389
458| 61 - op/sep =
458| 5 - id malloc #352
458| 40 - op/sep (
458| 5 - id n #88
458| 41 - op/sep )
458| 59 - op/sep ;

459| 5 - id st_value #595
459| 61 - op/sep =
459| 40 - op/sep (
459| 130 - kw int
459| 42 - op/sep *
459| 41 - op/sep )
459| 5 - id malloc #352
459| 40 - op/sep (
459| 5 - id INTSZ #949
459| 42 - op/sep *
459| 5 - id n #88
459| 41 - op/sep )
459| 59 - op/sep ;

460| 5 - id st_prop #984
460| 61 - op/sep =
460| 40 - op/sep (
460| 130 - kw int
460| 42 - op/sep *
460| 41 - op/sep )
460| 5 - id malloc #352
460| 40 - op/sep (
460| 5 - id INTSZ #949
460| 42 - op/sep *
460| 5 - id n #88
460| 41 - op/sep )
460| 59 - op/sep ;

461| 5 - id st_dim #934
461| 61 - op/sep =
461| 5 - id n #88
461| 59 - op/sep ;

462| 5 - id st_count #730
462| 61 - op/sep =
462| 2 - num 0
462| 59 - op/sep ;

463| 125 - op/sep }

465| 129 - kw char
465| 42 - op/sep *
465| 5 - id st_copy_args #102
465| 40 - op/sep (
465| 130 - kw int
465| 5 - id start #704
465| 44 - op/sep ,
465| 130 - kw int
465| 5 - id nargs #648
465| 41 - op/sep )

466| 123 - op/sep {

467| 129 - kw char
467| 42 - op/sep *
467| 5 - id args #138
467| 61 - op/sep =
467| 5 - id malloc #352
467| 40 - op/sep (
467| 5 - id nargs #648
467| 43 - op/sep +
467| 2 - num 1
467| 41 - op/sep )
467| 59 - op/sep ;

468| 135 - kw for
468| 40 - op/sep (
468| 130 - kw int
468| 5 - id i #83
468| 61 - op/sep =
468| 2 - num 0
468| 59 - op/sep ;
468| 5 - id i #83
468| 60 - op/sep <
468| 5 - id nargs #648
468| 59 - op/sep ;
468| 105 - op/sep i
468| 5 - id i #83
468| 41 - op/sep )

469| 123 - op/sep {

470| 5 - id assert #124
470| 40 - op/sep (
470| 5 - id start #704
470| 60 - op/sep <
470| 5 - id st_count #730
470| 97 - op/sep a
470| 5 - id st_kind #389
470| 91 - op/sep [
470| 5 - id start #704
470| 43 - op/sep +
470| 5 - id i #83
470| 93 - op/sep ]
470| 101 - op/sep e
470| 5 - id K_arg #213
470| 44 - op/sep ,
470| 4 - str "st_copy"
470| 41 - op/sep )
470| 59 - op/sep ;

471| 5 - id args #138
471| 91 - op/sep [
471| 5 - id i #83
471| 93 - op/sep ]
471| 61 - op/sep =
471| 5 - id st_type #985
471| 91 - op/sep [
471| 5 - id start #704
471| 43 - op/sep +
471| 5 - id i #83
471| 93 - op/sep ]
471| 59 - op/sep ;

472| 125 - op/sep }

473| 5 - id args #138
473| 91 - op/sep [
473| 5 - id nargs #648
473| 93 - op/sep ]
473| 61 - op/sep =
473| 2 - num 0
473| 59 - op/sep ;

474| 137 - kw return
474| 5 - id args #138
474| 59 - op/sep ;

475| 125 - op/sep }

477| 130 - kw int
477| 5 - id st_find #734
477| 40 - op/sep (
477| 130 - kw int
477| 5 - id id #969
477| 41 - op/sep )

478| 123 - op/sep {

479| 135 - kw for
479| 40 - op/sep (
479| 130 - kw int
479| 5 - id i #83
479| 61 - op/sep =
479| 5 - id st_count #730
479| 45 - op/sep -
479| 2 - num 1
479| 59 - op/sep ;
479| 5 - id i #83
479| 103 - op/sep g
479| 2 - num 0
479| 59 - op/sep ;
479| 100 - op/sep d
479| 5 - id i #83
479| 41 - op/sep )
479| 132 - kw if
479| 40 - op/sep (
479| 5 - id st_id #463
479| 91 - op/sep [
479| 5 - id i #83
479| 93 - op/sep ]
479| 101 - op/sep e
479| 5 - id id #969
479| 41 - op/sep )
479| 137 - kw return
479| 5 - id i #83
479| 59 - op/sep ;

480| 137 - kw return
480| 45 - op/sep -
480| 2 - num 1
480| 59 - op/sep ;

481| 125 - op/sep }

483| 130 - kw int
483| 5 - id st_add #645
483| 40 - op/sep (
483| 130 - kw int
483| 5 - id id #969
483| 44 - op/sep ,
483| 130 - kw int
483| 5 - id type #638
483| 44 - op/sep ,
483| 130 - kw int
483| 5 - id kind #42
483| 44 - op/sep ,
483| 130 - kw int
483| 5 - id value #863
483| 44 - op/sep ,
483| 130 - kw int
483| 5 - id aux #315
483| 41 - op/sep )

484| 123 - op/sep {

485| 130 - kw int
485| 5 - id k #85
485| 61 - op/sep =
485| 5 - id st_count #730
485| 59 - op/sep ;

486| 132 - kw if
486| 40 - op/sep (
486| 5 - id k #85
486| 103 - op/sep g
486| 5 - id st_dim #934
486| 41 - op/sep )
486| 5 - id err1 #522
486| 40 - op/sep (
486| 4 - str "too many identifiers"
486| 41 - op/sep )
486| 59 - op/sep ;

487| 5 - id st_id #463
487| 91 - op/sep [
487| 5 - id k #85
487| 93 - op/sep ]
487| 61 - op/sep =
487| 5 - id id #969
487| 59 - op/sep ;
487| 5 - id st_type #985
487| 91 - op/sep [
487| 5 - id k #85
487| 93 - op/sep ]
487| 61 - op/sep =
487| 5 - id type #638
487| 59 - op/sep ;
487| 5 - id st_kind #389
487| 91 - op/sep [
487| 5 - id k #85
487| 93 - op/sep ]
487| 61 - op/sep =
487| 5 - id kind #42
487| 59 - op/sep ;
487| 5 - id st_value #595
487| 91 - op/sep [
487| 5 - id k #85
487| 93 - op/sep ]
487| 61 - op/sep =
487| 5 - id value #863
487| 59 - op/sep ;
487| 5 - id st_prop #984
487| 91 - op/sep [
487| 5 - id k #85
487| 93 - op/sep ]
487| 61 - op/sep =
487| 5 - id aux #315
487| 59 - op/sep ;

488| 105 - op/sep i
488| 5 - id st_count #730
488| 59 - op/sep ;

489| 137 - kw return
489| 5 - id k #85
489| 59 - op/sep ;

490| 125 - op/sep }

492| 130 - kw int
492| 5 - id st_count_local_sz #512
492| 40 - op/sep (
492| 41 - op/sep )

493| 123 - op/sep {

494| 130 - kw int
494| 5 - id s #93
494| 61 - op/sep =
494| 2 - num 0
494| 44 - op/sep ,
494| 5 - id words #627
494| 59 - op/sep ;

495| 135 - kw for
495| 40 - op/sep (
495| 130 - kw int
495| 5 - id i #83
495| 61 - op/sep =
495| 5 - id st_local #865
495| 59 - op/sep ;
495| 5 - id i #83
495| 60 - op/sep <
495| 5 - id st_count #730
495| 59 - op/sep ;
495| 105 - op/sep i
495| 5 - id i #83
495| 41 - op/sep )

496| 123 - op/sep {

497| 132 - kw if
497| 40 - op/sep (
497| 5 - id st_kind #389
497| 91 - op/sep [
497| 5 - id i #83
497| 93 - op/sep ]
497| 101 - op/sep e
497| 5 - id K_var #777
497| 41 - op/sep )

498| 5 - id words #627
498| 61 - op/sep =
498| 2 - num 1
498| 59 - op/sep ;

499| 133 - kw else
499| 132 - kw if
499| 40 - op/sep (
499| 5 - id st_kind #389
499| 91 - op/sep [
499| 5 - id i #83
499| 93 - op/sep ]
499| 101 - op/sep e
499| 5 - id K_array #367
499| 41 - op/sep )

500| 123 - op/sep {

501| 132 - kw if
501| 40 - op/sep (
501| 5 - id st_type #985
501| 91 - op/sep [
501| 5 - id i #83
501| 93 - op/sep ]
501| 101 - op/sep e
501| 5 - id T_c #736
501| 41 - op/sep )
501| 5 - id words #627
501| 61 - op/sep =
501| 40 - op/sep (
501| 5 - id st_prop #984
501| 91 - op/sep [
501| 5 - id i #83
501| 93 - op/sep ]
501| 43 - op/sep +
501| 2 - num 3
501| 41 - op/sep )
501| 47 - op/sep /
501| 5 - id INTSZ #949
501| 59 - op/sep ;

502| 133 - kw else
502| 5 - id words #627
502| 61 - op/sep =
502| 5 - id st_prop #984
502| 91 - op/sep [
502| 5 - id i #83
502| 93 - op/sep ]
502| 59 - op/sep ;

503| 125 - op/sep }

504| 133 - kw else

505| 123 - op/sep {

506| 5 - id assert #124
506| 40 - op/sep (
506| 5 - id st_kind #389
506| 91 - op/sep [
506| 5 - id i #83
506| 93 - op/sep ]
506| 101 - op/sep e
506| 5 - id K_arg #213
506| 44 - op/sep ,
506| 4 - str "K_arg"
506| 41 - op/sep )
506| 59 - op/sep ;

507| 5 - id words #627
507| 61 - op/sep =
507| 2 - num 0
507| 59 - op/sep ;

508| 125 - op/sep }

509| 5 - id s #93
509| 61 - op/sep =
509| 5 - id s #93
509| 43 - op/sep +
509| 5 - id INTSZ #949
509| 42 - op/sep *
509| 5 - id words #627
509| 59 - op/sep ;

510| 125 - op/sep }

511| 137 - kw return
511| 5 - id s #93
511| 59 - op/sep ;

512| 125 - op/sep }

514| 128 - kw void
514| 5 - id print_args #710
514| 40 - op/sep (
514| 129 - kw char
514| 42 - op/sep *
514| 5 - id a #75
514| 41 - op/sep )

515| 123 - op/sep {

516| 132 - kw if
516| 40 - op/sep (
516| 42 - op/sep *
516| 5 - id a #75
516| 101 - op/sep e
516| 2 - num 0
516| 41 - op/sep )
516| 5 - id p1 #371
516| 40 - op/sep (
516| 4 - str " ()"
516| 41 - op/sep )
516| 59 - op/sep ;
516| 133 - kw else
516| 135 - kw for
516| 40 - op/sep (
516| 59 - op/sep ;
516| 42 - op/sep *
516| 5 - id a #75
516| 59 - op/sep ;
516| 105 - op/sep i
516| 5 - id a #75
516| 41 - op/sep )
516| 5 - id p2 #372
516| 40 - op/sep (
516| 4 - str " "
516| 44 - op/sep ,
516| 5 - id st_type_str #537
516| 91 - op/sep [
516| 42 - op/sep *
516| 5 - id a #75
516| 93 - op/sep ]
516| 41 - op/sep )
516| 59 - op/sep ;

517| 125 - op/sep }

519| 130 - kw int
519| 5 - id st_dump #624
519| 40 - op/sep (
519| 130 - kw int
519| 5 - id start #704
519| 44 - op/sep ,
519| 130 - kw int
519| 5 - id kind #42
519| 41 - op/sep )

520| 123 - op/sep {

521| 130 - kw int
521| 5 - id cnt #489
521| 61 - op/sep =
521| 2 - num 0
521| 59 - op/sep ;

522| 135 - kw for
522| 40 - op/sep (
522| 130 - kw int
522| 5 - id i #83
522| 61 - op/sep =
522| 5 - id start #704
522| 59 - op/sep ;
522| 5 - id i #83
522| 60 - op/sep <
522| 5 - id st_count #730
522| 59 - op/sep ;
522| 105 - op/sep i
522| 5 - id i #83
522| 41 - op/sep )

523| 123 - op/sep {

524| 130 - kw int
524| 5 - id k #85
524| 61 - op/sep =
524| 5 - id st_kind #389
524| 91 - op/sep [
524| 5 - id i #83
524| 93 - op/sep ]
524| 59 - op/sep ;
524| 130 - kw int
524| 5 - id kk #99
524| 61 - op/sep =
524| 5 - id k #85
524| 59 - op/sep ;
524| 132 - kw if
524| 40 - op/sep (
524| 5 - id kk #99
524| 101 - op/sep e
524| 5 - id K_array #367
524| 41 - op/sep )
524| 5 - id kk #99
524| 61 - op/sep =
524| 5 - id K_var #777
524| 59 - op/sep ;

525| 132 - kw if
525| 40 - op/sep (
525| 5 - id kind #42
525| 101 - op/sep e
525| 45 - op/sep -
525| 2 - num 1
525| 111 - op/sep o
525| 5 - id kind #42
525| 101 - op/sep e
525| 5 - id kk #99
525| 41 - op/sep )

526| 123 - op/sep {

527| 105 - op/sep i
527| 5 - id cnt #489
527| 59 - op/sep ;

528| 5 - id p3 #373
528| 40 - op/sep (
528| 5 - id i2s #466
528| 40 - op/sep (
528| 5 - id i #83
528| 41 - op/sep )
528| 44 - op/sep ,
528| 4 - str " - "
528| 44 - op/sep ,
528| 5 - id id_table #669
528| 91 - op/sep [
528| 5 - id st_id #463
528| 91 - op/sep [
528| 5 - id i #83
528| 93 - op/sep ]
528| 93 - op/sep ]
528| 41 - op/sep )
528| 59 - op/sep ;

529| 5 - id p3 #373
529| 40 - op/sep (
529| 4 - str " ("
529| 44 - op/sep ,
529| 5 - id i2s #466
529| 40 - op/sep (
529| 5 - id st_id #463
529| 91 - op/sep [
529| 5 - id i #83
529| 93 - op/sep ]
529| 41 - op/sep )
529| 44 - op/sep ,
529| 4 - str ") "
529| 41 - op/sep )
529| 59 - op/sep ;

530| 5 - id p3 #373
530| 40 - op/sep (
530| 5 - id st_type_str #537
530| 91 - op/sep [
530| 5 - id st_type #985
530| 91 - op/sep [
530| 5 - id i #83
530| 93 - op/sep ]
530| 93 - op/sep ]
530| 44 - op/sep ,
530| 4 - str " "
530| 44 - op/sep ,
530| 5 - id st_kind_str #853
530| 91 - op/sep [
530| 5 - id k #85
530| 93 - op/sep ]
530| 41 - op/sep )
530| 59 - op/sep ;

531| 5 - id p2 #372
531| 40 - op/sep (
531| 4 - str " v="
531| 44 - op/sep ,
531| 5 - id i2s #466
531| 40 - op/sep (
531| 5 - id st_value #595
531| 91 - op/sep [
531| 5 - id i #83
531| 93 - op/sep ]
531| 41 - op/sep )
531| 41 - op/sep )
531| 59 - op/sep ;

532| 132 - kw if
532| 40 - op/sep (
532| 5 - id k #85
532| 101 - op/sep e
532| 5 - id K_array #367
532| 41 - op/sep )

533| 5 - id p2 #372
533| 40 - op/sep (
533| 4 - str " dim: "
533| 44 - op/sep ,
533| 5 - id i2s #466
533| 40 - op/sep (
533| 5 - id st_prop #984
533| 91 - op/sep [
533| 5 - id i #83
533| 93 - op/sep ]
533| 41 - op/sep )
533| 41 - op/sep )
533| 59 - op/sep ;

534| 132 - kw if
534| 40 - op/sep (
534| 5 - id k #85
534| 101 - op/sep e
534| 5 - id K_fn #550
534| 41 - op/sep )

535| 123 - op/sep {
535| 5 - id p1 #371
535| 40 - op/sep (
535| 4 - str " args:"
535| 41 - op/sep )
535| 59 - op/sep ;
535| 5 - id print_args #710
535| 40 - op/sep (
535| 40 - op/sep (
535| 129 - kw char
535| 42 - op/sep *
535| 41 - op/sep )
535| 5 - id st_prop #984
535| 91 - op/sep [
535| 5 - id i #83
535| 93 - op/sep ]
535| 41 - op/sep )
535| 59 - op/sep ;
535| 125 - op/sep }

536| 5 - id p0n #551
536| 40 - op/sep (
536| 41 - op/sep )
536| 59 - op/sep ;

537| 125 - op/sep }

538| 125 - op/sep }

539| 137 - kw return
539| 5 - id cnt #489
539| 59 - op/sep ;

540| 125 - op/sep }

544| 130 - kw int
544| 5 - id se_type #260
544| 59 - op/sep ;

545| 130 - kw int
545| 5 - id se_stars #955
545| 59 - op/sep ;

546| 130 - kw int
546| 5 - id se_value #679
546| 59 - op/sep ;

547| 130 - kw int
547| 5 - id se_level #920
547| 61 - op/sep =
547| 2 - num 0
547| 59 - op/sep ;

548| 130 - kw int
548| 5 - id se_enum #131
548| 59 - op/sep ;

549| 130 - kw int
549| 5 - id se_arg_count #249
549| 59 - op/sep ;

550| 130 - kw int
550| 5 - id se_lvars #956
550| 61 - op/sep =
550| 2 - num 0
550| 59 - op/sep ;

551| 130 - kw int
551| 5 - id se_gvars #929
551| 61 - op/sep =
551| 2 - num 0
551| 59 - op/sep ;

552| 130 - kw int
552| 5 - id se_items #271
552| 59 - op/sep ;

553| 130 - kw int
553| 42 - op/sep *
553| 5 - id se_array_items #1005
553| 59 - op/sep ;

554| 130 - kw int
554| 5 - id se_last_stmt_ret #0
554| 59 - op/sep ;

555| 130 - kw int
555| 5 - id se_local_offset #845
555| 59 - op/sep ;

556| 130 - kw int
556| 5 - id se_max_l_offset #50
556| 59 - op/sep ;

558| 130 - kw int
558| 5 - id se_data_offset #528
558| 59 - op/sep ;

559| 130 - kw int
559| 5 - id se_bss_offset #400
559| 59 - op/sep ;

563| 131 - kw enum
563| 123 - op/sep {
563| 5 - id BF_LAST #122
563| 44 - op/sep ,
563| 5 - id BF_NEXT #586
563| 44 - op/sep ,
563| 5 - id BF_DIM #846
563| 44 - op/sep ,
563| 5 - id BF_COUNT #368
563| 44 - op/sep ,
563| 5 - id BF_HEADSZ #587
563| 125 - op/sep }
563| 59 - op/sep ;

565| 130 - kw int
565| 42 - op/sep *
565| 5 - id bf_alloc_min #524
565| 40 - op/sep (
565| 130 - kw int
565| 5 - id n #88
565| 41 - op/sep )

566| 123 - op/sep {

568| 130 - kw int
568| 42 - op/sep *
568| 5 - id a #75
568| 61 - op/sep =
568| 40 - op/sep (
568| 130 - kw int
568| 42 - op/sep *
568| 41 - op/sep )
568| 5 - id malloc #352
568| 40 - op/sep (
568| 40 - op/sep (
568| 5 - id BF_HEADSZ #587
568| 43 - op/sep +
568| 40 - op/sep (
568| 5 - id n #88
568| 43 - op/sep +
568| 5 - id INTSZ #949
568| 45 - op/sep -
568| 2 - num 1
568| 41 - op/sep )
568| 47 - op/sep /
568| 5 - id INTSZ #949
568| 41 - op/sep )
568| 42 - op/sep *
568| 5 - id INTSZ #949
568| 41 - op/sep )
568| 59 - op/sep ;

569| 5 - id a #75
569| 91 - op/sep [
569| 5 - id BF_LAST #122
569| 93 - op/sep ]
569| 61 - op/sep =
569| 40 - op/sep (
569| 130 - kw int
569| 41 - op/sep )
569| 5 - id a #75
569| 59 - op/sep ;

570| 5 - id a #75
570| 91 - op/sep [
570| 5 - id BF_DIM #846
570| 93 - op/sep ]
570| 61 - op/sep =
570| 5 - id n #88
570| 59 - op/sep ;

571| 5 - id a #75
571| 91 - op/sep [
571| 5 - id BF_NEXT #586
571| 93 - op/sep ]
571| 61 - op/sep =
571| 2 - num 0
571| 59 - op/sep ;

572| 5 - id a #75
572| 91 - op/sep [
572| 5 - id BF_COUNT #368
572| 93 - op/sep ]
572| 61 - op/sep =
572| 2 - num 0
572| 59 - op/sep ;

573| 137 - kw return
573| 5 - id a #75
573| 59 - op/sep ;

574| 125 - op/sep }

576| 128 - kw void
576| 5 - id bf_append #218
576| 40 - op/sep (
576| 130 - kw int
576| 42 - op/sep *
576| 5 - id bf #509
576| 44 - op/sep ,
576| 129 - kw char
576| 42 - op/sep *
576| 5 - id s #93
576| 44 - op/sep ,
576| 130 - kw int
576| 5 - id n #88
576| 41 - op/sep )

577| 123 - op/sep {

578| 130 - kw int
578| 42 - op/sep *
578| 5 - id last #786
578| 61 - op/sep =
578| 40 - op/sep (
578| 130 - kw int
578| 42 - op/sep *
578| 41 - op/sep )
578| 5 - id bf #509
578| 91 - op/sep [
578| 5 - id BF_LAST #122
578| 93 - op/sep ]
578| 59 - op/sep ;

579| 130 - kw int
579| 5 - id left #199
579| 61 - op/sep =
579| 5 - id bf #509
579| 91 - op/sep [
579| 5 - id BF_DIM #846
579| 93 - op/sep ]
579| 45 - op/sep -
579| 5 - id last #786
579| 91 - op/sep [
579| 5 - id BF_COUNT #368
579| 93 - op/sep ]
579| 59 - op/sep ;

580| 134 - kw while
580| 40 - op/sep (
580| 5 - id left #199
580| 60 - op/sep <
580| 5 - id n #88
580| 41 - op/sep )

581| 123 - op/sep {

582| 5 - id memcopy #487
582| 40 - op/sep (
582| 40 - op/sep (
582| 129 - kw char
582| 42 - op/sep *
582| 41 - op/sep )
582| 40 - op/sep (
582| 5 - id last #786
582| 43 - op/sep +
582| 5 - id BF_HEADSZ #587
582| 41 - op/sep )
582| 43 - op/sep +
582| 5 - id last #786
582| 91 - op/sep [
582| 5 - id BF_COUNT #368
582| 93 - op/sep ]
582| 44 - op/sep ,
582| 5 - id s #93
582| 44 - op/sep ,
582| 5 - id left #199
582| 41 - op/sep )
582| 59 - op/sep ;

583| 5 - id last #786
583| 91 - op/sep [
583| 5 - id BF_COUNT #368
583| 93 - op/sep ]
583| 61 - op/sep =
583| 5 - id last #786
583| 91 - op/sep [
583| 5 - id BF_COUNT #368
583| 93 - op/sep ]
583| 43 - op/sep +
583| 5 - id left #199
583| 59 - op/sep ;

585| 130 - kw int
585| 42 - op/sep *
585| 5 - id new_bf #834
585| 61 - op/sep =
585| 5 - id bf_alloc_min #524
585| 40 - op/sep (
585| 5 - id bf #509
585| 91 - op/sep [
585| 5 - id BF_DIM #846
585| 93 - op/sep ]
585| 41 - op/sep )
585| 59 - op/sep ;

586| 5 - id bf #509
586| 91 - op/sep [
586| 5 - id BF_LAST #122
586| 93 - op/sep ]
586| 61 - op/sep =
586| 40 - op/sep (
586| 130 - kw int
586| 41 - op/sep )
586| 5 - id new_bf #834
586| 59 - op/sep ;

587| 5 - id last #786
587| 91 - op/sep [
587| 5 - id BF_NEXT #586
587| 93 - op/sep ]
587| 61 - op/sep =
587| 40 - op/sep (
587| 130 - kw int
587| 41 - op/sep )
587| 5 - id new_bf #834
587| 59 - op/sep ;

588| 5 - id s #93
588| 61 - op/sep =
588| 5 - id s #93
588| 43 - op/sep +
588| 5 - id left #199
588| 59 - op/sep ;

589| 5 - id n #88
589| 61 - op/sep =
589| 5 - id n #88
589| 45 - op/sep -
589| 5 - id left #199
589| 59 - op/sep ;

590| 5 - id last #786
590| 61 - op/sep =
590| 5 - id new_bf #834
590| 59 - op/sep ;

591| 5 - id left #199
591| 61 - op/sep =
591| 5 - id bf #509
591| 91 - op/sep [
591| 5 - id BF_DIM #846
591| 93 - op/sep ]
591| 59 - op/sep ;

592| 125 - op/sep }

593| 5 - id memcopy #487
593| 40 - op/sep (
593| 40 - op/sep (
593| 129 - kw char
593| 42 - op/sep *
593| 41 - op/sep )
593| 40 - op/sep (
593| 5 - id last #786
593| 43 - op/sep +
593| 5 - id BF_HEADSZ #587
593| 41 - op/sep )
593| 43 - op/sep +
593| 5 - id last #786
593| 91 - op/sep [
593| 5 - id BF_COUNT #368
593| 93 - op/sep ]
593| 44 - op/sep ,
593| 5 - id s #93
593| 44 - op/sep ,
593| 5 - id n #88
593| 41 - op/sep )
593| 59 - op/sep ;

594| 5 - id last #786
594| 91 - op/sep [
594| 5 - id BF_COUNT #368
594| 93 - op/sep ]
594| 61 - op/sep =
594| 5 - id last #786
594| 91 - op/sep [
594| 5 - id BF_COUNT #368
594| 93 - op/sep ]
594| 43 - op/sep +
594| 5 - id n #88
594| 59 - op/sep ;

595| 125 - op/sep }

597| 128 - kw void
597| 5 - id bf_write #180
597| 40 - op/sep (
597| 130 - kw int
597| 42 - op/sep *
597| 5 - id bf #509
597| 44 - op/sep ,
597| 130 - kw int
597| 5 - id fd #771
597| 41 - op/sep )

598| 123 - op/sep {

599| 134 - kw while
599| 40 - op/sep (
599| 5 - id bf #509
599| 41 - op/sep )
599| 123 - op/sep {
599| 5 - id write #600
599| 40 - op/sep (
599| 5 - id fd #771
599| 44 - op/sep ,
599| 40 - op/sep (
599| 129 - kw char
599| 42 - op/sep *
599| 41 - op/sep )
599| 40 - op/sep (
599| 5 - id bf #509
599| 43 - op/sep +
599| 5 - id BF_HEADSZ #587
599| 41 - op/sep )
599| 44 - op/sep ,
599| 5 - id bf #509
599| 91 - op/sep [
599| 5 - id BF_COUNT #368
599| 93 - op/sep ]
599| 41 - op/sep )
599| 59 - op/sep ;
599| 5 - id bf #509
599| 61 - op/sep =
599| 40 - op/sep (
599| 130 - kw int
599| 42 - op/sep *
599| 41 - op/sep )
599| 5 - id bf #509
599| 91 - op/sep [
599| 5 - id BF_NEXT #586
599| 93 - op/sep ]
599| 59 - op/sep ;
599| 125 - op/sep }

600| 125 - op/sep }

602| 128 - kw void
602| 5 - id bf_free #429
602| 40 - op/sep (
602| 130 - kw int
602| 42 - op/sep *
602| 5 - id bf #509
602| 41 - op/sep )

603| 123 - op/sep {

604| 130 - kw int
604| 42 - op/sep *
604| 5 - id next #242
604| 61 - op/sep =
604| 40 - op/sep (
604| 130 - kw int
604| 42 - op/sep *
604| 41 - op/sep )
604| 5 - id bf #509
604| 91 - op/sep [
604| 5 - id BF_NEXT #586
604| 93 - op/sep ]
604| 59 - op/sep ;
604| 5 - id free #656
604| 40 - op/sep (
604| 40 - op/sep (
604| 129 - kw char
604| 42 - op/sep *
604| 41 - op/sep )
604| 5 - id bf #509
604| 41 - op/sep )
604| 59 - op/sep ;

605| 134 - kw while
605| 40 - op/sep (
605| 5 - id next #242
605| 110 - op/sep n
605| 2 - num 0
605| 41 - op/sep )
605| 123 - op/sep {
605| 5 - id bf #509
605| 61 - op/sep =
605| 5 - id next #242
605| 59 - op/sep ;
605| 5 - id next #242
605| 61 - op/sep =
605| 40 - op/sep (
605| 130 - kw int
605| 42 - op/sep *
605| 41 - op/sep )
605| 5 - id bf #509
605| 91 - op/sep [
605| 5 - id BF_NEXT #586
605| 93 - op/sep ]
605| 59 - op/sep ;
605| 5 - id free #656
605| 40 - op/sep (
605| 40 - op/sep (
605| 129 - kw char
605| 42 - op/sep *
605| 41 - op/sep )
605| 5 - id bf #509
605| 41 - op/sep )
605| 59 - op/sep ;
605| 125 - op/sep }

606| 125 - op/sep }

610| 131 - kw enum
610| 123 - op/sep {
610| 5 - id ET_none #118
610| 44 - op/sep ,

611| 5 - id ET_num #510
611| 44 - op/sep ,

612| 5 - id ET_str #31
612| 44 - op/sep ,

613| 5 - id ET_var #746
613| 44 - op/sep ,

614| 5 - id ET_fn #612
614| 44 - op/sep ,

615| 5 - id ET_call #308
615| 44 - op/sep ,

616| 5 - id ET_cast #778
616| 44 - op/sep ,

617| 5 - id ET_star #966
617| 44 - op/sep ,

618| 5 - id ET_neg #457
618| 125 - op/sep }
618| 59 - op/sep ;

626| 131 - kw enum
626| 123 - op/sep {
626| 5 - id ET_MASK #1002
626| 61 - op/sep =
626| 2 - num 255
626| 44 - op/sep ,
626| 5 - id ET_T #992
626| 61 - op/sep =
626| 2 - num 256
626| 125 - op/sep }
626| 59 - op/sep ;

628| 130 - kw int
628| 42 - op/sep *
628| 5 - id ET_1 #957
628| 40 - op/sep (
628| 130 - kw int
628| 5 - id tag #13
628| 44 - op/sep ,
628| 130 - kw int
628| 42 - op/sep *
628| 5 - id expr #357
628| 44 - op/sep ,
628| 130 - kw int
628| 5 - id type #638
628| 41 - op/sep )

629| 123 - op/sep {

630| 130 - kw int
630| 42 - op/sep *
630| 5 - id r #92
630| 61 - op/sep =
630| 40 - op/sep (
630| 130 - kw int
630| 42 - op/sep *
630| 41 - op/sep )
630| 5 - id malloc #352
630| 40 - op/sep (
630| 2 - num 2
630| 42 - op/sep *
630| 5 - id INTSZ #949
630| 41 - op/sep )
630| 59 - op/sep ;
630| 5 - id r #92
630| 91 - op/sep [
630| 2 - num 0
630| 93 - op/sep ]
630| 61 - op/sep =
630| 5 - id tag #13
630| 43 - op/sep +
630| 5 - id type #638
630| 42 - op/sep *
630| 5 - id ET_T #992
630| 59 - op/sep ;
630| 5 - id r #92
630| 91 - op/sep [
630| 2 - num 1
630| 93 - op/sep ]
630| 61 - op/sep =
630| 40 - op/sep (
630| 130 - kw int
630| 41 - op/sep )
630| 5 - id expr #357
630| 59 - op/sep ;
630| 137 - kw return
630| 5 - id r #92
630| 59 - op/sep ;

631| 125 - op/sep }

633| 130 - kw int
633| 42 - op/sep *
633| 5 - id ET_2 #958
633| 40 - op/sep (
633| 130 - kw int
633| 5 - id tag #13
633| 44 - op/sep ,
633| 130 - kw int
633| 42 - op/sep *
633| 5 - id expr1 #828
633| 44 - op/sep ,
633| 130 - kw int
633| 42 - op/sep *
633| 5 - id expr2 #830
633| 44 - op/sep ,
633| 130 - kw int
633| 5 - id type #638
633| 41 - op/sep )

634| 123 - op/sep {

635| 130 - kw int
635| 42 - op/sep *
635| 5 - id r #92
635| 61 - op/sep =
635| 40 - op/sep (
635| 130 - kw int
635| 42 - op/sep *
635| 41 - op/sep )
635| 5 - id malloc #352
635| 40 - op/sep (
635| 2 - num 3
635| 42 - op/sep *
635| 5 - id INTSZ #949
635| 41 - op/sep )
635| 59 - op/sep ;
635| 5 - id r #92
635| 91 - op/sep [
635| 2 - num 0
635| 93 - op/sep ]
635| 61 - op/sep =
635| 5 - id tag #13
635| 43 - op/sep +
635| 5 - id type #638
635| 42 - op/sep *
635| 5 - id ET_T #992
635| 59 - op/sep ;
635| 5 - id r #92
635| 91 - op/sep [
635| 2 - num 1
635| 93 - op/sep ]
635| 61 - op/sep =
635| 40 - op/sep (
635| 130 - kw int
635| 41 - op/sep )
635| 5 - id expr1 #828
635| 59 - op/sep ;
635| 5 - id r #92
635| 91 - op/sep [
635| 2 - num 2
635| 93 - op/sep ]
635| 61 - op/sep =
635| 40 - op/sep (
635| 130 - kw int
635| 41 - op/sep )
635| 5 - id expr2 #830
635| 59 - op/sep ;

636| 137 - kw return
636| 5 - id r #92
636| 59 - op/sep ;

637| 125 - op/sep }

639| 130 - kw int
639| 42 - op/sep *
639| 5 - id ET_I #982
639| 40 - op/sep (
639| 130 - kw int
639| 5 - id tag #13
639| 44 - op/sep ,
639| 130 - kw int
639| 5 - id value #863
639| 44 - op/sep ,
639| 130 - kw int
639| 5 - id type #638
639| 41 - op/sep )
639| 123 - op/sep {
639| 137 - kw return
639| 5 - id ET_1 #957
639| 40 - op/sep (
639| 5 - id tag #13
639| 44 - op/sep ,
639| 40 - op/sep (
639| 130 - kw int
639| 42 - op/sep *
639| 41 - op/sep )
639| 5 - id value #863
639| 44 - op/sep ,
639| 5 - id type #638
639| 41 - op/sep )
639| 59 - op/sep ;
639| 125 - op/sep }

641| 130 - kw int
641| 42 - op/sep *
641| 5 - id ET_P #988
641| 40 - op/sep (
641| 130 - kw int
641| 42 - op/sep *
641| 5 - id e #79
641| 41 - op/sep )
641| 123 - op/sep {
641| 137 - kw return
641| 5 - id ET_1 #957
641| 40 - op/sep (
641| 40 - op/sep (
641| 130 - kw int
641| 41 - op/sep )
641| 5 - id e #79
641| 44 - op/sep ,
641| 2 - num 0
641| 44 - op/sep ,
641| 2 - num 0
641| 41 - op/sep )
641| 59 - op/sep ;
641| 125 - op/sep }

644| 129 - kw char
644| 42 - op/sep *
644| 5 - id ET_TAG #831
644| 91 - op/sep [
644| 93 - op/sep ]
644| 61 - op/sep =
644| 123 - op/sep {
644| 4 - str ""
644| 44 - op/sep ,
644| 4 - str "Num"
644| 44 - op/sep ,
644| 4 - str "Str"
644| 44 - op/sep ,
644| 4 - str "Var"
644| 44 - op/sep ,
644| 4 - str "Fn"
644| 44 - op/sep ,
644| 4 - str "Call"
644| 44 - op/sep ,
644| 4 - str "Cast"
644| 44 - op/sep ,
644| 4 - str "@"
644| 44 - op/sep ,
644| 4 - str "Neg"
644| 125 - op/sep }
644| 59 - op/sep ;

646| 128 - kw void
646| 5 - id et_print #395
646| 40 - op/sep (
646| 130 - kw int
646| 42 - op/sep *
646| 5 - id e #79
646| 41 - op/sep )

647| 123 - op/sep {

648| 130 - kw int
648| 5 - id e0 #653
648| 61 - op/sep =
648| 5 - id e #79
648| 91 - op/sep [
648| 2 - num 0
648| 93 - op/sep ]
648| 38 - op/sep &
648| 5 - id ET_MASK #1002
648| 59 - op/sep ;

649| 130 - kw int
649| 5 - id e0type #480
649| 61 - op/sep =
649| 5 - id e #79
649| 91 - op/sep [
649| 2 - num 0
649| 93 - op/sep ]
649| 47 - op/sep /
649| 5 - id ET_T #992
649| 59 - op/sep ;

650| 132 - kw if
650| 40 - op/sep (
650| 5 - id e0 #653
650| 60 - op/sep <
650| 3 - chr 32
650| 41 - op/sep )
650| 5 - id p3 #373
650| 40 - op/sep (
650| 4 - str "("
650| 44 - op/sep ,
650| 5 - id ET_TAG #831
650| 91 - op/sep [
650| 5 - id e0 #653
650| 93 - op/sep ]
650| 44 - op/sep ,
650| 4 - str " "
650| 41 - op/sep )
650| 59 - op/sep ;

651| 133 - kw else
651| 132 - kw if
651| 40 - op/sep (
651| 5 - id e0 #653
651| 101 - op/sep e
651| 3 - chr 105
651| 41 - op/sep )
651| 5 - id p1 #371
651| 40 - op/sep (
651| 4 - str "(++ "
651| 41 - op/sep )
651| 59 - op/sep ;
651| 133 - kw else
651| 132 - kw if
651| 40 - op/sep (
651| 5 - id e0 #653
651| 101 - op/sep e
651| 3 - chr 100
651| 41 - op/sep )
651| 5 - id p1 #371
651| 40 - op/sep (
651| 4 - str "(-- "
651| 41 - op/sep )
651| 59 - op/sep ;

652| 133 - kw else
652| 132 - kw if
652| 40 - op/sep (
652| 5 - id e0 #653
652| 101 - op/sep e
652| 3 - chr 97
652| 41 - op/sep )
652| 5 - id p1 #371
652| 40 - op/sep (
652| 4 - str "(&& "
652| 41 - op/sep )
652| 59 - op/sep ;
652| 133 - kw else
652| 132 - kw if
652| 40 - op/sep (
652| 5 - id e0 #653
652| 101 - op/sep e
652| 3 - chr 111
652| 41 - op/sep )
652| 5 - id p1 #371
652| 40 - op/sep (
652| 4 - str "(|| "
652| 41 - op/sep )
652| 59 - op/sep ;

653| 133 - kw else
653| 132 - kw if
653| 40 - op/sep (
653| 5 - id e0 #653
653| 101 - op/sep e
653| 3 - chr 101
653| 41 - op/sep )
653| 5 - id p1 #371
653| 40 - op/sep (
653| 4 - str "(== "
653| 41 - op/sep )
653| 59 - op/sep ;
653| 133 - kw else
653| 132 - kw if
653| 40 - op/sep (
653| 5 - id e0 #653
653| 101 - op/sep e
653| 3 - chr 110
653| 41 - op/sep )
653| 5 - id p1 #371
653| 40 - op/sep (
653| 4 - str "(!= "
653| 41 - op/sep )
653| 59 - op/sep ;

654| 133 - kw else
654| 132 - kw if
654| 40 - op/sep (
654| 5 - id e0 #653
654| 101 - op/sep e
654| 3 - chr 108
654| 41 - op/sep )
654| 5 - id p1 #371
654| 40 - op/sep (
654| 4 - str "(<= "
654| 41 - op/sep )
654| 59 - op/sep ;
654| 133 - kw else
654| 132 - kw if
654| 40 - op/sep (
654| 5 - id e0 #653
654| 101 - op/sep e
654| 3 - chr 103
654| 41 - op/sep )
654| 5 - id p1 #371
654| 40 - op/sep (
654| 4 - str "(>= "
654| 41 - op/sep )
654| 59 - op/sep ;

655| 133 - kw else
655| 123 - op/sep {
655| 129 - kw char
655| 5 - id s #93
655| 91 - op/sep [
655| 2 - num 2
655| 93 - op/sep ]
655| 59 - op/sep ;
655| 5 - id s #93
655| 91 - op/sep [
655| 2 - num 0
655| 93 - op/sep ]
655| 61 - op/sep =
655| 40 - op/sep (
655| 129 - kw char
655| 41 - op/sep )
655| 5 - id e0 #653
655| 59 - op/sep ;
655| 5 - id s #93
655| 91 - op/sep [
655| 2 - num 1
655| 93 - op/sep ]
655| 61 - op/sep =
655| 3 - chr 0
655| 59 - op/sep ;
655| 5 - id p3 #373
655| 40 - op/sep (
655| 4 - str "("
655| 44 - op/sep ,
655| 5 - id s #93
655| 44 - op/sep ,
655| 4 - str " "
655| 41 - op/sep )
655| 59 - op/sep ;
655| 125 - op/sep }

657| 132 - kw if
657| 40 - op/sep (
657| 5 - id e0 #653
657| 101 - op/sep e
657| 5 - id ET_num #510
657| 41 - op/sep )
657| 123 - op/sep {
657| 5 - id p1 #371
657| 40 - op/sep (
657| 5 - id i2s #466
657| 40 - op/sep (
657| 5 - id e #79
657| 91 - op/sep [
657| 2 - num 1
657| 93 - op/sep ]
657| 41 - op/sep )
657| 41 - op/sep )
657| 59 - op/sep ;
657| 125 - op/sep }

658| 133 - kw else
658| 132 - kw if
658| 40 - op/sep (
658| 5 - id e0 #653
658| 101 - op/sep e
658| 5 - id ET_str #31
658| 41 - op/sep )
658| 5 - id p1 #371
658| 40 - op/sep (
658| 5 - id str_repr #862
658| 40 - op/sep (
658| 5 - id sl_table #893
658| 91 - op/sep [
658| 5 - id e #79
658| 91 - op/sep [
658| 2 - num 1
658| 93 - op/sep ]
658| 93 - op/sep ]
658| 41 - op/sep )
658| 41 - op/sep )
658| 59 - op/sep ;

659| 133 - kw else
659| 132 - kw if
659| 40 - op/sep (
659| 5 - id e0 #653
659| 101 - op/sep e
659| 5 - id ET_fn #612
659| 41 - op/sep )
659| 5 - id p1 #371
659| 40 - op/sep (
659| 5 - id id_table #669
659| 91 - op/sep [
659| 5 - id st_id #463
659| 91 - op/sep [
659| 5 - id e #79
659| 91 - op/sep [
659| 2 - num 1
659| 93 - op/sep ]
659| 93 - op/sep ]
659| 93 - op/sep ]
659| 41 - op/sep )
659| 59 - op/sep ;

660| 133 - kw else
660| 132 - kw if
660| 40 - op/sep (
660| 5 - id e0 #653
660| 101 - op/sep e
660| 5 - id ET_var #746
660| 41 - op/sep )
660| 5 - id p1 #371
660| 40 - op/sep (
660| 5 - id id_table #669
660| 91 - op/sep [
660| 5 - id st_id #463
660| 91 - op/sep [
660| 5 - id e #79
660| 91 - op/sep [
660| 2 - num 1
660| 93 - op/sep ]
660| 93 - op/sep ]
660| 93 - op/sep ]
660| 41 - op/sep )
660| 59 - op/sep ;

661| 133 - kw else
661| 132 - kw if
661| 40 - op/sep (
661| 5 - id e0 #653
661| 101 - op/sep e
661| 5 - id ET_call #308
661| 41 - op/sep )
661| 123 - op/sep {
661| 5 - id et_print #395
661| 40 - op/sep (
661| 40 - op/sep (
661| 130 - kw int
661| 42 - op/sep *
661| 41 - op/sep )
661| 5 - id e #79
661| 91 - op/sep [
661| 2 - num 1
661| 93 - op/sep ]
661| 41 - op/sep )
661| 59 - op/sep ;
661| 5 - id p1 #371
661| 40 - op/sep (
661| 4 - str " ["
661| 41 - op/sep )
661| 59 - op/sep ;

662| 135 - kw for
662| 40 - op/sep (
662| 130 - kw int
662| 5 - id n #88
662| 61 - op/sep =
662| 2 - num 0
662| 44 - op/sep ,
662| 5 - id x #98
662| 61 - op/sep =
662| 5 - id e #79
662| 91 - op/sep [
662| 2 - num 2
662| 93 - op/sep ]
662| 59 - op/sep ;
662| 5 - id x #98
662| 59 - op/sep ;
662| 105 - op/sep i
662| 5 - id n #88
662| 44 - op/sep ,
662| 5 - id x #98
662| 61 - op/sep =
662| 40 - op/sep (
662| 40 - op/sep (
662| 130 - kw int
662| 42 - op/sep *
662| 41 - op/sep )
662| 5 - id x #98
662| 41 - op/sep )
662| 91 - op/sep [
662| 2 - num 1
662| 93 - op/sep ]
662| 41 - op/sep )

663| 123 - op/sep {
663| 132 - kw if
663| 40 - op/sep (
663| 5 - id n #88
663| 62 - op/sep >
663| 2 - num 0
663| 41 - op/sep )
663| 5 - id p1 #371
663| 40 - op/sep (
663| 4 - str " "
663| 41 - op/sep )
663| 59 - op/sep ;
663| 5 - id et_print #395
663| 40 - op/sep (
663| 40 - op/sep (
663| 130 - kw int
663| 42 - op/sep *
663| 41 - op/sep )
663| 40 - op/sep (
663| 40 - op/sep (
663| 130 - kw int
663| 42 - op/sep *
663| 41 - op/sep )
663| 5 - id x #98
663| 41 - op/sep )
663| 91 - op/sep [
663| 2 - num 0
663| 93 - op/sep ]
663| 41 - op/sep )
663| 59 - op/sep ;
663| 125 - op/sep }

664| 5 - id p1 #371
664| 40 - op/sep (
664| 4 - str "]"
664| 41 - op/sep )
664| 59 - op/sep ;
664| 125 - op/sep }

665| 133 - kw else
665| 132 - kw if
665| 40 - op/sep (
665| 5 - id e0 #653
665| 101 - op/sep e
665| 5 - id ET_cast #778
665| 41 - op/sep )
665| 123 - op/sep {
665| 5 - id p1 #371
665| 40 - op/sep (
665| 5 - id st_type_str #537
665| 91 - op/sep [
665| 5 - id e0type #480
665| 93 - op/sep ]
665| 41 - op/sep )
665| 59 - op/sep ;
665| 5 - id p1 #371
665| 40 - op/sep (
665| 4 - str " "
665| 41 - op/sep )
665| 59 - op/sep ;
665| 5 - id et_print #395
665| 40 - op/sep (
665| 40 - op/sep (
665| 130 - kw int
665| 42 - op/sep *
665| 41 - op/sep )
665| 5 - id e #79
665| 91 - op/sep [
665| 2 - num 1
665| 93 - op/sep ]
665| 41 - op/sep )
665| 59 - op/sep ;
665| 125 - op/sep }

666| 133 - kw else
666| 132 - kw if
666| 40 - op/sep (
666| 5 - id e0 #653
666| 101 - op/sep e
666| 5 - id ET_star #966
666| 41 - op/sep )
666| 5 - id et_print #395
666| 40 - op/sep (
666| 40 - op/sep (
666| 130 - kw int
666| 42 - op/sep *
666| 41 - op/sep )
666| 5 - id e #79
666| 91 - op/sep [
666| 2 - num 1
666| 93 - op/sep ]
666| 41 - op/sep )
666| 59 - op/sep ;

667| 133 - kw else
667| 132 - kw if
667| 40 - op/sep (
667| 5 - id e0 #653
667| 101 - op/sep e
667| 5 - id ET_neg #457
667| 41 - op/sep )
667| 5 - id et_print #395
667| 40 - op/sep (
667| 40 - op/sep (
667| 130 - kw int
667| 42 - op/sep *
667| 41 - op/sep )
667| 5 - id e #79
667| 91 - op/sep [
667| 2 - num 1
667| 93 - op/sep ]
667| 41 - op/sep )
667| 59 - op/sep ;

668| 133 - kw else
668| 132 - kw if
668| 40 - op/sep (
668| 5 - id e0 #653
668| 101 - op/sep e
668| 3 - chr 105
668| 111 - op/sep o
668| 5 - id e0 #653
668| 101 - op/sep e
668| 3 - chr 100
668| 111 - op/sep o
668| 5 - id e0 #653
668| 101 - op/sep e
668| 3 - chr 126
668| 111 - op/sep o
668| 5 - id e0 #653
668| 101 - op/sep e
668| 3 - chr 33
668| 41 - op/sep )
668| 5 - id et_print #395
668| 40 - op/sep (
668| 40 - op/sep (
668| 130 - kw int
668| 42 - op/sep *
668| 41 - op/sep )
668| 5 - id e #79
668| 91 - op/sep [
668| 2 - num 1
668| 93 - op/sep ]
668| 41 - op/sep )
668| 59 - op/sep ;

669| 133 - kw else
669| 123 - op/sep {
669| 5 - id et_print #395
669| 40 - op/sep (
669| 40 - op/sep (
669| 130 - kw int
669| 42 - op/sep *
669| 41 - op/sep )
669| 5 - id e #79
669| 91 - op/sep [
669| 2 - num 1
669| 93 - op/sep ]
669| 41 - op/sep )
669| 59 - op/sep ;
669| 5 - id p1 #371
669| 40 - op/sep (
669| 4 - str " "
669| 41 - op/sep )
669| 59 - op/sep ;
669| 5 - id et_print #395
669| 40 - op/sep (
669| 40 - op/sep (
669| 130 - kw int
669| 42 - op/sep *
669| 41 - op/sep )
669| 5 - id e #79
669| 91 - op/sep [
669| 2 - num 2
669| 93 - op/sep ]
669| 41 - op/sep )
669| 59 - op/sep ;
669| 125 - op/sep }

670| 5 - id p3 #373
670| 40 - op/sep (
670| 4 - str " |"
670| 44 - op/sep ,
670| 5 - id st_type_str #537
670| 91 - op/sep [
670| 5 - id e0type #480
670| 93 - op/sep ]
670| 44 - op/sep ,
670| 4 - str ")"
670| 41 - op/sep )
670| 59 - op/sep ;

671| 125 - op/sep }

673| 128 - kw void
673| 5 - id et_print_exprs #107
673| 40 - op/sep (
673| 130 - kw int
673| 42 - op/sep *
673| 42 - op/sep *
673| 5 - id x #98
673| 41 - op/sep )

674| 123 - op/sep {

675| 135 - kw for
675| 40 - op/sep (
675| 130 - kw int
675| 5 - id n #88
675| 61 - op/sep =
675| 2 - num 0
675| 59 - op/sep ;
675| 5 - id x #98
675| 59 - op/sep ;
675| 105 - op/sep i
675| 5 - id n #88
675| 44 - op/sep ,
675| 5 - id x #98
675| 61 - op/sep =
675| 40 - op/sep (
675| 130 - kw int
675| 42 - op/sep *
675| 42 - op/sep *
675| 41 - op/sep )
675| 5 - id x #98
675| 91 - op/sep [
675| 2 - num 1
675| 93 - op/sep ]
675| 41 - op/sep )
675| 123 - op/sep {
675| 132 - kw if
675| 40 - op/sep (
675| 5 - id n #88
675| 62 - op/sep >
675| 2 - num 0
675| 41 - op/sep )
675| 5 - id p1 #371
675| 40 - op/sep (
675| 4 - str " "
675| 41 - op/sep )
675| 59 - op/sep ;
675| 5 - id et_print #395
675| 40 - op/sep (
675| 5 - id x #98
675| 91 - op/sep [
675| 2 - num 0
675| 93 - op/sep ]
675| 41 - op/sep )
675| 59 - op/sep ;
675| 125 - op/sep }
675| 5 - id p1n #619
675| 40 - op/sep (
675| 4 - str "]"
675| 41 - op/sep )
675| 59 - op/sep ;

676| 125 - op/sep }

680| 131 - kw enum
680| 123 - op/sep {
680| 5 - id S_NONE #414
680| 44 - op/sep ,
680| 5 - id S_CODE #80
680| 44 - op/sep ,
680| 5 - id S_DATA #615
680| 44 - op/sep ,
680| 5 - id S_BSS #115
680| 125 - op/sep }
680| 59 - op/sep ;

682| 130 - kw int
682| 5 - id cg_file #859
682| 61 - op/sep =
682| 2 - num 0
682| 59 - op/sep ;

683| 130 - kw int
683| 42 - op/sep *
683| 5 - id cg_buffer #140
683| 61 - op/sep =
683| 2 - num 0
683| 59 - op/sep ;

684| 130 - kw int
684| 5 - id cg_section #889
684| 61 - op/sep =
684| 5 - id S_NONE #414
684| 59 - op/sep ;

685| 130 - kw int
685| 5 - id cg_data_align #44
685| 61 - op/sep =
685| 2 - num 0
685| 59 - op/sep ;

686| 130 - kw int
686| 5 - id cg_bss_align #160
686| 61 - op/sep =
686| 2 - num 0
686| 59 - op/sep ;

688| 130 - kw int
688| 5 - id cg_label #525
688| 59 - op/sep ;

689| 130 - kw int
689| 5 - id cg_fn_label #111
689| 59 - op/sep ;

691| 130 - kw int
691| 5 - id cg_loop_label #783
691| 91 - op/sep [
691| 2 - num 20
691| 93 - op/sep ]
691| 59 - op/sep ;

692| 130 - kw int
692| 5 - id cg_loop_level #855
692| 59 - op/sep ;

694| 130 - kw int
694| 5 - id cg_new_label #814
694| 40 - op/sep (
694| 41 - op/sep )
694| 123 - op/sep {
694| 137 - kw return
694| 105 - op/sep i
694| 5 - id cg_label #525
694| 59 - op/sep ;
694| 125 - op/sep }

696| 130 - kw int
696| 5 - id cg_new_loop_label #177
696| 40 - op/sep (
696| 41 - op/sep )

697| 123 - op/sep {

698| 5 - id cg_loop_label #783
698| 91 - op/sep [
698| 5 - id cg_loop_level #855
698| 93 - op/sep ]
698| 61 - op/sep =
698| 105 - op/sep i
698| 5 - id cg_label #525
698| 59 - op/sep ;
698| 105 - op/sep i
698| 5 - id cg_loop_level #855
698| 59 - op/sep ;

699| 137 - kw return
699| 5 - id cg_label #525
699| 59 - op/sep ;

700| 125 - op/sep }

702| 130 - kw int
702| 5 - id cg_current_loop_label #737
702| 40 - op/sep (
702| 41 - op/sep )

703| 123 - op/sep {

704| 132 - kw if
704| 40 - op/sep (
704| 5 - id cg_loop_level #855
704| 108 - op/sep l
704| 2 - num 0
704| 41 - op/sep )
704| 137 - kw return
704| 45 - op/sep -
704| 2 - num 1
704| 59 - op/sep ;

705| 137 - kw return
705| 5 - id cg_loop_label #783
705| 91 - op/sep [
705| 5 - id cg_loop_level #855
705| 45 - op/sep -
705| 2 - num 1
705| 93 - op/sep ]
705| 59 - op/sep ;

706| 125 - op/sep }

708| 128 - kw void
708| 5 - id cg_pop_loop_label #827
708| 40 - op/sep (
708| 41 - op/sep )
708| 123 - op/sep {
708| 100 - op/sep d
708| 5 - id cg_loop_level #855
708| 59 - op/sep ;
708| 125 - op/sep }

710| 128 - kw void
710| 5 - id cg_o #993
710| 40 - op/sep (
710| 129 - kw char
710| 42 - op/sep *
710| 5 - id s #93
710| 41 - op/sep )

711| 123 - op/sep {

712| 130 - kw int
712| 5 - id n #88
712| 61 - op/sep =
712| 5 - id strlen #338
712| 40 - op/sep (
712| 5 - id s #93
712| 41 - op/sep )
712| 59 - op/sep ;

713| 132 - kw if
713| 40 - op/sep (
713| 5 - id cg_buffer #140
713| 101 - op/sep e
713| 2 - num 0
713| 41 - op/sep )
713| 5 - id write #600
713| 40 - op/sep (
713| 5 - id cg_file #859
713| 44 - op/sep ,
713| 5 - id s #93
713| 44 - op/sep ,
713| 5 - id n #88
713| 41 - op/sep )
713| 59 - op/sep ;
713| 133 - kw else
713| 5 - id bf_append #218
713| 40 - op/sep (
713| 5 - id cg_buffer #140
713| 44 - op/sep ,
713| 5 - id s #93
713| 44 - op/sep ,
713| 5 - id n #88
713| 41 - op/sep )
713| 59 - op/sep ;

714| 125 - op/sep }

716| 128 - kw void
716| 5 - id cg_n #994
716| 40 - op/sep (
716| 129 - kw char
716| 42 - op/sep *
716| 5 - id s #93
716| 41 - op/sep )

717| 123 - op/sep {

718| 130 - kw int
718| 5 - id n #88
718| 61 - op/sep =
718| 5 - id strlen #338
718| 40 - op/sep (
718| 5 - id s #93
718| 41 - op/sep )
718| 59 - op/sep ;

719| 132 - kw if
719| 40 - op/sep (
719| 5 - id cg_buffer #140
719| 101 - op/sep e
719| 2 - num 0
719| 41 - op/sep )
719| 123 - op/sep {
719| 5 - id write #600
719| 40 - op/sep (
719| 5 - id cg_file #859
719| 44 - op/sep ,
719| 5 - id s #93
719| 44 - op/sep ,
719| 5 - id n #88
719| 41 - op/sep )
719| 59 - op/sep ;
719| 5 - id write #600
719| 40 - op/sep (
719| 5 - id cg_file #859
719| 44 - op/sep ,
719| 4 - str "\n"
719| 44 - op/sep ,
719| 2 - num 1
719| 41 - op/sep )
719| 59 - op/sep ;
719| 125 - op/sep }

720| 133 - kw else
720| 123 - op/sep {
720| 5 - id bf_append #218
720| 40 - op/sep (
720| 5 - id cg_buffer #140
720| 44 - op/sep ,
720| 5 - id s #93
720| 44 - op/sep ,
720| 5 - id n #88
720| 41 - op/sep )
720| 59 - op/sep ;
720| 5 - id bf_append #218
720| 40 - op/sep (
720| 5 - id cg_buffer #140
720| 44 - op/sep ,
720| 4 - str "\n"
720| 44 - op/sep ,
720| 2 - num 1
720| 41 - op/sep )
720| 59 - op/sep ;
720| 125 - op/sep }

721| 125 - op/sep }

723| 128 - kw void
723| 5 - id cg_2 #932
723| 40 - op/sep (
723| 129 - kw char
723| 42 - op/sep *
723| 5 - id s #93
723| 44 - op/sep ,
723| 129 - kw char
723| 42 - op/sep *
723| 5 - id t #94
723| 41 - op/sep )
723| 123 - op/sep {
723| 5 - id cg_o #993
723| 40 - op/sep (
723| 5 - id s #93
723| 41 - op/sep )
723| 59 - op/sep ;
723| 5 - id cg_o #993
723| 40 - op/sep (
723| 5 - id t #94
723| 41 - op/sep )
723| 59 - op/sep ;
723| 125 - op/sep }

724| 128 - kw void
724| 5 - id cg_2n #198
724| 40 - op/sep (
724| 129 - kw char
724| 42 - op/sep *
724| 5 - id s #93
724| 44 - op/sep ,
724| 129 - kw char
724| 42 - op/sep *
724| 5 - id t #94
724| 41 - op/sep )
724| 123 - op/sep {
724| 5 - id cg_o #993
724| 40 - op/sep (
724| 5 - id s #93
724| 41 - op/sep )
724| 59 - op/sep ;
724| 5 - id cg_n #994
724| 40 - op/sep (
724| 5 - id t #94
724| 41 - op/sep )
724| 59 - op/sep ;
724| 125 - op/sep }

725| 128 - kw void
725| 5 - id cg_3 #933
725| 40 - op/sep (
725| 129 - kw char
725| 42 - op/sep *
725| 5 - id s #93
725| 44 - op/sep ,
725| 129 - kw char
725| 42 - op/sep *
725| 5 - id t #94
725| 44 - op/sep ,
725| 129 - kw char
725| 42 - op/sep *
725| 5 - id u #97
725| 41 - op/sep )
725| 123 - op/sep {
725| 5 - id cg_o #993
725| 40 - op/sep (
725| 5 - id s #93
725| 41 - op/sep )
725| 59 - op/sep ;
725| 5 - id cg_o #993
725| 40 - op/sep (
725| 5 - id t #94
725| 41 - op/sep )
725| 59 - op/sep ;
725| 5 - id cg_o #993
725| 40 - op/sep (
725| 5 - id u #97
725| 41 - op/sep )
725| 59 - op/sep ;
725| 125 - op/sep }

726| 128 - kw void
726| 5 - id cg_3n #264
726| 40 - op/sep (
726| 129 - kw char
726| 42 - op/sep *
726| 5 - id s #93
726| 44 - op/sep ,
726| 129 - kw char
726| 42 - op/sep *
726| 5 - id t #94
726| 44 - op/sep ,
726| 129 - kw char
726| 42 - op/sep *
726| 5 - id u #97
726| 41 - op/sep )
726| 123 - op/sep {
726| 5 - id cg_o #993
726| 40 - op/sep (
726| 5 - id s #93
726| 41 - op/sep )
726| 59 - op/sep ;
726| 5 - id cg_o #993
726| 40 - op/sep (
726| 5 - id t #94
726| 41 - op/sep )
726| 59 - op/sep ;
726| 5 - id cg_n #994
726| 40 - op/sep (
726| 5 - id u #97
726| 41 - op/sep )
726| 59 - op/sep ;
726| 125 - op/sep }

728| 128 - kw void
728| 5 - id cg_line #577
728| 40 - op/sep (
728| 41 - op/sep )
728| 123 - op/sep {
728| 132 - kw if
728| 40 - op/sep (
728| 5 - id CG_LINES #579
728| 41 - op/sep )
728| 5 - id cg_2n #198
728| 40 - op/sep (
728| 4 - str "  # "
728| 44 - op/sep ,
728| 5 - id i2s #466
728| 40 - op/sep (
728| 5 - id rd_line #784
728| 41 - op/sep )
728| 41 - op/sep )
728| 59 - op/sep ;
728| 125 - op/sep }

730| 128 - kw void
730| 5 - id cg_suspend #188
730| 40 - op/sep (
730| 41 - op/sep )

731| 123 - op/sep {

732| 5 - id assert #124
732| 40 - op/sep (
732| 5 - id cg_buffer #140
732| 101 - op/sep e
732| 2 - num 0
732| 44 - op/sep ,
732| 4 - str "int error: already suspended!"
732| 41 - op/sep )
732| 59 - op/sep ;

733| 5 - id cg_buffer #140
733| 61 - op/sep =
733| 5 - id bf_alloc_min #524
733| 40 - op/sep (
733| 5 - id BF_WRT_SZ #945
733| 41 - op/sep )
733| 59 - op/sep ;

734| 125 - op/sep }

736| 128 - kw void
736| 5 - id cg_resume #772
736| 40 - op/sep (
736| 129 - kw char
736| 42 - op/sep *
736| 5 - id s #93
736| 41 - op/sep )

737| 123 - op/sep {

738| 5 - id assert #124
738| 40 - op/sep (
738| 5 - id cg_buffer #140
738| 110 - op/sep n
738| 2 - num 0
738| 44 - op/sep ,
738| 4 - str "int error: was not suspended!"
738| 41 - op/sep )
738| 59 - op/sep ;

739| 5 - id write #600
739| 40 - op/sep (
739| 5 - id cg_file #859
739| 44 - op/sep ,
739| 5 - id s #93
739| 44 - op/sep ,
739| 5 - id strlen #338
739| 40 - op/sep (
739| 5 - id s #93
739| 41 - op/sep )
739| 41 - op/sep )
739| 59 - op/sep ;

740| 5 - id bf_write #180
740| 40 - op/sep (
740| 5 - id cg_buffer #140
740| 44 - op/sep ,
740| 5 - id cg_file #859
740| 41 - op/sep )
740| 59 - op/sep ;
740| 5 - id bf_free #429
740| 40 - op/sep (
740| 5 - id cg_buffer #140
740| 41 - op/sep )
740| 59 - op/sep ;
740| 5 - id cg_buffer #140
740| 61 - op/sep =
740| 2 - num 0
740| 59 - op/sep ;

741| 125 - op/sep }

743| 128 - kw void
743| 5 - id cg_begin #478
743| 40 - op/sep (
743| 129 - kw char
743| 42 - op/sep *
743| 5 - id fn #782
743| 41 - op/sep )

744| 123 - op/sep {

745| 5 - id cg_3n #264
745| 40 - op/sep (
745| 4 - str "  .file ""
745| 44 - op/sep ,
745| 5 - id fn #782
745| 44 - op/sep ,
745| 4 - str """
745| 41 - op/sep )
745| 59 - op/sep ;

746| 5 - id cg_n #994
746| 40 - op/sep (
746| 4 - str "  .intel_syntax noprefix\n"
746| 41 - op/sep )
746| 59 - op/sep ;

747| 125 - op/sep }

749| 128 - kw void
749| 5 - id cg_end #951
749| 40 - op/sep (
749| 41 - op/sep )

750| 123 - op/sep {

752| 5 - id cg_3n #264
752| 40 - op/sep (
752| 4 - str "\n  .ident  ""
752| 44 - op/sep ,
752| 5 - id TITLE #781
752| 44 - op/sep ,
752| 4 - str ""\n"
752| 41 - op/sep )
752| 59 - op/sep ;

754| 135 - kw for
754| 40 - op/sep (
754| 130 - kw int
754| 5 - id i #83
754| 61 - op/sep =
754| 2 - num 0
754| 59 - op/sep ;
754| 5 - id i #83
754| 60 - op/sep <
754| 5 - id st_count #730
754| 59 - op/sep ;
754| 105 - op/sep i
754| 5 - id i #83
754| 41 - op/sep )

755| 132 - kw if
755| 40 - op/sep (
755| 5 - id st_kind #389
755| 91 - op/sep [
755| 5 - id i #83
755| 93 - op/sep ]
755| 101 - op/sep e
755| 5 - id K_fn #550
755| 97 - op/sep a
755| 5 - id st_value #595
755| 91 - op/sep [
755| 5 - id i #83
755| 93 - op/sep ]
755| 101 - op/sep e
755| 2 - num 0
755| 41 - op/sep )

756| 5 - id cg_3n #264
756| 40 - op/sep (
756| 4 - str "  .def _"
756| 44 - op/sep ,
756| 5 - id id_table #669
756| 91 - op/sep [
756| 5 - id st_id #463
756| 91 - op/sep [
756| 5 - id i #83
756| 93 - op/sep ]
756| 93 - op/sep ]
756| 44 - op/sep ,
756| 4 - str "; .scl 2; .type 32; .endef"
756| 41 - op/sep )
756| 59 - op/sep ;

757| 125 - op/sep }

759| 128 - kw void
759| 5 - id cg_fn_begin #67
759| 40 - op/sep (
759| 129 - kw char
759| 42 - op/sep *
759| 5 - id name #237
759| 41 - op/sep )

760| 123 - op/sep {

761| 132 - kw if
761| 40 - op/sep (
761| 5 - id strequ #915
761| 40 - op/sep (
761| 5 - id name #237
761| 44 - op/sep ,
761| 4 - str "main"
761| 41 - op/sep )
761| 41 - op/sep )
761| 5 - id cg_n #994
761| 40 - op/sep (
761| 4 - str "  .def ___main; .scl 2; .type 32; .endef"
761| 41 - op/sep )
761| 59 - op/sep ;

762| 132 - kw if
762| 40 - op/sep (
762| 5 - id cg_section #889
762| 110 - op/sep n
762| 5 - id S_CODE #80
762| 41 - op/sep )
762| 123 - op/sep {
762| 5 - id cg_section #889
762| 61 - op/sep =
762| 5 - id S_CODE #80
762| 59 - op/sep ;
762| 5 - id cg_n #994
762| 40 - op/sep (
762| 4 - str "  .text"
762| 41 - op/sep )
762| 59 - op/sep ;
762| 125 - op/sep }

763| 5 - id cg_2n #198
763| 40 - op/sep (
763| 4 - str "  .globl _"
763| 44 - op/sep ,
763| 5 - id name #237
763| 41 - op/sep )
763| 59 - op/sep ;

764| 5 - id cg_3n #264
764| 40 - op/sep (
764| 4 - str "  .def _"
764| 44 - op/sep ,
764| 5 - id name #237
764| 44 - op/sep ,
764| 4 - str "; .scl 2; .type 32; .endef"
764| 41 - op/sep )
764| 59 - op/sep ;

765| 5 - id cg_3n #264
765| 40 - op/sep (
765| 4 - str "_"
765| 44 - op/sep ,
765| 5 - id name #237
765| 44 - op/sep ,
765| 4 - str ":"
765| 41 - op/sep )
765| 59 - op/sep ;

766| 5 - id cg_n #994
766| 40 - op/sep (
766| 4 - str "  .cfi_startproc"
766| 41 - op/sep )
766| 59 - op/sep ;

767| 5 - id cg_n #994
767| 40 - op/sep (
767| 4 - str "  push ebp"
767| 41 - op/sep )
767| 59 - op/sep ;

768| 5 - id cg_n #994
768| 40 - op/sep (
768| 4 - str "  .cfi_def_cfa_offset 8\n  .cfi_offset 5,-8"
768| 41 - op/sep )
768| 59 - op/sep ;

769| 5 - id cg_n #994
769| 40 - op/sep (
769| 4 - str "  mov ebp,esp"
769| 41 - op/sep )
769| 59 - op/sep ;

770| 5 - id cg_n #994
770| 40 - op/sep (
770| 4 - str "  .cfi_def_cfa_register 5"
770| 41 - op/sep )
770| 59 - op/sep ;

771| 125 - op/sep }

773| 128 - kw void
773| 5 - id cg_fn_end #688
773| 40 - op/sep (
773| 130 - kw int
773| 5 - id ret0 #641
773| 41 - op/sep )

774| 123 - op/sep {

775| 132 - kw if
775| 40 - op/sep (
775| 5 - id ret0 #641
775| 41 - op/sep )
775| 5 - id cg_n #994
775| 40 - op/sep (
775| 4 - str "  xor eax,eax"
775| 41 - op/sep )
775| 59 - op/sep ;

776| 5 - id cg_3n #264
776| 40 - op/sep (
776| 4 - str "R"
776| 44 - op/sep ,
776| 5 - id i2s #466
776| 40 - op/sep (
776| 5 - id cg_fn_label #111
776| 41 - op/sep )
776| 44 - op/sep ,
776| 4 - str ":"
776| 41 - op/sep )
776| 59 - op/sep ;

777| 5 - id cg_n #994
777| 40 - op/sep (
777| 4 - str "  leave"
777| 41 - op/sep )
777| 59 - op/sep ;

778| 5 - id cg_n #994
778| 40 - op/sep (
778| 4 - str "  .cfi_restore 5\n  .cfi_def_cfa 4,4"
778| 41 - op/sep )
778| 59 - op/sep ;

779| 5 - id cg_n #994
779| 40 - op/sep (
779| 4 - str "  ret"
779| 41 - op/sep )
779| 59 - op/sep ;

780| 5 - id cg_n #994
780| 40 - op/sep (
780| 4 - str "  .cfi_endproc\n"
780| 41 - op/sep )
780| 59 - op/sep ;

781| 125 - op/sep }

783| 128 - kw void
783| 5 - id cg_spec_and_nl #719
783| 40 - op/sep (
783| 129 - kw char
783| 42 - op/sep *
783| 5 - id str #959
783| 44 - op/sep ,
783| 130 - kw int
783| 5 - id next #242
783| 41 - op/sep )

784| 123 - op/sep {

785| 5 - id cg_o #993
785| 40 - op/sep (
785| 5 - id str #959
785| 41 - op/sep )
785| 59 - op/sep ;
785| 132 - kw if
785| 40 - op/sep (
785| 5 - id next #242
785| 103 - op/sep g
785| 3 - chr 48
785| 97 - op/sep a
785| 5 - id next #242
785| 108 - op/sep l
785| 3 - chr 57
785| 41 - op/sep )
785| 5 - id cg_o #993
785| 40 - op/sep (
785| 4 - str ""\n  .ascii ""
785| 41 - op/sep )
785| 59 - op/sep ;

786| 125 - op/sep }

788| 128 - kw void
788| 5 - id cg_sl_str #361
788| 40 - op/sep (
788| 130 - kw int
788| 5 - id i #83
788| 41 - op/sep )

789| 123 - op/sep {

790| 129 - kw char
790| 5 - id c #77
790| 91 - op/sep [
790| 2 - num 2
790| 93 - op/sep ]
790| 59 - op/sep ;
790| 5 - id c #77
790| 91 - op/sep [
790| 2 - num 1
790| 93 - op/sep ]
790| 61 - op/sep =
790| 3 - chr 0
790| 59 - op/sep ;

792| 5 - id cg_o #993
792| 40 - op/sep (
792| 4 - str "  .ascii ""
792| 41 - op/sep )
792| 59 - op/sep ;

793| 135 - kw for
793| 40 - op/sep (
793| 129 - kw char
793| 42 - op/sep *
793| 5 - id s #93
793| 61 - op/sep =
793| 5 - id sl_table #893
793| 91 - op/sep [
793| 5 - id i #83
793| 93 - op/sep ]
793| 59 - op/sep ;
793| 42 - op/sep *
793| 5 - id s #93
793| 59 - op/sep ;
793| 105 - op/sep i
793| 5 - id s #93
793| 41 - op/sep )

794| 123 - op/sep {

795| 132 - kw if
795| 40 - op/sep (
795| 42 - op/sep *
795| 5 - id s #93
795| 101 - op/sep e
795| 3 - chr 10
795| 41 - op/sep )
795| 5 - id cg_spec_and_nl #719
795| 40 - op/sep (
795| 4 - str "\12"
795| 44 - op/sep ,
795| 5 - id s #93
795| 91 - op/sep [
795| 2 - num 1
795| 93 - op/sep ]
795| 41 - op/sep )
795| 59 - op/sep ;

796| 133 - kw else
796| 132 - kw if
796| 40 - op/sep (
796| 42 - op/sep *
796| 5 - id s #93
796| 101 - op/sep e
796| 3 - chr 92
796| 41 - op/sep )
796| 5 - id cg_spec_and_nl #719
796| 40 - op/sep (
796| 4 - str "\134"
796| 44 - op/sep ,
796| 5 - id s #93
796| 91 - op/sep [
796| 2 - num 1
796| 93 - op/sep ]
796| 41 - op/sep )
796| 59 - op/sep ;

797| 133 - kw else
797| 132 - kw if
797| 40 - op/sep (
797| 42 - op/sep *
797| 5 - id s #93
797| 101 - op/sep e
797| 3 - chr 13
797| 41 - op/sep )
797| 5 - id cg_spec_and_nl #719
797| 40 - op/sep (
797| 4 - str "\15"
797| 44 - op/sep ,
797| 5 - id s #93
797| 91 - op/sep [
797| 2 - num 1
797| 93 - op/sep ]
797| 41 - op/sep )
797| 59 - op/sep ;

798| 133 - kw else
798| 132 - kw if
798| 40 - op/sep (
798| 42 - op/sep *
798| 5 - id s #93
798| 101 - op/sep e
798| 3 - chr 8
798| 41 - op/sep )
798| 5 - id cg_spec_and_nl #719
798| 40 - op/sep (
798| 4 - str "\10"
798| 44 - op/sep ,
798| 5 - id s #93
798| 91 - op/sep [
798| 2 - num 1
798| 93 - op/sep ]
798| 41 - op/sep )
798| 59 - op/sep ;

799| 133 - kw else
799| 132 - kw if
799| 40 - op/sep (
799| 42 - op/sep *
799| 5 - id s #93
799| 101 - op/sep e
799| 3 - chr 34
799| 41 - op/sep )
799| 5 - id cg_spec_and_nl #719
799| 40 - op/sep (
799| 4 - str "\42"
799| 44 - op/sep ,
799| 5 - id s #93
799| 91 - op/sep [
799| 2 - num 1
799| 93 - op/sep ]
799| 41 - op/sep )
799| 59 - op/sep ;

800| 133 - kw else
800| 123 - op/sep {
800| 5 - id c #77
800| 91 - op/sep [
800| 2 - num 0
800| 93 - op/sep ]
800| 61 - op/sep =
800| 42 - op/sep *
800| 5 - id s #93
800| 59 - op/sep ;
800| 5 - id cg_o #993
800| 40 - op/sep (
800| 5 - id c #77
800| 41 - op/sep )
800| 59 - op/sep ;
800| 125 - op/sep }

801| 125 - op/sep }

802| 5 - id cg_n #994
802| 40 - op/sep (
802| 4 - str "\0""
802| 41 - op/sep )
802| 59 - op/sep ;

803| 125 - op/sep }

805| 128 - kw void
805| 5 - id cg_sl_table #841
805| 40 - op/sep (
805| 41 - op/sep )

806| 123 - op/sep {

807| 5 - id cg_n #994
807| 40 - op/sep (
807| 4 - str "  .section .rdata,"dr""
807| 41 - op/sep )
807| 59 - op/sep ;

808| 135 - kw for
808| 40 - op/sep (
808| 130 - kw int
808| 5 - id i #83
808| 61 - op/sep =
808| 2 - num 0
808| 59 - op/sep ;
808| 5 - id i #83
808| 60 - op/sep <
808| 5 - id sl_count #622
808| 59 - op/sep ;
808| 105 - op/sep i
808| 5 - id i #83
808| 41 - op/sep )

809| 123 - op/sep {

810| 5 - id cg_3n #264
810| 40 - op/sep (
810| 4 - str "S"
810| 44 - op/sep ,
810| 5 - id i2s #466
810| 40 - op/sep (
810| 5 - id i #83
810| 41 - op/sep )
810| 44 - op/sep ,
810| 4 - str ":"
810| 41 - op/sep )
810| 59 - op/sep ;

811| 5 - id cg_sl_str #361
811| 40 - op/sep (
811| 5 - id i #83
811| 41 - op/sep )
811| 59 - op/sep ;

812| 125 - op/sep }

813| 125 - op/sep }

815| 129 - kw char
815| 42 - op/sep *
815| 5 - id cg_var #501
815| 40 - op/sep (
815| 130 - kw int
815| 5 - id e1 #654
815| 41 - op/sep )

816| 123 - op/sep {

817| 132 - kw if
817| 40 - op/sep (
817| 5 - id st_type #985
817| 91 - op/sep [
817| 5 - id e1 #654
817| 93 - op/sep ]
817| 101 - op/sep e
817| 5 - id T_c #736
817| 41 - op/sep )
817| 5 - id cg_o #993
817| 40 - op/sep (
817| 4 - str "BYTE PTR "
817| 41 - op/sep )
817| 59 - op/sep ;
817| 133 - kw else
817| 5 - id cg_o #993
817| 40 - op/sep (
817| 4 - str "DWORD PTR "
817| 41 - op/sep )
817| 59 - op/sep ;

818| 132 - kw if
818| 40 - op/sep (
818| 5 - id e1 #654
818| 60 - op/sep <
818| 5 - id st_local #865
818| 41 - op/sep )
818| 123 - op/sep {
818| 5 - id cg_2 #932
818| 40 - op/sep (
818| 4 - str "_"
818| 44 - op/sep ,
818| 5 - id id_table #669
818| 91 - op/sep [
818| 5 - id st_id #463
818| 91 - op/sep [
818| 5 - id e1 #654
818| 93 - op/sep ]
818| 93 - op/sep ]
818| 41 - op/sep )
818| 59 - op/sep ;
818| 137 - kw return
818| 2 - num 0
818| 59 - op/sep ;
818| 125 - op/sep }

819| 130 - kw int
819| 5 - id v #96
819| 61 - op/sep =
819| 5 - id st_value #595
819| 91 - op/sep [
819| 5 - id e1 #654
819| 93 - op/sep ]
819| 59 - op/sep ;

820| 5 - id cg_o #993
820| 40 - op/sep (
820| 4 - str "[ebp"
820| 41 - op/sep )
820| 59 - op/sep ;
820| 132 - kw if
820| 40 - op/sep (
820| 5 - id v #96
820| 62 - op/sep >
820| 2 - num 0
820| 41 - op/sep )
820| 5 - id cg_o #993
820| 40 - op/sep (
820| 4 - str "+"
820| 41 - op/sep )
820| 59 - op/sep ;
820| 5 - id cg_2 #932
820| 40 - op/sep (
820| 5 - id i2s #466
820| 40 - op/sep (
820| 5 - id v #96
820| 41 - op/sep )
820| 44 - op/sep ,
820| 4 - str "]"
820| 41 - op/sep )
820| 59 - op/sep ;

821| 137 - kw return
821| 5 - id id_table #669
821| 91 - op/sep [
821| 5 - id st_id #463
821| 91 - op/sep [
821| 5 - id e1 #654
821| 93 - op/sep ]
821| 93 - op/sep ]
821| 59 - op/sep ;

822| 125 - op/sep }

824| 128 - kw void
824| 5 - id cg_var_n #832
824| 40 - op/sep (
824| 130 - kw int
824| 5 - id e #79
824| 41 - op/sep )

825| 123 - op/sep {

826| 129 - kw char
826| 42 - op/sep *
826| 5 - id name #237
826| 61 - op/sep =
826| 5 - id cg_var #501
826| 40 - op/sep (
826| 5 - id e #79
826| 41 - op/sep )
826| 59 - op/sep ;
826| 132 - kw if
826| 40 - op/sep (
826| 5 - id name #237
826| 41 - op/sep )
826| 5 - id cg_2n #198
826| 40 - op/sep (
826| 4 - str " # "
826| 44 - op/sep ,
826| 5 - id name #237
826| 41 - op/sep )
826| 59 - op/sep ;
826| 133 - kw else
826| 5 - id cg_o #993
826| 40 - op/sep (
826| 4 - str "\n"
826| 41 - op/sep )
826| 59 - op/sep ;

827| 125 - op/sep }

829| 130 - kw int
829| 5 - id cg_exprs_backwards_with_push #590
829| 40 - op/sep (
829| 130 - kw int
829| 42 - op/sep *
829| 42 - op/sep *
829| 5 - id e #79
829| 41 - op/sep )
829| 59 - op/sep ;

831| 128 - kw void
831| 5 - id cg_expr #960
831| 40 - op/sep (
831| 130 - kw int
831| 42 - op/sep *
831| 5 - id e #79
831| 41 - op/sep )

832| 123 - op/sep {

833| 130 - kw int
833| 5 - id e0 #653
833| 61 - op/sep =
833| 5 - id e #79
833| 91 - op/sep [
833| 2 - num 0
833| 93 - op/sep ]
833| 38 - op/sep &
833| 5 - id ET_MASK #1002
833| 59 - op/sep ;

834| 132 - kw if
834| 40 - op/sep (
834| 5 - id e0 #653
834| 101 - op/sep e
834| 5 - id ET_num #510
834| 41 - op/sep )

835| 123 - op/sep {

836| 130 - kw int
836| 5 - id n #88
836| 61 - op/sep =
836| 5 - id e #79
836| 91 - op/sep [
836| 2 - num 1
836| 93 - op/sep ]
836| 59 - op/sep ;

837| 132 - kw if
837| 40 - op/sep (
837| 5 - id n #88
837| 101 - op/sep e
837| 2 - num 0
837| 41 - op/sep )
837| 5 - id cg_n #994
837| 40 - op/sep (
837| 4 - str "  xor eax,eax"
837| 41 - op/sep )
837| 59 - op/sep ;
837| 133 - kw else
837| 5 - id cg_2n #198
837| 40 - op/sep (
837| 4 - str "  mov eax,"
837| 44 - op/sep ,
837| 5 - id i2s #466
837| 40 - op/sep (
837| 5 - id n #88
837| 41 - op/sep )
837| 41 - op/sep )
837| 59 - op/sep ;

838| 125 - op/sep }

839| 133 - kw else
839| 132 - kw if
839| 40 - op/sep (
839| 5 - id e0 #653
839| 101 - op/sep e
839| 5 - id ET_str #31
839| 41 - op/sep )

840| 123 - op/sep {

841| 5 - id cg_2n #198
841| 40 - op/sep (
841| 4 - str "  mov eax,OFFSET FLAT:S"
841| 44 - op/sep ,
841| 5 - id i2s #466
841| 40 - op/sep (
841| 5 - id e #79
841| 91 - op/sep [
841| 2 - num 1
841| 93 - op/sep ]
841| 41 - op/sep )
841| 41 - op/sep )
841| 59 - op/sep ;

842| 125 - op/sep }

843| 133 - kw else
843| 132 - kw if
843| 40 - op/sep (
843| 5 - id e0 #653
843| 101 - op/sep e
843| 5 - id ET_var #746
843| 41 - op/sep )

844| 123 - op/sep {

845| 130 - kw int
845| 5 - id k #85
845| 61 - op/sep =
845| 5 - id st_kind #389
845| 91 - op/sep [
845| 5 - id e #79
845| 91 - op/sep [
845| 2 - num 1
845| 93 - op/sep ]
845| 93 - op/sep ]
845| 59 - op/sep ;

846| 132 - kw if
846| 40 - op/sep (
846| 5 - id k #85
846| 101 - op/sep e
846| 5 - id K_var #777
846| 111 - op/sep o
846| 5 - id k #85
846| 101 - op/sep e
846| 5 - id K_arg #213
846| 41 - op/sep )

847| 123 - op/sep {

848| 5 - id assert #124
848| 40 - op/sep (
848| 5 - id e #79
848| 91 - op/sep [
848| 2 - num 0
848| 93 - op/sep ]
848| 47 - op/sep /
848| 5 - id ET_T #992
848| 101 - op/sep e
848| 5 - id st_type #985
848| 91 - op/sep [
848| 5 - id e #79
848| 91 - op/sep [
848| 2 - num 1
848| 93 - op/sep ]
848| 93 - op/sep ]
848| 44 - op/sep ,
848| 4 - str "ET_var is wrong"
848| 41 - op/sep )
848| 59 - op/sep ;

849| 132 - kw if
849| 40 - op/sep (
849| 5 - id st_type #985
849| 91 - op/sep [
849| 5 - id e #79
849| 91 - op/sep [
849| 2 - num 1
849| 93 - op/sep ]
849| 93 - op/sep ]
849| 101 - op/sep e
849| 5 - id T_c #736
849| 41 - op/sep )
849| 5 - id cg_o #993
849| 40 - op/sep (
849| 4 - str "  movsx eax,"
849| 41 - op/sep )
849| 59 - op/sep ;
849| 133 - kw else
849| 5 - id cg_o #993
849| 40 - op/sep (
849| 4 - str "  mov eax,"
849| 41 - op/sep )
849| 59 - op/sep ;

850| 5 - id cg_var_n #832
850| 40 - op/sep (
850| 5 - id e #79
850| 91 - op/sep [
850| 2 - num 1
850| 93 - op/sep ]
850| 41 - op/sep )
850| 59 - op/sep ;

851| 125 - op/sep }

852| 133 - kw else

853| 123 - op/sep {

854| 5 - id assert #124
854| 40 - op/sep (
854| 5 - id k #85
854| 101 - op/sep e
854| 5 - id K_array #367
854| 44 - op/sep ,
854| 4 - str "Must be var | arg | array"
854| 41 - op/sep )
854| 59 - op/sep ;

855| 130 - kw int
855| 5 - id id #969
855| 61 - op/sep =
855| 5 - id st_id #463
855| 91 - op/sep [
855| 5 - id e #79
855| 91 - op/sep [
855| 2 - num 1
855| 93 - op/sep ]
855| 93 - op/sep ]
855| 59 - op/sep ;

856| 132 - kw if
856| 40 - op/sep (
856| 5 - id e #79
856| 91 - op/sep [
856| 2 - num 1
856| 93 - op/sep ]
856| 60 - op/sep <
856| 5 - id st_local #865
856| 41 - op/sep )

857| 5 - id cg_o #993
857| 40 - op/sep (
857| 4 - str "  mov eax,OFFSET FLAT:_"
857| 41 - op/sep )
857| 59 - op/sep ;

858| 133 - kw else

859| 123 - op/sep {

860| 5 - id cg_o #993
860| 40 - op/sep (
860| 4 - str "  lea eax,[ebp"
860| 41 - op/sep )
860| 59 - op/sep ;
860| 130 - kw int
860| 5 - id v #96
860| 61 - op/sep =
860| 5 - id st_value #595
860| 91 - op/sep [
860| 5 - id e #79
860| 91 - op/sep [
860| 2 - num 1
860| 93 - op/sep ]
860| 93 - op/sep ]
860| 59 - op/sep ;
860| 132 - kw if
860| 40 - op/sep (
860| 5 - id v #96
860| 62 - op/sep >
860| 2 - num 0
860| 41 - op/sep )
860| 5 - id cg_o #993
860| 40 - op/sep (
860| 4 - str "+"
860| 41 - op/sep )
860| 59 - op/sep ;

861| 5 - id cg_2 #932
861| 40 - op/sep (
861| 5 - id i2s #466
861| 40 - op/sep (
861| 5 - id v #96
861| 41 - op/sep )
861| 44 - op/sep ,
861| 4 - str "] # "
861| 41 - op/sep )
861| 59 - op/sep ;

862| 125 - op/sep }

863| 5 - id cg_n #994
863| 40 - op/sep (
863| 5 - id id_table #669
863| 91 - op/sep [
863| 5 - id id #969
863| 93 - op/sep ]
863| 41 - op/sep )
863| 59 - op/sep ;

864| 125 - op/sep }

865| 125 - op/sep }

866| 133 - kw else
866| 132 - kw if
866| 40 - op/sep (
866| 5 - id e0 #653
866| 101 - op/sep e
866| 5 - id ET_call #308
866| 41 - op/sep )

867| 123 - op/sep {

869| 132 - kw if
869| 40 - op/sep (
869| 40 - op/sep (
869| 42 - op/sep *
869| 40 - op/sep (
869| 130 - kw int
869| 42 - op/sep *
869| 41 - op/sep )
869| 5 - id e #79
869| 91 - op/sep [
869| 2 - num 1
869| 93 - op/sep ]
869| 38 - op/sep &
869| 5 - id ET_MASK #1002
869| 41 - op/sep )
869| 110 - op/sep n
869| 5 - id ET_fn #612
869| 41 - op/sep )
869| 5 - id err1 #522
869| 40 - op/sep (
869| 4 - str "A call must have fn name on the left"
869| 41 - op/sep )
869| 59 - op/sep ;

870| 130 - kw int
870| 5 - id n_args #759
870| 61 - op/sep =
870| 5 - id cg_exprs_backwards_with_push #590
870| 40 - op/sep (
870| 40 - op/sep (
870| 130 - kw int
870| 42 - op/sep *
870| 42 - op/sep *
870| 41 - op/sep )
870| 5 - id e #79
870| 91 - op/sep [
870| 2 - num 2
870| 93 - op/sep ]
870| 41 - op/sep )
870| 59 - op/sep ;

871| 5 - id cg_2n #198
871| 40 - op/sep (
871| 4 - str "  call _"
871| 44 - op/sep ,
871| 5 - id id_table #669
871| 91 - op/sep [
871| 5 - id st_id #463
871| 91 - op/sep [
871| 40 - op/sep (
871| 40 - op/sep (
871| 130 - kw int
871| 42 - op/sep *
871| 41 - op/sep )
871| 5 - id e #79
871| 91 - op/sep [
871| 2 - num 1
871| 93 - op/sep ]
871| 41 - op/sep )
871| 91 - op/sep [
871| 2 - num 1
871| 93 - op/sep ]
871| 93 - op/sep ]
871| 93 - op/sep ]
871| 41 - op/sep )
871| 59 - op/sep ;

872| 132 - kw if
872| 40 - op/sep (
872| 5 - id n_args #759
872| 62 - op/sep >
872| 2 - num 0
872| 41 - op/sep )
872| 5 - id cg_2n #198
872| 40 - op/sep (
872| 4 - str "  add esp,"
872| 44 - op/sep ,
872| 5 - id i2s #466
872| 40 - op/sep (
872| 5 - id INTSZ #949
872| 42 - op/sep *
872| 5 - id n_args #759
872| 41 - op/sep )
872| 41 - op/sep )
872| 59 - op/sep ;

873| 125 - op/sep }

874| 133 - kw else
874| 132 - kw if
874| 40 - op/sep (
874| 5 - id e0 #653
874| 101 - op/sep e
874| 3 - chr 61
874| 41 - op/sep )

875| 123 - op/sep {

876| 130 - kw int
876| 42 - op/sep *
876| 5 - id e1 #654
876| 61 - op/sep =
876| 40 - op/sep (
876| 130 - kw int
876| 42 - op/sep *
876| 41 - op/sep )
876| 5 - id e #79
876| 91 - op/sep [
876| 2 - num 1
876| 93 - op/sep ]
876| 59 - op/sep ;

877| 130 - kw int
877| 42 - op/sep *
877| 5 - id e2 #658
877| 61 - op/sep =
877| 40 - op/sep (
877| 130 - kw int
877| 42 - op/sep *
877| 41 - op/sep )
877| 5 - id e #79
877| 91 - op/sep [
877| 2 - num 2
877| 93 - op/sep ]
877| 59 - op/sep ;

878| 130 - kw int
878| 5 - id e1tag #23
878| 61 - op/sep =
878| 5 - id e1 #654
878| 91 - op/sep [
878| 2 - num 0
878| 93 - op/sep ]
878| 38 - op/sep &
878| 5 - id ET_MASK #1002
878| 59 - op/sep ;

879| 132 - kw if
879| 40 - op/sep (
879| 5 - id se_is_ptr #376
879| 40 - op/sep (
879| 5 - id e1 #654
879| 91 - op/sep [
879| 2 - num 0
879| 93 - op/sep ]
879| 47 - op/sep /
879| 5 - id ET_T #992
879| 41 - op/sep )
879| 97 - op/sep a
879| 5 - id se_is_int #769
879| 40 - op/sep (
879| 5 - id e2 #658
879| 91 - op/sep [
879| 2 - num 0
879| 93 - op/sep ]
879| 47 - op/sep /
879| 5 - id ET_T #992
879| 41 - op/sep )
879| 41 - op/sep )

880| 123 - op/sep {

881| 132 - kw if
881| 40 - op/sep (
881| 33 - op/sep !
881| 40 - op/sep (
881| 40 - op/sep (
881| 5 - id e2 #658
881| 91 - op/sep [
881| 2 - num 0
881| 93 - op/sep ]
881| 38 - op/sep &
881| 5 - id ET_MASK #1002
881| 41 - op/sep )
881| 101 - op/sep e
881| 5 - id ET_num #510
881| 97 - op/sep a
881| 5 - id e2 #658
881| 91 - op/sep [
881| 2 - num 1
881| 93 - op/sep ]
881| 101 - op/sep e
881| 2 - num 0
881| 41 - op/sep )
881| 41 - op/sep )

882| 5 - id err1 #522
882| 40 - op/sep (
882| 4 - str "Can't assign integer to pointer"
882| 41 - op/sep )
882| 59 - op/sep ;

883| 125 - op/sep }

884| 132 - kw if
884| 40 - op/sep (
884| 5 - id e1tag #23
884| 101 - op/sep e
884| 5 - id ET_var #746
884| 41 - op/sep )

885| 123 - op/sep {

886| 132 - kw if
886| 40 - op/sep (
886| 5 - id st_kind #389
886| 91 - op/sep [
886| 5 - id e1 #654
886| 91 - op/sep [
886| 2 - num 1
886| 93 - op/sep ]
886| 93 - op/sep ]
886| 101 - op/sep e
886| 5 - id K_array #367
886| 41 - op/sep )

887| 5 - id err2 #523
887| 40 - op/sep (
887| 4 - str "Can't assign to array: "
887| 44 - op/sep ,
887| 5 - id id_table #669
887| 91 - op/sep [
887| 5 - id st_id #463
887| 91 - op/sep [
887| 5 - id e1 #654
887| 91 - op/sep [
887| 2 - num 1
887| 93 - op/sep ]
887| 93 - op/sep ]
887| 93 - op/sep ]
887| 41 - op/sep )
887| 59 - op/sep ;

888| 5 - id cg_expr #960
888| 40 - op/sep (
888| 40 - op/sep (
888| 130 - kw int
888| 42 - op/sep *
888| 41 - op/sep )
888| 5 - id e #79
888| 91 - op/sep [
888| 2 - num 2
888| 93 - op/sep ]
888| 41 - op/sep )
888| 59 - op/sep ;

889| 5 - id cg_o #993
889| 40 - op/sep (
889| 4 - str "  mov "
889| 41 - op/sep )
889| 59 - op/sep ;

890| 129 - kw char
890| 42 - op/sep *
890| 5 - id name #237
890| 61 - op/sep =
890| 5 - id cg_var #501
890| 40 - op/sep (
890| 5 - id e1 #654
890| 91 - op/sep [
890| 2 - num 1
890| 93 - op/sep ]
890| 41 - op/sep )
890| 59 - op/sep ;

891| 132 - kw if
891| 40 - op/sep (
891| 42 - op/sep *
891| 5 - id e1 #654
891| 47 - op/sep /
891| 5 - id ET_T #992
891| 101 - op/sep e
891| 5 - id T_c #736
891| 41 - op/sep )
891| 5 - id cg_o #993
891| 40 - op/sep (
891| 4 - str ",al"
891| 41 - op/sep )
891| 59 - op/sep ;
891| 133 - kw else
891| 5 - id cg_o #993
891| 40 - op/sep (
891| 4 - str ",eax"
891| 41 - op/sep )
891| 59 - op/sep ;

892| 132 - kw if
892| 40 - op/sep (
892| 5 - id name #237
892| 41 - op/sep )
892| 5 - id cg_2n #198
892| 40 - op/sep (
892| 4 - str " # "
892| 44 - op/sep ,
892| 5 - id name #237
892| 41 - op/sep )
892| 59 - op/sep ;
892| 133 - kw else
892| 5 - id cg_o #993
892| 40 - op/sep (
892| 4 - str "\n"
892| 41 - op/sep )
892| 59 - op/sep ;

893| 125 - op/sep }

894| 133 - kw else
894| 132 - kw if
894| 40 - op/sep (
894| 5 - id e1tag #23
894| 101 - op/sep e
894| 5 - id ET_star #966
894| 41 - op/sep )

895| 123 - op/sep {

896| 130 - kw int
896| 5 - id e2et #440
896| 61 - op/sep =
896| 42 - op/sep *
896| 40 - op/sep (
896| 130 - kw int
896| 42 - op/sep *
896| 41 - op/sep )
896| 5 - id e #79
896| 91 - op/sep [
896| 2 - num 2
896| 93 - op/sep ]
896| 38 - op/sep &
896| 5 - id ET_MASK #1002
896| 59 - op/sep ;

897| 130 - kw int
897| 5 - id n #88
897| 61 - op/sep =
897| 40 - op/sep (
897| 40 - op/sep (
897| 130 - kw int
897| 42 - op/sep *
897| 41 - op/sep )
897| 5 - id e #79
897| 91 - op/sep [
897| 2 - num 2
897| 93 - op/sep ]
897| 41 - op/sep )
897| 91 - op/sep [
897| 2 - num 1
897| 93 - op/sep ]
897| 59 - op/sep ;

898| 132 - kw if
898| 40 - op/sep (
898| 5 - id e2et #440
898| 101 - op/sep e
898| 5 - id ET_num #510
898| 111 - op/sep o
898| 40 - op/sep (
898| 5 - id e2et #440
898| 101 - op/sep e
898| 5 - id ET_var #746
898| 97 - op/sep a
898| 5 - id st_kind #389
898| 91 - op/sep [
898| 5 - id n #88
898| 93 - op/sep ]
898| 110 - op/sep n
898| 5 - id K_array #367
898| 41 - op/sep )
898| 41 - op/sep )

899| 123 - op/sep {

900| 5 - id cg_expr #960
900| 40 - op/sep (
900| 40 - op/sep (
900| 130 - kw int
900| 42 - op/sep *
900| 41 - op/sep )
900| 5 - id e1 #654
900| 91 - op/sep [
900| 2 - num 1
900| 93 - op/sep ]
900| 41 - op/sep )
900| 59 - op/sep ;

901| 5 - id cg_n #994
901| 40 - op/sep (
901| 4 - str "  mov ebx,eax"
901| 41 - op/sep )
901| 59 - op/sep ;

902| 132 - kw if
902| 40 - op/sep (
902| 5 - id e2et #440
902| 101 - op/sep e
902| 5 - id ET_num #510
902| 41 - op/sep )

903| 123 - op/sep {

904| 132 - kw if
904| 40 - op/sep (
904| 5 - id n #88
904| 101 - op/sep e
904| 2 - num 0
904| 41 - op/sep )
904| 5 - id cg_n #994
904| 40 - op/sep (
904| 4 - str "  xor eax,eax"
904| 41 - op/sep )
904| 59 - op/sep ;

905| 133 - kw else
905| 5 - id cg_2n #198
905| 40 - op/sep (
905| 4 - str "  mov eax,"
905| 44 - op/sep ,
905| 5 - id i2s #466
905| 40 - op/sep (
905| 5 - id n #88
905| 41 - op/sep )
905| 41 - op/sep )
905| 59 - op/sep ;

906| 125 - op/sep }

907| 133 - kw else

908| 123 - op/sep {

909| 132 - kw if
909| 40 - op/sep (
909| 42 - op/sep *
909| 40 - op/sep (
909| 130 - kw int
909| 42 - op/sep *
909| 41 - op/sep )
909| 5 - id e #79
909| 91 - op/sep [
909| 2 - num 2
909| 93 - op/sep ]
909| 47 - op/sep /
909| 5 - id ET_T #992
909| 101 - op/sep e
909| 5 - id T_c #736
909| 41 - op/sep )
909| 5 - id cg_o #993
909| 40 - op/sep (
909| 4 - str "  movsx eax,"
909| 41 - op/sep )
909| 59 - op/sep ;

910| 133 - kw else
910| 5 - id cg_o #993
910| 40 - op/sep (
910| 4 - str "  mov eax,"
910| 41 - op/sep )
910| 59 - op/sep ;

911| 5 - id cg_var_n #832
911| 40 - op/sep (
911| 5 - id n #88
911| 41 - op/sep )
911| 59 - op/sep ;

912| 125 - op/sep }

913| 125 - op/sep }

914| 133 - kw else

915| 123 - op/sep {

916| 5 - id cg_expr #960
916| 40 - op/sep (
916| 40 - op/sep (
916| 130 - kw int
916| 42 - op/sep *
916| 41 - op/sep )
916| 5 - id e1 #654
916| 91 - op/sep [
916| 2 - num 1
916| 93 - op/sep ]
916| 41 - op/sep )
916| 59 - op/sep ;
916| 5 - id cg_n #994
916| 40 - op/sep (
916| 4 - str "  push eax"
916| 41 - op/sep )
916| 59 - op/sep ;

917| 5 - id cg_expr #960
917| 40 - op/sep (
917| 40 - op/sep (
917| 130 - kw int
917| 42 - op/sep *
917| 41 - op/sep )
917| 5 - id e #79
917| 91 - op/sep [
917| 2 - num 2
917| 93 - op/sep ]
917| 41 - op/sep )
917| 59 - op/sep ;
917| 5 - id cg_n #994
917| 40 - op/sep (
917| 4 - str "  pop ebx"
917| 41 - op/sep )
917| 59 - op/sep ;

918| 125 - op/sep }

919| 132 - kw if
919| 40 - op/sep (
919| 5 - id e1 #654
919| 91 - op/sep [
919| 2 - num 0
919| 93 - op/sep ]
919| 47 - op/sep /
919| 5 - id ET_T #992
919| 101 - op/sep e
919| 5 - id T_c #736
919| 41 - op/sep )
919| 5 - id cg_n #994
919| 40 - op/sep (
919| 4 - str "  mov BYTE PTR [ebx],al"
919| 41 - op/sep )
919| 59 - op/sep ;

920| 133 - kw else
920| 5 - id cg_n #994
920| 40 - op/sep (
920| 4 - str "  mov DWORD PTR [ebx],eax"
920| 41 - op/sep )
920| 59 - op/sep ;

921| 125 - op/sep }

922| 133 - kw else

923| 5 - id err1 #522
923| 40 - op/sep (
923| 4 - str "Wrong expression on left of '='"
923| 41 - op/sep )
923| 59 - op/sep ;

924| 125 - op/sep }

925| 133 - kw else
925| 132 - kw if
925| 40 - op/sep (
925| 5 - id e0 #653
925| 101 - op/sep e
925| 3 - chr 105
925| 111 - op/sep o
925| 5 - id e0 #653
925| 101 - op/sep e
925| 3 - chr 100
925| 41 - op/sep )

926| 123 - op/sep {

927| 130 - kw int
927| 42 - op/sep *
927| 5 - id e1 #654
927| 61 - op/sep =
927| 40 - op/sep (
927| 130 - kw int
927| 42 - op/sep *
927| 41 - op/sep )
927| 5 - id e #79
927| 91 - op/sep [
927| 2 - num 1
927| 93 - op/sep ]
927| 59 - op/sep ;

928| 130 - kw int
928| 5 - id e1et #120
928| 61 - op/sep =
928| 5 - id e1 #654
928| 91 - op/sep [
928| 2 - num 0
928| 93 - op/sep ]
928| 38 - op/sep &
928| 5 - id ET_MASK #1002
928| 59 - op/sep ;

929| 132 - kw if
929| 40 - op/sep (
929| 5 - id e1et #120
929| 101 - op/sep e
929| 5 - id ET_var #746
929| 41 - op/sep )

930| 123 - op/sep {

931| 130 - kw int
931| 5 - id k #85
931| 61 - op/sep =
931| 5 - id st_kind #389
931| 91 - op/sep [
931| 5 - id e1 #654
931| 91 - op/sep [
931| 2 - num 1
931| 93 - op/sep ]
931| 93 - op/sep ]
931| 59 - op/sep ;

932| 132 - kw if
932| 40 - op/sep (
932| 5 - id k #85
932| 101 - op/sep e
932| 5 - id K_array #367
932| 41 - op/sep )

933| 5 - id err2 #523
933| 40 - op/sep (
933| 4 - str "Can't be array name: "
933| 44 - op/sep ,
933| 5 - id id_table #669
933| 91 - op/sep [
933| 5 - id st_id #463
933| 91 - op/sep [
933| 5 - id e1 #654
933| 91 - op/sep [
933| 2 - num 1
933| 93 - op/sep ]
933| 93 - op/sep ]
933| 93 - op/sep ]
933| 41 - op/sep )
933| 59 - op/sep ;

934| 132 - kw if
934| 40 - op/sep (
934| 5 - id st_type #985
934| 91 - op/sep [
934| 5 - id e1 #654
934| 91 - op/sep [
934| 2 - num 1
934| 93 - op/sep ]
934| 93 - op/sep ]
934| 101 - op/sep e
934| 5 - id T_c #736
934| 41 - op/sep )
934| 5 - id cg_o #993
934| 40 - op/sep (
934| 4 - str "  movsx eax,"
934| 41 - op/sep )
934| 59 - op/sep ;
934| 133 - kw else
934| 5 - id cg_o #993
934| 40 - op/sep (
934| 4 - str "  mov eax,"
934| 41 - op/sep )
934| 59 - op/sep ;

935| 5 - id cg_var_n #832
935| 40 - op/sep (
935| 5 - id e1 #654
935| 91 - op/sep [
935| 2 - num 1
935| 93 - op/sep ]
935| 41 - op/sep )
935| 59 - op/sep ;

936| 132 - kw if
936| 40 - op/sep (
936| 5 - id e0 #653
936| 101 - op/sep e
936| 3 - chr 105
936| 41 - op/sep )
936| 5 - id cg_o #993
936| 40 - op/sep (
936| 4 - str "  add eax,"
936| 41 - op/sep )
936| 59 - op/sep ;
936| 133 - kw else
936| 5 - id cg_o #993
936| 40 - op/sep (
936| 4 - str "  sub eax,"
936| 41 - op/sep )
936| 59 - op/sep ;

937| 132 - kw if
937| 40 - op/sep (
937| 5 - id se_is_ptr4 #142
937| 40 - op/sep (
937| 5 - id st_type #985
937| 91 - op/sep [
937| 5 - id e1 #654
937| 91 - op/sep [
937| 2 - num 1
937| 93 - op/sep ]
937| 93 - op/sep ]
937| 41 - op/sep )
937| 41 - op/sep )
937| 5 - id cg_n #994
937| 40 - op/sep (
937| 4 - str "4"
937| 41 - op/sep )
937| 59 - op/sep ;
937| 133 - kw else
937| 5 - id cg_n #994
937| 40 - op/sep (
937| 4 - str "1"
937| 41 - op/sep )
937| 59 - op/sep ;

938| 5 - id cg_o #993
938| 40 - op/sep (
938| 4 - str "  mov "
938| 41 - op/sep )
938| 59 - op/sep ;

939| 129 - kw char
939| 42 - op/sep *
939| 5 - id name #237
939| 61 - op/sep =
939| 5 - id cg_var #501
939| 40 - op/sep (
939| 5 - id e1 #654
939| 91 - op/sep [
939| 2 - num 1
939| 93 - op/sep ]
939| 41 - op/sep )
939| 59 - op/sep ;

940| 132 - kw if
940| 40 - op/sep (
940| 42 - op/sep *
940| 5 - id e1 #654
940| 47 - op/sep /
940| 5 - id ET_T #992
940| 101 - op/sep e
940| 5 - id T_c #736
940| 41 - op/sep )
940| 5 - id cg_o #993
940| 40 - op/sep (
940| 4 - str ",al"
940| 41 - op/sep )
940| 59 - op/sep ;
940| 133 - kw else
940| 5 - id cg_o #993
940| 40 - op/sep (
940| 4 - str ",eax"
940| 41 - op/sep )
940| 59 - op/sep ;

941| 132 - kw if
941| 40 - op/sep (
941| 5 - id name #237
941| 41 - op/sep )
941| 5 - id cg_2n #198
941| 40 - op/sep (
941| 4 - str " # "
941| 44 - op/sep ,
941| 5 - id name #237
941| 41 - op/sep )
941| 59 - op/sep ;
941| 133 - kw else
941| 5 - id cg_o #993
941| 40 - op/sep (
941| 4 - str "\n"
941| 41 - op/sep )
941| 59 - op/sep ;

942| 125 - op/sep }

943| 133 - kw else
943| 132 - kw if
943| 40 - op/sep (
943| 5 - id e1et #120
943| 101 - op/sep e
943| 5 - id ET_star #966
943| 41 - op/sep )

944| 123 - op/sep {

945| 130 - kw int
945| 5 - id t #94
945| 61 - op/sep =
945| 5 - id e #79
945| 91 - op/sep [
945| 2 - num 0
945| 93 - op/sep ]
945| 47 - op/sep /
945| 5 - id ET_T #992
945| 59 - op/sep ;

946| 5 - id cg_expr #960
946| 40 - op/sep (
946| 40 - op/sep (
946| 130 - kw int
946| 42 - op/sep *
946| 41 - op/sep )
946| 5 - id e1 #654
946| 91 - op/sep [
946| 2 - num 1
946| 93 - op/sep ]
946| 41 - op/sep )
946| 59 - op/sep ;

947| 5 - id cg_n #994
947| 40 - op/sep (
947| 4 - str "  mov ebx,eax"
947| 41 - op/sep )
947| 59 - op/sep ;

948| 132 - kw if
948| 40 - op/sep (
948| 5 - id t #94
948| 101 - op/sep e
948| 5 - id T_c #736
948| 41 - op/sep )
948| 5 - id cg_n #994
948| 40 - op/sep (
948| 4 - str "  movsx eax,BYTE PTR [ebx]"
948| 41 - op/sep )
948| 59 - op/sep ;

949| 133 - kw else
949| 5 - id cg_n #994
949| 40 - op/sep (
949| 4 - str "  mov eax,DWORD PTR [ebx]"
949| 41 - op/sep )
949| 59 - op/sep ;

950| 132 - kw if
950| 40 - op/sep (
950| 5 - id e0 #653
950| 101 - op/sep e
950| 3 - chr 105
950| 41 - op/sep )
950| 5 - id cg_o #993
950| 40 - op/sep (
950| 4 - str "  add eax,"
950| 41 - op/sep )
950| 59 - op/sep ;
950| 133 - kw else
950| 5 - id cg_o #993
950| 40 - op/sep (
950| 4 - str "  sub eax,"
950| 41 - op/sep )
950| 59 - op/sep ;

951| 132 - kw if
951| 40 - op/sep (
951| 5 - id se_is_ptr4 #142
951| 40 - op/sep (
951| 5 - id t #94
951| 41 - op/sep )
951| 41 - op/sep )
951| 5 - id cg_n #994
951| 40 - op/sep (
951| 4 - str "4"
951| 41 - op/sep )
951| 59 - op/sep ;
951| 133 - kw else
951| 5 - id cg_n #994
951| 40 - op/sep (
951| 4 - str "1"
951| 41 - op/sep )
951| 59 - op/sep ;

952| 132 - kw if
952| 40 - op/sep (
952| 5 - id t #94
952| 101 - op/sep e
952| 5 - id T_c #736
952| 41 - op/sep )
952| 5 - id cg_n #994
952| 40 - op/sep (
952| 4 - str "  mov BYTE PTR [ebx],al"
952| 41 - op/sep )
952| 59 - op/sep ;

953| 133 - kw else
953| 5 - id cg_n #994
953| 40 - op/sep (
953| 4 - str "  mov DWORD PTR [ebx],eax"
953| 41 - op/sep )
953| 59 - op/sep ;

954| 125 - op/sep }

955| 133 - kw else

956| 5 - id err1 #522
956| 40 - op/sep (
956| 4 - str "Wrong expr for increment/decrement"
956| 41 - op/sep )
956| 59 - op/sep ;

957| 125 - op/sep }

958| 133 - kw else
958| 132 - kw if
958| 40 - op/sep (
958| 5 - id e0 #653
958| 101 - op/sep e
958| 5 - id ET_star #966
958| 41 - op/sep )

959| 123 - op/sep {

960| 130 - kw int
960| 5 - id e0type #480
960| 61 - op/sep =
960| 5 - id e #79
960| 91 - op/sep [
960| 2 - num 0
960| 93 - op/sep ]
960| 47 - op/sep /
960| 5 - id ET_T #992
960| 59 - op/sep ;

961| 5 - id cg_expr #960
961| 40 - op/sep (
961| 40 - op/sep (
961| 130 - kw int
961| 42 - op/sep *
961| 41 - op/sep )
961| 5 - id e #79
961| 91 - op/sep [
961| 2 - num 1
961| 93 - op/sep ]
961| 41 - op/sep )
961| 59 - op/sep ;

962| 132 - kw if
962| 40 - op/sep (
962| 5 - id e #79
962| 91 - op/sep [
962| 2 - num 0
962| 93 - op/sep ]
962| 47 - op/sep /
962| 5 - id ET_T #992
962| 101 - op/sep e
962| 5 - id T_c #736
962| 41 - op/sep )
962| 5 - id cg_n #994
962| 40 - op/sep (
962| 4 - str "  movsx eax,BYTE PTR [eax]"
962| 41 - op/sep )
962| 59 - op/sep ;

963| 133 - kw else
963| 5 - id cg_n #994
963| 40 - op/sep (
963| 4 - str "  mov eax,DWORD PTR [eax]"
963| 41 - op/sep )
963| 59 - op/sep ;

964| 125 - op/sep }

965| 133 - kw else
965| 132 - kw if
965| 40 - op/sep (
965| 5 - id e0 #653
965| 101 - op/sep e
965| 5 - id ET_cast #778
965| 41 - op/sep )

966| 123 - op/sep {

967| 5 - id cg_expr #960
967| 40 - op/sep (
967| 40 - op/sep (
967| 130 - kw int
967| 42 - op/sep *
967| 41 - op/sep )
967| 5 - id e #79
967| 91 - op/sep [
967| 2 - num 1
967| 93 - op/sep ]
967| 41 - op/sep )
967| 59 - op/sep ;

968| 125 - op/sep }

969| 133 - kw else
969| 132 - kw if
969| 40 - op/sep (
969| 5 - id e0 #653
969| 101 - op/sep e
969| 5 - id ET_neg #457
969| 41 - op/sep )

970| 123 - op/sep {

971| 5 - id cg_expr #960
971| 40 - op/sep (
971| 40 - op/sep (
971| 130 - kw int
971| 42 - op/sep *
971| 41 - op/sep )
971| 5 - id e #79
971| 91 - op/sep [
971| 2 - num 1
971| 93 - op/sep ]
971| 41 - op/sep )
971| 59 - op/sep ;
971| 5 - id cg_n #994
971| 40 - op/sep (
971| 4 - str "  neg eax"
971| 41 - op/sep )
971| 59 - op/sep ;

972| 125 - op/sep }

973| 133 - kw else
973| 132 - kw if
973| 40 - op/sep (
973| 5 - id e0 #653
973| 101 - op/sep e
973| 3 - chr 126
973| 41 - op/sep )

974| 123 - op/sep {

975| 5 - id cg_expr #960
975| 40 - op/sep (
975| 40 - op/sep (
975| 130 - kw int
975| 42 - op/sep *
975| 41 - op/sep )
975| 5 - id e #79
975| 91 - op/sep [
975| 2 - num 1
975| 93 - op/sep ]
975| 41 - op/sep )
975| 59 - op/sep ;
975| 5 - id cg_n #994
975| 40 - op/sep (
975| 4 - str "  not eax"
975| 41 - op/sep )
975| 59 - op/sep ;

976| 125 - op/sep }

977| 133 - kw else
977| 132 - kw if
977| 40 - op/sep (
977| 5 - id e0 #653
977| 101 - op/sep e
977| 3 - chr 33
977| 41 - op/sep )

978| 123 - op/sep {

979| 5 - id cg_expr #960
979| 40 - op/sep (
979| 40 - op/sep (
979| 130 - kw int
979| 42 - op/sep *
979| 41 - op/sep )
979| 5 - id e #79
979| 91 - op/sep [
979| 2 - num 1
979| 93 - op/sep ]
979| 41 - op/sep )
979| 59 - op/sep ;

980| 5 - id cg_n #994
980| 40 - op/sep (
980| 4 - str "  test eax,eax\n  setz al\n  movzx eax,al"
980| 41 - op/sep )
980| 59 - op/sep ;

981| 125 - op/sep }

982| 133 - kw else
982| 132 - kw if
982| 40 - op/sep (
982| 5 - id e0 #653
982| 101 - op/sep e
982| 3 - chr 101
982| 111 - op/sep o
982| 5 - id e0 #653
982| 101 - op/sep e
982| 3 - chr 110
982| 41 - op/sep )

983| 123 - op/sep {

984| 130 - kw int
984| 5 - id e2et #440
984| 61 - op/sep =
984| 42 - op/sep *
984| 40 - op/sep (
984| 130 - kw int
984| 42 - op/sep *
984| 41 - op/sep )
984| 5 - id e #79
984| 91 - op/sep [
984| 2 - num 2
984| 93 - op/sep ]
984| 38 - op/sep &
984| 5 - id ET_MASK #1002
984| 59 - op/sep ;

985| 130 - kw int
985| 5 - id n #88
985| 61 - op/sep =
985| 40 - op/sep (
985| 40 - op/sep (
985| 130 - kw int
985| 42 - op/sep *
985| 41 - op/sep )
985| 5 - id e #79
985| 91 - op/sep [
985| 2 - num 2
985| 93 - op/sep ]
985| 41 - op/sep )
985| 91 - op/sep [
985| 2 - num 1
985| 93 - op/sep ]
985| 59 - op/sep ;

986| 130 - kw int
986| 5 - id zero #20
986| 61 - op/sep =
986| 5 - id e2et #440
986| 101 - op/sep e
986| 5 - id ET_num #510
986| 97 - op/sep a
986| 5 - id n #88
986| 101 - op/sep e
986| 2 - num 0
986| 59 - op/sep ;

987| 132 - kw if
987| 40 - op/sep (
987| 5 - id se_is_ptr #376
987| 40 - op/sep (
987| 42 - op/sep *
987| 40 - op/sep (
987| 130 - kw int
987| 42 - op/sep *
987| 41 - op/sep )
987| 5 - id e #79
987| 91 - op/sep [
987| 2 - num 1
987| 93 - op/sep ]
987| 47 - op/sep /
987| 5 - id ET_T #992
987| 41 - op/sep )
987| 97 - op/sep a
987| 5 - id se_is_int #769
987| 40 - op/sep (
987| 42 - op/sep *
987| 40 - op/sep (
987| 130 - kw int
987| 42 - op/sep *
987| 41 - op/sep )
987| 5 - id e #79
987| 91 - op/sep [
987| 2 - num 2
987| 93 - op/sep ]
987| 47 - op/sep /
987| 5 - id ET_T #992
987| 41 - op/sep )
987| 41 - op/sep )

988| 123 - op/sep {

989| 132 - kw if
989| 40 - op/sep (
989| 33 - op/sep !
989| 5 - id zero #20
989| 41 - op/sep )
989| 5 - id err1 #522
989| 40 - op/sep (
989| 4 - str "Can't compare poiner and number"
989| 41 - op/sep )
989| 59 - op/sep ;

990| 125 - op/sep }

991| 129 - kw char
991| 42 - op/sep *
991| 5 - id cmp #419
991| 61 - op/sep =
991| 4 - str "e"
991| 59 - op/sep ;

992| 132 - kw if
992| 40 - op/sep (
992| 5 - id e2et #440
992| 101 - op/sep e
992| 5 - id ET_num #510
992| 111 - op/sep o
992| 40 - op/sep (
992| 5 - id e2et #440
992| 101 - op/sep e
992| 5 - id ET_var #746
992| 97 - op/sep a
992| 5 - id st_kind #389
992| 91 - op/sep [
992| 5 - id n #88
992| 93 - op/sep ]
992| 110 - op/sep n
992| 5 - id K_array #367
992| 41 - op/sep )
992| 41 - op/sep )

993| 123 - op/sep {

994| 5 - id cg_expr #960
994| 40 - op/sep (
994| 40 - op/sep (
994| 130 - kw int
994| 42 - op/sep *
994| 41 - op/sep )
994| 5 - id e #79
994| 91 - op/sep [
994| 2 - num 1
994| 93 - op/sep ]
994| 41 - op/sep )
994| 59 - op/sep ;

995| 132 - kw if
995| 40 - op/sep (
995| 5 - id zero #20
995| 41 - op/sep )

996| 123 - op/sep {

997| 5 - id cg_n #994
997| 40 - op/sep (
997| 4 - str "  test eax,eax"
997| 41 - op/sep )
997| 59 - op/sep ;
997| 5 - id cmp #419
997| 61 - op/sep =
997| 4 - str "z"
997| 59 - op/sep ;

998| 125 - op/sep }

999| 133 - kw else
999| 132 - kw if
999| 40 - op/sep (
999| 5 - id e2et #440
999| 101 - op/sep e
999| 5 - id ET_var #746
999| 97 - op/sep a
999| 42 - op/sep *
999| 40 - op/sep (
999| 130 - kw int
999| 42 - op/sep *
999| 41 - op/sep )
999| 5 - id e #79
999| 91 - op/sep [
999| 2 - num 2
999| 93 - op/sep ]
999| 47 - op/sep /
999| 5 - id ET_T #992
999| 101 - op/sep e
999| 5 - id T_c #736
999| 41 - op/sep )

1000| 123 - op/sep {

1001| 5 - id cg_o #993
1001| 40 - op/sep (
1001| 4 - str "  movsx ebx,"
1001| 41 - op/sep )
1001| 59 - op/sep ;
1001| 5 - id cg_var_n #832
1001| 40 - op/sep (
1001| 5 - id n #88
1001| 41 - op/sep )
1001| 59 - op/sep ;
1001| 5 - id cg_n #994
1001| 40 - op/sep (
1001| 4 - str "  cmp eax,ebx"
1001| 41 - op/sep )
1001| 59 - op/sep ;

1002| 125 - op/sep }

1003| 133 - kw else

1004| 123 - op/sep {

1005| 5 - id cg_o #993
1005| 40 - op/sep (
1005| 4 - str "  cmp eax,"
1005| 41 - op/sep )
1005| 59 - op/sep ;
1005| 132 - kw if
1005| 40 - op/sep (
1005| 5 - id e2et #440
1005| 101 - op/sep e
1005| 5 - id ET_var #746
1005| 41 - op/sep )
1005| 5 - id cg_var_n #832
1005| 40 - op/sep (
1005| 5 - id n #88
1005| 41 - op/sep )
1005| 59 - op/sep ;
1005| 133 - kw else
1005| 5 - id cg_n #994
1005| 40 - op/sep (
1005| 5 - id i2s #466
1005| 40 - op/sep (
1005| 5 - id n #88
1005| 41 - op/sep )
1005| 41 - op/sep )
1005| 59 - op/sep ;

1006| 125 - op/sep }

1007| 125 - op/sep }

1008| 133 - kw else

1009| 123 - op/sep {

1010| 5 - id cg_expr #960
1010| 40 - op/sep (
1010| 40 - op/sep (
1010| 130 - kw int
1010| 42 - op/sep *
1010| 41 - op/sep )
1010| 5 - id e #79
1010| 91 - op/sep [
1010| 2 - num 2
1010| 93 - op/sep ]
1010| 41 - op/sep )
1010| 59 - op/sep ;
1010| 5 - id cg_n #994
1010| 40 - op/sep (
1010| 4 - str "  push eax"
1010| 41 - op/sep )
1010| 59 - op/sep ;

1011| 5 - id cg_expr #960
1011| 40 - op/sep (
1011| 40 - op/sep (
1011| 130 - kw int
1011| 42 - op/sep *
1011| 41 - op/sep )
1011| 5 - id e #79
1011| 91 - op/sep [
1011| 2 - num 1
1011| 93 - op/sep ]
1011| 41 - op/sep )
1011| 59 - op/sep ;
1011| 5 - id cg_n #994
1011| 40 - op/sep (
1011| 4 - str "  pop ebx\n  cmp eax,ebx"
1011| 41 - op/sep )
1011| 59 - op/sep ;

1012| 125 - op/sep }

1013| 5 - id cg_o #993
1013| 40 - op/sep (
1013| 4 - str "  set"
1013| 41 - op/sep )
1013| 59 - op/sep ;
1013| 132 - kw if
1013| 40 - op/sep (
1013| 5 - id e0 #653
1013| 101 - op/sep e
1013| 3 - chr 110
1013| 41 - op/sep )
1013| 5 - id cg_o #993
1013| 40 - op/sep (
1013| 4 - str "n"
1013| 41 - op/sep )
1013| 59 - op/sep ;
1013| 5 - id cg_2n #198
1013| 40 - op/sep (
1013| 5 - id cmp #419
1013| 44 - op/sep ,
1013| 4 - str " al\n  movzx eax,al"
1013| 41 - op/sep )
1013| 59 - op/sep ;

1014| 125 - op/sep }

1015| 133 - kw else
1015| 132 - kw if
1015| 40 - op/sep (
1015| 5 - id memchr #91
1015| 40 - op/sep (
1015| 4 - str "<>lg"
1015| 44 - op/sep ,
1015| 5 - id e0 #653
1015| 44 - op/sep ,
1015| 2 - num 4
1015| 41 - op/sep )
1015| 41 - op/sep )

1016| 123 - op/sep {

1017| 130 - kw int
1017| 5 - id e2et #440
1017| 61 - op/sep =
1017| 42 - op/sep *
1017| 40 - op/sep (
1017| 130 - kw int
1017| 42 - op/sep *
1017| 41 - op/sep )
1017| 5 - id e #79
1017| 91 - op/sep [
1017| 2 - num 2
1017| 93 - op/sep ]
1017| 38 - op/sep &
1017| 5 - id ET_MASK #1002
1017| 59 - op/sep ;

1018| 130 - kw int
1018| 5 - id n #88
1018| 61 - op/sep =
1018| 40 - op/sep (
1018| 40 - op/sep (
1018| 130 - kw int
1018| 42 - op/sep *
1018| 41 - op/sep )
1018| 5 - id e #79
1018| 91 - op/sep [
1018| 2 - num 2
1018| 93 - op/sep ]
1018| 41 - op/sep )
1018| 91 - op/sep [
1018| 2 - num 1
1018| 93 - op/sep ]
1018| 59 - op/sep ;

1019| 132 - kw if
1019| 40 - op/sep (
1019| 5 - id e2et #440
1019| 101 - op/sep e
1019| 5 - id ET_num #510
1019| 111 - op/sep o
1019| 40 - op/sep (
1019| 5 - id e2et #440
1019| 101 - op/sep e
1019| 5 - id ET_var #746
1019| 97 - op/sep a
1019| 5 - id st_kind #389
1019| 91 - op/sep [
1019| 5 - id n #88
1019| 93 - op/sep ]
1019| 110 - op/sep n
1019| 5 - id K_array #367
1019| 41 - op/sep )
1019| 41 - op/sep )

1020| 123 - op/sep {

1021| 5 - id cg_expr #960
1021| 40 - op/sep (
1021| 40 - op/sep (
1021| 130 - kw int
1021| 42 - op/sep *
1021| 41 - op/sep )
1021| 5 - id e #79
1021| 91 - op/sep [
1021| 2 - num 1
1021| 93 - op/sep ]
1021| 41 - op/sep )
1021| 59 - op/sep ;

1022| 132 - kw if
1022| 40 - op/sep (
1022| 5 - id e2et #440
1022| 101 - op/sep e
1022| 5 - id ET_var #746
1022| 97 - op/sep a
1022| 42 - op/sep *
1022| 40 - op/sep (
1022| 130 - kw int
1022| 42 - op/sep *
1022| 41 - op/sep )
1022| 5 - id e #79
1022| 91 - op/sep [
1022| 2 - num 2
1022| 93 - op/sep ]
1022| 47 - op/sep /
1022| 5 - id ET_T #992
1022| 101 - op/sep e
1022| 5 - id T_c #736
1022| 41 - op/sep )

1023| 123 - op/sep {

1024| 5 - id cg_o #993
1024| 40 - op/sep (
1024| 4 - str "  movsx ebx,"
1024| 41 - op/sep )
1024| 59 - op/sep ;
1024| 5 - id cg_var_n #832
1024| 40 - op/sep (
1024| 5 - id n #88
1024| 41 - op/sep )
1024| 59 - op/sep ;
1024| 5 - id cg_n #994
1024| 40 - op/sep (
1024| 4 - str "  cmp eax,ebx"
1024| 41 - op/sep )
1024| 59 - op/sep ;

1025| 125 - op/sep }

1026| 133 - kw else

1027| 123 - op/sep {

1028| 5 - id cg_o #993
1028| 40 - op/sep (
1028| 4 - str "  cmp eax,"
1028| 41 - op/sep )
1028| 59 - op/sep ;
1028| 132 - kw if
1028| 40 - op/sep (
1028| 5 - id e2et #440
1028| 101 - op/sep e
1028| 5 - id ET_var #746
1028| 41 - op/sep )
1028| 5 - id cg_var_n #832
1028| 40 - op/sep (
1028| 5 - id n #88
1028| 41 - op/sep )
1028| 59 - op/sep ;
1028| 133 - kw else
1028| 5 - id cg_n #994
1028| 40 - op/sep (
1028| 5 - id i2s #466
1028| 40 - op/sep (
1028| 5 - id n #88
1028| 41 - op/sep )
1028| 41 - op/sep )
1028| 59 - op/sep ;

1029| 125 - op/sep }

1030| 125 - op/sep }

1031| 133 - kw else

1032| 123 - op/sep {

1033| 5 - id cg_expr #960
1033| 40 - op/sep (
1033| 40 - op/sep (
1033| 130 - kw int
1033| 42 - op/sep *
1033| 41 - op/sep )
1033| 5 - id e #79
1033| 91 - op/sep [
1033| 2 - num 2
1033| 93 - op/sep ]
1033| 41 - op/sep )
1033| 59 - op/sep ;
1033| 5 - id cg_n #994
1033| 40 - op/sep (
1033| 4 - str "  push eax"
1033| 41 - op/sep )
1033| 59 - op/sep ;

1034| 5 - id cg_expr #960
1034| 40 - op/sep (
1034| 40 - op/sep (
1034| 130 - kw int
1034| 42 - op/sep *
1034| 41 - op/sep )
1034| 5 - id e #79
1034| 91 - op/sep [
1034| 2 - num 1
1034| 93 - op/sep ]
1034| 41 - op/sep )
1034| 59 - op/sep ;
1034| 5 - id cg_n #994
1034| 40 - op/sep (
1034| 4 - str "  pop ebx\n  cmp eax,ebx"
1034| 41 - op/sep )
1034| 59 - op/sep ;

1035| 125 - op/sep }

1036| 129 - kw char
1036| 42 - op/sep *
1036| 5 - id o #89
1036| 61 - op/sep =
1036| 4 - str "l"
1036| 59 - op/sep ;
1036| 132 - kw if
1036| 40 - op/sep (
1036| 5 - id e0 #653
1036| 101 - op/sep e
1036| 3 - chr 62
1036| 41 - op/sep )
1036| 5 - id o #89
1036| 61 - op/sep =
1036| 4 - str "g"
1036| 59 - op/sep ;
1036| 133 - kw else
1036| 132 - kw if
1036| 40 - op/sep (
1036| 5 - id e0 #653
1036| 101 - op/sep e
1036| 3 - chr 108
1036| 41 - op/sep )
1036| 5 - id o #89
1036| 61 - op/sep =
1036| 4 - str "le"
1036| 59 - op/sep ;
1036| 133 - kw else
1036| 132 - kw if
1036| 40 - op/sep (
1036| 5 - id e0 #653
1036| 101 - op/sep e
1036| 3 - chr 103
1036| 41 - op/sep )
1036| 5 - id o #89
1036| 61 - op/sep =
1036| 4 - str "ge"
1036| 59 - op/sep ;

1037| 5 - id cg_3n #264
1037| 40 - op/sep (
1037| 4 - str "  set"
1037| 44 - op/sep ,
1037| 5 - id o #89
1037| 44 - op/sep ,
1037| 4 - str " al\n  movzx eax,al"
1037| 41 - op/sep )
1037| 59 - op/sep ;

1038| 125 - op/sep }

1039| 133 - kw else
1039| 132 - kw if
1039| 40 - op/sep (
1039| 5 - id memchr #91
1039| 40 - op/sep (
1039| 4 - str "+-&|^*/%"
1039| 44 - op/sep ,
1039| 5 - id e0 #653
1039| 44 - op/sep ,
1039| 2 - num 8
1039| 41 - op/sep )
1039| 41 - op/sep )

1040| 123 - op/sep {

1041| 130 - kw int
1041| 5 - id e1t #132
1041| 61 - op/sep =
1041| 42 - op/sep *
1041| 40 - op/sep (
1041| 130 - kw int
1041| 42 - op/sep *
1041| 41 - op/sep )
1041| 5 - id e #79
1041| 91 - op/sep [
1041| 2 - num 1
1041| 93 - op/sep ]
1041| 47 - op/sep /
1041| 5 - id ET_T #992
1041| 59 - op/sep ;

1042| 130 - kw int
1042| 5 - id e2t #196
1042| 61 - op/sep =
1042| 42 - op/sep *
1042| 40 - op/sep (
1042| 130 - kw int
1042| 42 - op/sep *
1042| 41 - op/sep )
1042| 5 - id e #79
1042| 91 - op/sep [
1042| 2 - num 2
1042| 93 - op/sep ]
1042| 47 - op/sep /
1042| 5 - id ET_T #992
1042| 59 - op/sep ;

1043| 130 - kw int
1043| 5 - id e2et #440
1043| 61 - op/sep =
1043| 42 - op/sep *
1043| 40 - op/sep (
1043| 130 - kw int
1043| 42 - op/sep *
1043| 41 - op/sep )
1043| 5 - id e #79
1043| 91 - op/sep [
1043| 2 - num 2
1043| 93 - op/sep ]
1043| 38 - op/sep &
1043| 5 - id ET_MASK #1002
1043| 59 - op/sep ;

1044| 130 - kw int
1044| 5 - id mixed #942
1044| 61 - op/sep =
1044| 2 - num 0
1044| 59 - op/sep ;

1045| 132 - kw if
1045| 40 - op/sep (
1045| 5 - id e0 #653
1045| 101 - op/sep e
1045| 3 - chr 43
1045| 41 - op/sep )

1046| 123 - op/sep {

1047| 132 - kw if
1047| 40 - op/sep (
1047| 5 - id se_is_ptr4 #142
1047| 40 - op/sep (
1047| 5 - id e1t #132
1047| 41 - op/sep )
1047| 97 - op/sep a
1047| 5 - id se_is_int #769
1047| 40 - op/sep (
1047| 5 - id e2t #196
1047| 41 - op/sep )
1047| 41 - op/sep )
1047| 5 - id mixed #942
1047| 61 - op/sep =
1047| 2 - num 1
1047| 59 - op/sep ;

1048| 133 - kw else
1048| 132 - kw if
1048| 40 - op/sep (
1048| 5 - id se_is_int #769
1048| 40 - op/sep (
1048| 5 - id e1t #132
1048| 41 - op/sep )
1048| 97 - op/sep a
1048| 5 - id se_is_ptr4 #142
1048| 40 - op/sep (
1048| 5 - id e2t #196
1048| 41 - op/sep )
1048| 41 - op/sep )
1048| 5 - id mixed #942
1048| 61 - op/sep =
1048| 2 - num 2
1048| 59 - op/sep ;

1049| 125 - op/sep }

1050| 133 - kw else
1050| 132 - kw if
1050| 40 - op/sep (
1050| 5 - id e0 #653
1050| 101 - op/sep e
1050| 3 - chr 45
1050| 97 - op/sep a
1050| 5 - id se_is_ptr4 #142
1050| 40 - op/sep (
1050| 5 - id e1t #132
1050| 41 - op/sep )
1050| 97 - op/sep a
1050| 5 - id se_is_int #769
1050| 40 - op/sep (
1050| 5 - id e2t #196
1050| 41 - op/sep )
1050| 41 - op/sep )

1051| 5 - id mixed #942
1051| 61 - op/sep =
1051| 2 - num 3
1051| 59 - op/sep ;

1052| 132 - kw if
1052| 40 - op/sep (
1052| 5 - id e2et #440
1052| 101 - op/sep e
1052| 5 - id ET_num #510
1052| 41 - op/sep )

1053| 123 - op/sep {

1054| 5 - id cg_expr #960
1054| 40 - op/sep (
1054| 40 - op/sep (
1054| 130 - kw int
1054| 42 - op/sep *
1054| 41 - op/sep )
1054| 5 - id e #79
1054| 91 - op/sep [
1054| 2 - num 1
1054| 93 - op/sep ]
1054| 41 - op/sep )
1054| 59 - op/sep ;

1055| 130 - kw int
1055| 5 - id n #88
1055| 61 - op/sep =
1055| 40 - op/sep (
1055| 40 - op/sep (
1055| 130 - kw int
1055| 42 - op/sep *
1055| 41 - op/sep )
1055| 5 - id e #79
1055| 91 - op/sep [
1055| 2 - num 2
1055| 93 - op/sep ]
1055| 41 - op/sep )
1055| 91 - op/sep [
1055| 2 - num 1
1055| 93 - op/sep ]
1055| 59 - op/sep ;

1056| 132 - kw if
1056| 40 - op/sep (
1056| 5 - id e0 #653
1056| 110 - op/sep n
1056| 3 - chr 43
1056| 97 - op/sep a
1056| 5 - id e0 #653
1056| 110 - op/sep n
1056| 3 - chr 45
1056| 97 - op/sep a
1056| 5 - id e0 #653
1056| 110 - op/sep n
1056| 3 - chr 124
1056| 97 - op/sep a
1056| 5 - id e0 #653
1056| 110 - op/sep n
1056| 3 - chr 94
1056| 111 - op/sep o
1056| 5 - id n #88
1056| 110 - op/sep n
1056| 2 - num 0
1056| 41 - op/sep )

1057| 123 - op/sep {

1058| 132 - kw if
1058| 40 - op/sep (
1058| 5 - id e0 #653
1058| 101 - op/sep e
1058| 3 - chr 43
1058| 41 - op/sep )

1059| 123 - op/sep {

1060| 132 - kw if
1060| 40 - op/sep (
1060| 5 - id mixed #942
1060| 101 - op/sep e
1060| 2 - num 2
1060| 41 - op/sep )
1060| 5 - id cg_n #994
1060| 40 - op/sep (
1060| 4 - str "  sal eax,2"
1060| 41 - op/sep )
1060| 59 - op/sep ;

1061| 5 - id cg_o #993
1061| 40 - op/sep (
1061| 4 - str "  add eax,"
1061| 41 - op/sep )
1061| 59 - op/sep ;

1062| 125 - op/sep }

1063| 133 - kw else
1063| 132 - kw if
1063| 40 - op/sep (
1063| 5 - id e0 #653
1063| 101 - op/sep e
1063| 3 - chr 45
1063| 41 - op/sep )
1063| 5 - id cg_o #993
1063| 40 - op/sep (
1063| 4 - str "  sub eax,"
1063| 41 - op/sep )
1063| 59 - op/sep ;

1064| 133 - kw else
1064| 132 - kw if
1064| 40 - op/sep (
1064| 5 - id e0 #653
1064| 101 - op/sep e
1064| 3 - chr 42
1064| 41 - op/sep )
1064| 5 - id cg_o #993
1064| 40 - op/sep (
1064| 4 - str "  imul eax,eax,"
1064| 41 - op/sep )
1064| 59 - op/sep ;

1065| 133 - kw else
1065| 132 - kw if
1065| 40 - op/sep (
1065| 5 - id e0 #653
1065| 101 - op/sep e
1065| 3 - chr 38
1065| 41 - op/sep )
1065| 5 - id cg_o #993
1065| 40 - op/sep (
1065| 4 - str "  and eax,"
1065| 41 - op/sep )
1065| 59 - op/sep ;

1066| 133 - kw else
1066| 132 - kw if
1066| 40 - op/sep (
1066| 5 - id e0 #653
1066| 101 - op/sep e
1066| 3 - chr 124
1066| 41 - op/sep )
1066| 5 - id cg_o #993
1066| 40 - op/sep (
1066| 4 - str "  or eax,"
1066| 41 - op/sep )
1066| 59 - op/sep ;

1067| 133 - kw else
1067| 132 - kw if
1067| 40 - op/sep (
1067| 5 - id e0 #653
1067| 101 - op/sep e
1067| 3 - chr 94
1067| 41 - op/sep )
1067| 5 - id cg_o #993
1067| 40 - op/sep (
1067| 4 - str "  xor eax,"
1067| 41 - op/sep )
1067| 59 - op/sep ;

1068| 133 - kw else
1068| 5 - id cg_o #993
1068| 40 - op/sep (
1068| 4 - str "  cdq\n  mov ebx,"
1068| 41 - op/sep )
1068| 59 - op/sep ;

1069| 132 - kw if
1069| 40 - op/sep (
1069| 5 - id e0 #653
1069| 101 - op/sep e
1069| 3 - chr 43
1069| 97 - op/sep a
1069| 5 - id mixed #942
1069| 101 - op/sep e
1069| 2 - num 1
1069| 111 - op/sep o
1069| 5 - id e0 #653
1069| 101 - op/sep e
1069| 3 - chr 45
1069| 97 - op/sep a
1069| 5 - id mixed #942
1069| 101 - op/sep e
1069| 2 - num 3
1069| 41 - op/sep )
1069| 5 - id n #88
1069| 61 - op/sep =
1069| 5 - id n #88
1069| 42 - op/sep *
1069| 2 - num 4
1069| 59 - op/sep ;

1070| 5 - id cg_n #994
1070| 40 - op/sep (
1070| 5 - id i2s #466
1070| 40 - op/sep (
1070| 5 - id n #88
1070| 41 - op/sep )
1070| 41 - op/sep )
1070| 59 - op/sep ;

1071| 132 - kw if
1071| 40 - op/sep (
1071| 5 - id e0 #653
1071| 101 - op/sep e
1071| 3 - chr 47
1071| 111 - op/sep o
1071| 5 - id e0 #653
1071| 101 - op/sep e
1071| 3 - chr 37
1071| 41 - op/sep )
1071| 5 - id cg_n #994
1071| 40 - op/sep (
1071| 4 - str "  idiv ebx"
1071| 41 - op/sep )
1071| 59 - op/sep ;

1072| 125 - op/sep }

1073| 125 - op/sep }

1074| 133 - kw else
1074| 132 - kw if
1074| 40 - op/sep (
1074| 5 - id e2et #440
1074| 101 - op/sep e
1074| 5 - id ET_var #746
1074| 97 - op/sep a
1074| 5 - id e2t #196
1074| 110 - op/sep n
1074| 5 - id T_c #736
1074| 97 - op/sep a
1074| 5 - id st_kind #389
1074| 91 - op/sep [
1074| 40 - op/sep (
1074| 40 - op/sep (
1074| 130 - kw int
1074| 42 - op/sep *
1074| 41 - op/sep )
1074| 5 - id e #79
1074| 91 - op/sep [
1074| 2 - num 2
1074| 93 - op/sep ]
1074| 41 - op/sep )
1074| 91 - op/sep [
1074| 2 - num 1
1074| 93 - op/sep ]
1074| 93 - op/sep ]
1074| 110 - op/sep n
1074| 5 - id K_array #367
1074| 41 - op/sep )

1075| 123 - op/sep {

1076| 5 - id cg_expr #960
1076| 40 - op/sep (
1076| 40 - op/sep (
1076| 130 - kw int
1076| 42 - op/sep *
1076| 41 - op/sep )
1076| 5 - id e #79
1076| 91 - op/sep [
1076| 2 - num 1
1076| 93 - op/sep ]
1076| 41 - op/sep )
1076| 59 - op/sep ;

1077| 132 - kw if
1077| 40 - op/sep (
1077| 5 - id e0 #653
1077| 101 - op/sep e
1077| 3 - chr 43
1077| 41 - op/sep )
1077| 123 - op/sep {
1077| 132 - kw if
1077| 40 - op/sep (
1077| 5 - id mixed #942
1077| 101 - op/sep e
1077| 2 - num 0
1077| 41 - op/sep )
1077| 5 - id cg_o #993
1077| 40 - op/sep (
1077| 4 - str "  add eax,"
1077| 41 - op/sep )
1077| 59 - op/sep ;
1077| 133 - kw else
1077| 5 - id cg_o #993
1077| 40 - op/sep (
1077| 4 - str "  mov ebx,"
1077| 41 - op/sep )
1077| 59 - op/sep ;
1077| 125 - op/sep }

1078| 133 - kw else
1078| 132 - kw if
1078| 40 - op/sep (
1078| 5 - id e0 #653
1078| 101 - op/sep e
1078| 3 - chr 45
1078| 41 - op/sep )
1078| 123 - op/sep {
1078| 132 - kw if
1078| 40 - op/sep (
1078| 5 - id mixed #942
1078| 101 - op/sep e
1078| 2 - num 0
1078| 41 - op/sep )
1078| 5 - id cg_o #993
1078| 40 - op/sep (
1078| 4 - str "  sub eax,"
1078| 41 - op/sep )
1078| 59 - op/sep ;
1078| 133 - kw else
1078| 5 - id cg_o #993
1078| 40 - op/sep (
1078| 4 - str "  mov ebx,"
1078| 41 - op/sep )
1078| 59 - op/sep ;
1078| 125 - op/sep }

1079| 133 - kw else
1079| 132 - kw if
1079| 40 - op/sep (
1079| 5 - id e0 #653
1079| 101 - op/sep e
1079| 3 - chr 42
1079| 41 - op/sep )
1079| 5 - id cg_o #993
1079| 40 - op/sep (
1079| 4 - str "  imul eax,"
1079| 41 - op/sep )
1079| 59 - op/sep ;

1080| 133 - kw else
1080| 132 - kw if
1080| 40 - op/sep (
1080| 5 - id e0 #653
1080| 101 - op/sep e
1080| 3 - chr 38
1080| 41 - op/sep )
1080| 5 - id cg_o #993
1080| 40 - op/sep (
1080| 4 - str "  and eax,"
1080| 41 - op/sep )
1080| 59 - op/sep ;

1081| 133 - kw else
1081| 132 - kw if
1081| 40 - op/sep (
1081| 5 - id e0 #653
1081| 101 - op/sep e
1081| 3 - chr 124
1081| 41 - op/sep )
1081| 5 - id cg_o #993
1081| 40 - op/sep (
1081| 4 - str "  or eax,"
1081| 41 - op/sep )
1081| 59 - op/sep ;

1082| 133 - kw else
1082| 132 - kw if
1082| 40 - op/sep (
1082| 5 - id e0 #653
1082| 101 - op/sep e
1082| 3 - chr 94
1082| 41 - op/sep )
1082| 5 - id cg_o #993
1082| 40 - op/sep (
1082| 4 - str "  xor eax,"
1082| 41 - op/sep )
1082| 59 - op/sep ;

1083| 133 - kw else
1083| 123 - op/sep {
1083| 5 - id cg_n #994
1083| 40 - op/sep (
1083| 4 - str "  cdq"
1083| 41 - op/sep )
1083| 59 - op/sep ;
1083| 5 - id cg_o #993
1083| 40 - op/sep (
1083| 4 - str "  idiv "
1083| 41 - op/sep )
1083| 59 - op/sep ;
1083| 125 - op/sep }

1084| 5 - id cg_var_n #832
1084| 40 - op/sep (
1084| 40 - op/sep (
1084| 40 - op/sep (
1084| 130 - kw int
1084| 42 - op/sep *
1084| 41 - op/sep )
1084| 5 - id e #79
1084| 91 - op/sep [
1084| 2 - num 2
1084| 93 - op/sep ]
1084| 41 - op/sep )
1084| 91 - op/sep [
1084| 2 - num 1
1084| 93 - op/sep ]
1084| 41 - op/sep )
1084| 59 - op/sep ;

1085| 132 - kw if
1085| 40 - op/sep (
1085| 5 - id e0 #653
1085| 101 - op/sep e
1085| 3 - chr 43
1085| 41 - op/sep )

1086| 123 - op/sep {

1087| 132 - kw if
1087| 40 - op/sep (
1087| 5 - id mixed #942
1087| 101 - op/sep e
1087| 2 - num 1
1087| 41 - op/sep )
1087| 5 - id cg_n #994
1087| 40 - op/sep (
1087| 4 - str "  lea eax,[eax+4*ebx]"
1087| 41 - op/sep )
1087| 59 - op/sep ;

1088| 133 - kw else
1088| 132 - kw if
1088| 40 - op/sep (
1088| 5 - id mixed #942
1088| 101 - op/sep e
1088| 2 - num 2
1088| 41 - op/sep )
1088| 5 - id cg_n #994
1088| 40 - op/sep (
1088| 4 - str "  lea eax,[4*eax+ebx]"
1088| 41 - op/sep )
1088| 59 - op/sep ;

1089| 125 - op/sep }

1090| 133 - kw else
1090| 132 - kw if
1090| 40 - op/sep (
1090| 5 - id e0 #653
1090| 101 - op/sep e
1090| 3 - chr 45
1090| 97 - op/sep a
1090| 5 - id mixed #942
1090| 101 - op/sep e
1090| 2 - num 3
1090| 41 - op/sep )

1091| 123 - op/sep {

1092| 5 - id cg_n #994
1092| 40 - op/sep (
1092| 4 - str "  sal ebx,2\n  sub eax,ebx"
1092| 41 - op/sep )
1092| 59 - op/sep ;

1093| 125 - op/sep }

1094| 125 - op/sep }

1095| 133 - kw else

1096| 123 - op/sep {

1097| 5 - id cg_expr #960
1097| 40 - op/sep (
1097| 40 - op/sep (
1097| 130 - kw int
1097| 42 - op/sep *
1097| 41 - op/sep )
1097| 5 - id e #79
1097| 91 - op/sep [
1097| 2 - num 2
1097| 93 - op/sep ]
1097| 41 - op/sep )
1097| 59 - op/sep ;
1097| 5 - id cg_n #994
1097| 40 - op/sep (
1097| 4 - str "  push eax"
1097| 41 - op/sep )
1097| 59 - op/sep ;

1098| 5 - id cg_expr #960
1098| 40 - op/sep (
1098| 40 - op/sep (
1098| 130 - kw int
1098| 42 - op/sep *
1098| 41 - op/sep )
1098| 5 - id e #79
1098| 91 - op/sep [
1098| 2 - num 1
1098| 93 - op/sep ]
1098| 41 - op/sep )
1098| 59 - op/sep ;
1098| 5 - id cg_n #994
1098| 40 - op/sep (
1098| 4 - str "  pop ebx"
1098| 41 - op/sep )
1098| 59 - op/sep ;

1099| 132 - kw if
1099| 40 - op/sep (
1099| 5 - id e0 #653
1099| 101 - op/sep e
1099| 3 - chr 43
1099| 41 - op/sep )

1100| 123 - op/sep {

1101| 132 - kw if
1101| 40 - op/sep (
1101| 5 - id mixed #942
1101| 101 - op/sep e
1101| 2 - num 1
1101| 41 - op/sep )
1101| 5 - id cg_n #994
1101| 40 - op/sep (
1101| 4 - str "  lea eax,[eax+4*ebx]"
1101| 41 - op/sep )
1101| 59 - op/sep ;

1102| 133 - kw else
1102| 132 - kw if
1102| 40 - op/sep (
1102| 5 - id mixed #942
1102| 101 - op/sep e
1102| 2 - num 2
1102| 41 - op/sep )
1102| 5 - id cg_n #994
1102| 40 - op/sep (
1102| 4 - str "  lea eax,[4*eax+ebx]"
1102| 41 - op/sep )
1102| 59 - op/sep ;

1103| 133 - kw else
1103| 5 - id cg_n #994
1103| 40 - op/sep (
1103| 4 - str "  add eax,ebx"
1103| 41 - op/sep )
1103| 59 - op/sep ;

1104| 125 - op/sep }

1105| 133 - kw else
1105| 132 - kw if
1105| 40 - op/sep (
1105| 5 - id e0 #653
1105| 101 - op/sep e
1105| 3 - chr 45
1105| 41 - op/sep )

1106| 123 - op/sep {

1107| 132 - kw if
1107| 40 - op/sep (
1107| 5 - id mixed #942
1107| 101 - op/sep e
1107| 2 - num 3
1107| 41 - op/sep )
1107| 5 - id cg_n #994
1107| 40 - op/sep (
1107| 4 - str "  sal ebx,2"
1107| 41 - op/sep )
1107| 59 - op/sep ;

1108| 5 - id cg_n #994
1108| 40 - op/sep (
1108| 4 - str "  sub eax,ebx"
1108| 41 - op/sep )
1108| 59 - op/sep ;

1109| 125 - op/sep }

1110| 133 - kw else
1110| 132 - kw if
1110| 40 - op/sep (
1110| 5 - id e0 #653
1110| 101 - op/sep e
1110| 3 - chr 42
1110| 41 - op/sep )
1110| 5 - id cg_n #994
1110| 40 - op/sep (
1110| 4 - str "  imul eax,ebx"
1110| 41 - op/sep )
1110| 59 - op/sep ;

1111| 133 - kw else
1111| 132 - kw if
1111| 40 - op/sep (
1111| 5 - id e0 #653
1111| 101 - op/sep e
1111| 3 - chr 38
1111| 41 - op/sep )
1111| 5 - id cg_n #994
1111| 40 - op/sep (
1111| 4 - str "  and eax,ebx"
1111| 41 - op/sep )
1111| 59 - op/sep ;

1112| 133 - kw else
1112| 132 - kw if
1112| 40 - op/sep (
1112| 5 - id e0 #653
1112| 101 - op/sep e
1112| 3 - chr 124
1112| 41 - op/sep )
1112| 5 - id cg_n #994
1112| 40 - op/sep (
1112| 4 - str "  or eax,ebx"
1112| 41 - op/sep )
1112| 59 - op/sep ;

1113| 133 - kw else
1113| 132 - kw if
1113| 40 - op/sep (
1113| 5 - id e0 #653
1113| 101 - op/sep e
1113| 3 - chr 94
1113| 41 - op/sep )
1113| 5 - id cg_n #994
1113| 40 - op/sep (
1113| 4 - str "  xor eax,ebx"
1113| 41 - op/sep )
1113| 59 - op/sep ;

1114| 133 - kw else
1114| 123 - op/sep {
1114| 5 - id cg_n #994
1114| 40 - op/sep (
1114| 4 - str "  cdq"
1114| 41 - op/sep )
1114| 59 - op/sep ;
1114| 5 - id cg_n #994
1114| 40 - op/sep (
1114| 4 - str "  idiv ebx"
1114| 41 - op/sep )
1114| 59 - op/sep ;
1114| 125 - op/sep }

1115| 125 - op/sep }

1116| 132 - kw if
1116| 40 - op/sep (
1116| 5 - id e0 #653
1116| 101 - op/sep e
1116| 3 - chr 45
1116| 97 - op/sep a
1116| 5 - id se_is_ptr4 #142
1116| 40 - op/sep (
1116| 42 - op/sep *
1116| 40 - op/sep (
1116| 130 - kw int
1116| 42 - op/sep *
1116| 41 - op/sep )
1116| 5 - id e #79
1116| 91 - op/sep [
1116| 2 - num 2
1116| 93 - op/sep ]
1116| 47 - op/sep /
1116| 5 - id ET_T #992
1116| 41 - op/sep )
1116| 41 - op/sep )
1116| 5 - id cg_n #994
1116| 40 - op/sep (
1116| 4 - str "  sar eax,2"
1116| 41 - op/sep )
1116| 59 - op/sep ;

1117| 132 - kw if
1117| 40 - op/sep (
1117| 5 - id e0 #653
1117| 101 - op/sep e
1117| 3 - chr 37
1117| 41 - op/sep )
1117| 5 - id cg_n #994
1117| 40 - op/sep (
1117| 4 - str "  mov eax,edx"
1117| 41 - op/sep )
1117| 59 - op/sep ;

1118| 125 - op/sep }

1119| 133 - kw else
1119| 132 - kw if
1119| 40 - op/sep (
1119| 5 - id e0 #653
1119| 101 - op/sep e
1119| 3 - chr 97
1119| 41 - op/sep )

1120| 123 - op/sep {

1121| 130 - kw int
1121| 5 - id and_label #29
1121| 61 - op/sep =
1121| 5 - id cg_new_label #814
1121| 40 - op/sep (
1121| 41 - op/sep )
1121| 59 - op/sep ;

1122| 5 - id cg_expr #960
1122| 40 - op/sep (
1122| 40 - op/sep (
1122| 130 - kw int
1122| 42 - op/sep *
1122| 41 - op/sep )
1122| 5 - id e #79
1122| 91 - op/sep [
1122| 2 - num 1
1122| 93 - op/sep ]
1122| 41 - op/sep )
1122| 59 - op/sep ;

1123| 5 - id cg_n #994
1123| 40 - op/sep (
1123| 4 - str "  test eax,eax\n  setnz al\n  movzx eax,al"
1123| 41 - op/sep )
1123| 59 - op/sep ;

1124| 5 - id cg_n #994
1124| 40 - op/sep (
1124| 4 - str "  test eax,eax"
1124| 41 - op/sep )
1124| 59 - op/sep ;

1125| 5 - id cg_o #993
1125| 40 - op/sep (
1125| 4 - str "  jz A"
1125| 41 - op/sep )
1125| 59 - op/sep ;
1125| 5 - id cg_n #994
1125| 40 - op/sep (
1125| 5 - id i2s #466
1125| 40 - op/sep (
1125| 5 - id and_label #29
1125| 41 - op/sep )
1125| 41 - op/sep )
1125| 59 - op/sep ;

1126| 5 - id cg_expr #960
1126| 40 - op/sep (
1126| 40 - op/sep (
1126| 130 - kw int
1126| 42 - op/sep *
1126| 41 - op/sep )
1126| 5 - id e #79
1126| 91 - op/sep [
1126| 2 - num 2
1126| 93 - op/sep ]
1126| 41 - op/sep )
1126| 59 - op/sep ;

1127| 5 - id cg_n #994
1127| 40 - op/sep (
1127| 4 - str "  test eax,eax\n  setnz al\n  movzx eax,al"
1127| 41 - op/sep )
1127| 59 - op/sep ;

1128| 5 - id cg_3n #264
1128| 40 - op/sep (
1128| 4 - str "A"
1128| 44 - op/sep ,
1128| 5 - id i2s #466
1128| 40 - op/sep (
1128| 5 - id and_label #29
1128| 41 - op/sep )
1128| 44 - op/sep ,
1128| 4 - str ":"
1128| 41 - op/sep )
1128| 59 - op/sep ;

1129| 125 - op/sep }

1130| 133 - kw else
1130| 132 - kw if
1130| 40 - op/sep (
1130| 5 - id e0 #653
1130| 101 - op/sep e
1130| 3 - chr 111
1130| 41 - op/sep )

1131| 123 - op/sep {

1132| 130 - kw int
1132| 5 - id or_label #289
1132| 61 - op/sep =
1132| 5 - id cg_new_label #814
1132| 40 - op/sep (
1132| 41 - op/sep )
1132| 59 - op/sep ;

1133| 5 - id cg_expr #960
1133| 40 - op/sep (
1133| 40 - op/sep (
1133| 130 - kw int
1133| 42 - op/sep *
1133| 41 - op/sep )
1133| 5 - id e #79
1133| 91 - op/sep [
1133| 2 - num 1
1133| 93 - op/sep ]
1133| 41 - op/sep )
1133| 59 - op/sep ;

1134| 5 - id cg_n #994
1134| 40 - op/sep (
1134| 4 - str "  test eax,eax\n  setnz al\n  movzx eax,al"
1134| 41 - op/sep )
1134| 59 - op/sep ;

1135| 5 - id cg_n #994
1135| 40 - op/sep (
1135| 4 - str "  test eax,eax"
1135| 41 - op/sep )
1135| 59 - op/sep ;

1136| 5 - id cg_2n #198
1136| 40 - op/sep (
1136| 4 - str "  jnz O"
1136| 44 - op/sep ,
1136| 5 - id i2s #466
1136| 40 - op/sep (
1136| 5 - id or_label #289
1136| 41 - op/sep )
1136| 41 - op/sep )
1136| 59 - op/sep ;

1137| 5 - id cg_expr #960
1137| 40 - op/sep (
1137| 40 - op/sep (
1137| 130 - kw int
1137| 42 - op/sep *
1137| 41 - op/sep )
1137| 5 - id e #79
1137| 91 - op/sep [
1137| 2 - num 2
1137| 93 - op/sep ]
1137| 41 - op/sep )
1137| 59 - op/sep ;

1138| 5 - id cg_n #994
1138| 40 - op/sep (
1138| 4 - str "  test eax,eax\n  setnz al\n  movzx eax,al"
1138| 41 - op/sep )
1138| 59 - op/sep ;

1139| 5 - id cg_3n #264
1139| 40 - op/sep (
1139| 4 - str "O"
1139| 44 - op/sep ,
1139| 5 - id i2s #466
1139| 40 - op/sep (
1139| 5 - id or_label #289
1139| 41 - op/sep )
1139| 44 - op/sep ,
1139| 4 - str ":"
1139| 41 - op/sep )
1139| 59 - op/sep ;

1140| 125 - op/sep }

1141| 133 - kw else
1141| 132 - kw if
1141| 40 - op/sep (
1141| 5 - id e0 #653
1141| 101 - op/sep e
1141| 5 - id ET_fn #612
1141| 41 - op/sep )

1142| 5 - id err1 #522
1142| 40 - op/sep (
1142| 4 - str "Just fn name? Must be fn(...)"
1142| 41 - op/sep )
1142| 59 - op/sep ;

1143| 133 - kw else

1144| 5 - id assert #124
1144| 40 - op/sep (
1144| 2 - num 0
1144| 44 - op/sep ,
1144| 4 - str "What expr?"
1144| 41 - op/sep )
1144| 59 - op/sep ;

1145| 125 - op/sep }

1147| 130 - kw int
1147| 5 - id cg_exprs_backwards_with_push #590
1147| 40 - op/sep (
1147| 130 - kw int
1147| 42 - op/sep *
1147| 42 - op/sep *
1147| 5 - id x #98
1147| 41 - op/sep )

1148| 123 - op/sep {

1149| 132 - kw if
1149| 40 - op/sep (
1149| 33 - op/sep !
1149| 5 - id x #98
1149| 41 - op/sep )
1149| 137 - kw return
1149| 2 - num 0
1149| 59 - op/sep ;

1150| 130 - kw int
1150| 5 - id n #88
1150| 61 - op/sep =
1150| 5 - id cg_exprs_backwards_with_push #590
1150| 40 - op/sep (
1150| 40 - op/sep (
1150| 130 - kw int
1150| 42 - op/sep *
1150| 42 - op/sep *
1150| 41 - op/sep )
1150| 5 - id x #98
1150| 91 - op/sep [
1150| 2 - num 1
1150| 93 - op/sep ]
1150| 41 - op/sep )
1150| 59 - op/sep ;

1151| 5 - id cg_expr #960
1151| 40 - op/sep (
1151| 5 - id x #98
1151| 91 - op/sep [
1151| 2 - num 0
1151| 93 - op/sep ]
1151| 41 - op/sep )
1151| 59 - op/sep ;

1152| 5 - id cg_n #994
1152| 40 - op/sep (
1152| 4 - str "  push eax"
1152| 41 - op/sep )
1152| 59 - op/sep ;

1153| 137 - kw return
1153| 5 - id n #88
1153| 43 - op/sep +
1153| 2 - num 1
1153| 59 - op/sep ;

1154| 125 - op/sep }

1156| 128 - kw void
1156| 5 - id cg_exprs #818
1156| 40 - op/sep (
1156| 130 - kw int
1156| 42 - op/sep *
1156| 42 - op/sep *
1156| 5 - id x #98
1156| 41 - op/sep )
1156| 123 - op/sep {
1156| 135 - kw for
1156| 40 - op/sep (
1156| 59 - op/sep ;
1156| 5 - id x #98
1156| 59 - op/sep ;
1156| 5 - id x #98
1156| 61 - op/sep =
1156| 40 - op/sep (
1156| 130 - kw int
1156| 42 - op/sep *
1156| 42 - op/sep *
1156| 41 - op/sep )
1156| 5 - id x #98
1156| 91 - op/sep [
1156| 2 - num 1
1156| 93 - op/sep ]
1156| 41 - op/sep )
1156| 5 - id cg_expr #960
1156| 40 - op/sep (
1156| 5 - id x #98
1156| 91 - op/sep [
1156| 2 - num 0
1156| 93 - op/sep ]
1156| 41 - op/sep )
1156| 59 - op/sep ;
1156| 125 - op/sep }

1160| 130 - kw int
1160| 5 - id tL #662
1160| 61 - op/sep =
1160| 2 - num 0
1160| 59 - op/sep ;

1161| 128 - kw void
1161| 5 - id tI #659
1161| 40 - op/sep (
1161| 41 - op/sep )
1161| 123 - op/sep {
1161| 5 - id p1 #371
1161| 40 - op/sep (
1161| 4 - str "            "
1161| 41 - op/sep )
1161| 59 - op/sep ;
1161| 135 - kw for
1161| 40 - op/sep (
1161| 130 - kw int
1161| 5 - id i #83
1161| 61 - op/sep =
1161| 2 - num 0
1161| 59 - op/sep ;
1161| 5 - id i #83
1161| 60 - op/sep <
1161| 5 - id tL #662
1161| 59 - op/sep ;
1161| 105 - op/sep i
1161| 5 - id i #83
1161| 41 - op/sep )
1161| 5 - id p1 #371
1161| 40 - op/sep (
1161| 4 - str "."
1161| 41 - op/sep )
1161| 59 - op/sep ;
1161| 125 - op/sep }

1162| 128 - kw void
1162| 5 - id t1 #635
1162| 40 - op/sep (
1162| 129 - kw char
1162| 42 - op/sep *
1162| 5 - id s #93
1162| 41 - op/sep )
1162| 123 - op/sep {
1162| 132 - kw if
1162| 40 - op/sep (
1162| 5 - id PA_TRACE #918
1162| 41 - op/sep )
1162| 123 - op/sep {
1162| 5 - id tI #659
1162| 40 - op/sep (
1162| 41 - op/sep )
1162| 59 - op/sep ;
1162| 5 - id p1n #619
1162| 40 - op/sep (
1162| 5 - id s #93
1162| 41 - op/sep )
1162| 59 - op/sep ;
1162| 105 - op/sep i
1162| 5 - id tL #662
1162| 59 - op/sep ;
1162| 125 - op/sep }
1162| 125 - op/sep }

1163| 128 - kw void
1163| 5 - id t2 #636
1163| 40 - op/sep (
1163| 129 - kw char
1163| 42 - op/sep *
1163| 5 - id s #93
1163| 44 - op/sep ,
1163| 129 - kw char
1163| 42 - op/sep *
1163| 5 - id s2 #570
1163| 41 - op/sep )
1163| 123 - op/sep {
1163| 132 - kw if
1163| 40 - op/sep (
1163| 5 - id PA_TRACE #918
1163| 41 - op/sep )
1163| 123 - op/sep {
1163| 5 - id tI #659
1163| 40 - op/sep (
1163| 41 - op/sep )
1163| 59 - op/sep ;
1163| 5 - id p2n #683
1163| 40 - op/sep (
1163| 5 - id s #93
1163| 44 - op/sep ,
1163| 5 - id s2 #570
1163| 41 - op/sep )
1163| 59 - op/sep ;
1163| 105 - op/sep i
1163| 5 - id tL #662
1163| 59 - op/sep ;
1163| 125 - op/sep }
1163| 125 - op/sep }

1164| 128 - kw void
1164| 5 - id t3 #637
1164| 40 - op/sep (
1164| 129 - kw char
1164| 42 - op/sep *
1164| 5 - id s #93
1164| 44 - op/sep ,
1164| 129 - kw char
1164| 42 - op/sep *
1164| 5 - id s2 #570
1164| 44 - op/sep ,
1164| 129 - kw char
1164| 42 - op/sep *
1164| 5 - id s3 #571
1164| 41 - op/sep )
1164| 123 - op/sep {
1164| 132 - kw if
1164| 40 - op/sep (
1164| 5 - id PA_TRACE #918
1164| 41 - op/sep )
1164| 123 - op/sep {
1164| 5 - id tI #659
1164| 40 - op/sep (
1164| 41 - op/sep )
1164| 59 - op/sep ;
1164| 5 - id p3n #749
1164| 40 - op/sep (
1164| 5 - id s #93
1164| 44 - op/sep ,
1164| 5 - id s2 #570
1164| 44 - op/sep ,
1164| 5 - id s3 #571
1164| 41 - op/sep )
1164| 59 - op/sep ;
1164| 105 - op/sep i
1164| 5 - id tL #662
1164| 59 - op/sep ;
1164| 125 - op/sep }
1164| 125 - op/sep }

1165| 130 - kw int
1165| 5 - id t_ #681
1165| 40 - op/sep (
1165| 130 - kw int
1165| 5 - id r #92
1165| 41 - op/sep )
1165| 123 - op/sep {
1165| 132 - kw if
1165| 40 - op/sep (
1165| 5 - id PA_TRACE #918
1165| 41 - op/sep )
1165| 123 - op/sep {
1165| 100 - op/sep d
1165| 5 - id tL #662
1165| 59 - op/sep ;
1165| 5 - id tI #659
1165| 40 - op/sep (
1165| 41 - op/sep )
1165| 59 - op/sep ;
1165| 5 - id p2n #683
1165| 40 - op/sep (
1165| 4 - str "<< "
1165| 44 - op/sep ,
1165| 5 - id i2s #466
1165| 40 - op/sep (
1165| 5 - id r #92
1165| 41 - op/sep )
1165| 41 - op/sep )
1165| 59 - op/sep ;
1165| 125 - op/sep }
1165| 137 - kw return
1165| 5 - id r #92
1165| 59 - op/sep ;
1165| 125 - op/sep }

1166| 130 - kw int
1166| 42 - op/sep *
1166| 5 - id tx #706
1166| 40 - op/sep (
1166| 130 - kw int
1166| 42 - op/sep *
1166| 5 - id r #92
1166| 41 - op/sep )
1166| 123 - op/sep {
1166| 132 - kw if
1166| 40 - op/sep (
1166| 5 - id PA_TRACE #918
1166| 41 - op/sep )
1166| 123 - op/sep {
1166| 100 - op/sep d
1166| 5 - id tL #662
1166| 59 - op/sep ;
1166| 5 - id tI #659
1166| 40 - op/sep (
1166| 41 - op/sep )
1166| 59 - op/sep ;
1166| 5 - id p2n #683
1166| 40 - op/sep (
1166| 4 - str "<<* "
1166| 44 - op/sep ,
1166| 5 - id i2s #466
1166| 40 - op/sep (
1166| 40 - op/sep (
1166| 130 - kw int
1166| 41 - op/sep )
1166| 5 - id r #92
1166| 41 - op/sep )
1166| 41 - op/sep )
1166| 59 - op/sep ;
1166| 125 - op/sep }
1166| 137 - kw return
1166| 5 - id r #92
1166| 59 - op/sep ;
1166| 125 - op/sep }

1168| 131 - kw enum
1168| 123 - op/sep {
1168| 5 - id F #48
1168| 44 - op/sep ,
1168| 5 - id T #62
1168| 125 - op/sep }
1168| 59 - op/sep ;

1173| 130 - kw int
1173| 42 - op/sep *
1173| 5 - id px_expr #616
1173| 40 - op/sep (
1173| 130 - kw int
1173| 5 - id min_prec #620
1173| 41 - op/sep )
1173| 59 - op/sep ;
1173| 130 - kw int
1173| 42 - op/sep *
1173| 5 - id px_term #691
1173| 40 - op/sep (
1173| 41 - op/sep )
1173| 59 - op/sep ;

1175| 130 - kw int
1175| 42 - op/sep *
1175| 5 - id px_primary #459
1175| 40 - op/sep (
1175| 41 - op/sep )

1176| 123 - op/sep {

1177| 5 - id t1 #635
1177| 40 - op/sep (
1177| 4 - str "px_primary"
1177| 41 - op/sep )
1177| 59 - op/sep ;

1178| 130 - kw int
1178| 42 - op/sep *
1178| 5 - id r #92
1178| 59 - op/sep ;

1179| 132 - kw if
1179| 40 - op/sep (
1179| 5 - id sc_tkn #655
1179| 101 - op/sep e
1179| 5 - id Num #278
1179| 111 - op/sep o
1179| 5 - id sc_tkn #655
1179| 101 - op/sep e
1179| 5 - id Chr #950
1179| 111 - op/sep o
1179| 5 - id sc_tkn #655
1179| 101 - op/sep e
1179| 5 - id Str #808
1179| 41 - op/sep )

1180| 123 - op/sep {

1181| 130 - kw int
1181| 5 - id t #94
1181| 61 - op/sep =
1181| 5 - id T_i #743
1181| 44 - op/sep ,
1181| 5 - id k #85
1181| 61 - op/sep =
1181| 5 - id ET_num #510
1181| 59 - op/sep ;

1182| 132 - kw if
1182| 40 - op/sep (
1182| 5 - id sc_tkn #655
1182| 101 - op/sep e
1182| 5 - id Str #808
1182| 41 - op/sep )
1182| 123 - op/sep {
1182| 5 - id k #85
1182| 61 - op/sep =
1182| 5 - id ET_str #31
1182| 59 - op/sep ;
1182| 5 - id t #94
1182| 61 - op/sep =
1182| 5 - id T_cp #742
1182| 59 - op/sep ;
1182| 125 - op/sep }
1182| 133 - kw else
1182| 132 - kw if
1182| 40 - op/sep (
1182| 5 - id sc_tkn #655
1182| 101 - op/sep e
1182| 5 - id Chr #950
1182| 41 - op/sep )
1182| 5 - id t #94
1182| 61 - op/sep =
1182| 5 - id T_c #736
1182| 59 - op/sep ;

1183| 5 - id r #92
1183| 61 - op/sep =
1183| 5 - id ET_I #982
1183| 40 - op/sep (
1183| 5 - id k #85
1183| 44 - op/sep ,
1183| 5 - id sc_num #403
1183| 44 - op/sep ,
1183| 5 - id t #94
1183| 41 - op/sep )
1183| 59 - op/sep ;

1184| 5 - id sc_next #247
1184| 40 - op/sep (
1184| 41 - op/sep )
1184| 59 - op/sep ;
1184| 137 - kw return
1184| 5 - id tx #706
1184| 40 - op/sep (
1184| 5 - id r #92
1184| 41 - op/sep )
1184| 59 - op/sep ;

1185| 125 - op/sep }

1186| 132 - kw if
1186| 40 - op/sep (
1186| 5 - id sc_tkn #655
1186| 101 - op/sep e
1186| 5 - id Id #875
1186| 41 - op/sep )

1187| 123 - op/sep {

1188| 130 - kw int
1188| 5 - id varid #983
1188| 61 - op/sep =
1188| 5 - id st_find #734
1188| 40 - op/sep (
1188| 5 - id sc_num #403
1188| 41 - op/sep )
1188| 59 - op/sep ;

1189| 132 - kw if
1189| 40 - op/sep (
1189| 5 - id varid #983
1189| 60 - op/sep <
1189| 2 - num 0
1189| 41 - op/sep )
1189| 5 - id err2 #523
1189| 40 - op/sep (
1189| 4 - str "Name is not defined: "
1189| 44 - op/sep ,
1189| 5 - id id_table #669
1189| 91 - op/sep [
1189| 5 - id sc_num #403
1189| 93 - op/sep ]
1189| 41 - op/sep )
1189| 59 - op/sep ;

1190| 132 - kw if
1190| 40 - op/sep (
1190| 5 - id st_kind #389
1190| 91 - op/sep [
1190| 5 - id varid #983
1190| 93 - op/sep ]
1190| 101 - op/sep e
1190| 5 - id K_enum #356
1190| 41 - op/sep )
1190| 5 - id r #92
1190| 61 - op/sep =
1190| 5 - id ET_I #982
1190| 40 - op/sep (
1190| 5 - id ET_num #510
1190| 44 - op/sep ,
1190| 5 - id st_value #595
1190| 91 - op/sep [
1190| 5 - id varid #983
1190| 93 - op/sep ]
1190| 44 - op/sep ,
1190| 5 - id T_i #743
1190| 41 - op/sep )
1190| 59 - op/sep ;

1191| 133 - kw else
1191| 132 - kw if
1191| 40 - op/sep (
1191| 5 - id st_kind #389
1191| 91 - op/sep [
1191| 5 - id varid #983
1191| 93 - op/sep ]
1191| 101 - op/sep e
1191| 5 - id K_fn #550
1191| 41 - op/sep )
1191| 5 - id r #92
1191| 61 - op/sep =
1191| 5 - id ET_I #982
1191| 40 - op/sep (
1191| 5 - id ET_fn #612
1191| 44 - op/sep ,
1191| 5 - id varid #983
1191| 44 - op/sep ,
1191| 5 - id st_type #985
1191| 91 - op/sep [
1191| 5 - id varid #983
1191| 93 - op/sep ]
1191| 41 - op/sep )
1191| 59 - op/sep ;

1192| 133 - kw else
1192| 132 - kw if
1192| 40 - op/sep (
1192| 5 - id st_kind #389
1192| 91 - op/sep [
1192| 5 - id varid #983
1192| 93 - op/sep ]
1192| 101 - op/sep e
1192| 5 - id K_array #367
1192| 41 - op/sep )
1192| 5 - id r #92
1192| 61 - op/sep =
1192| 5 - id ET_I #982
1192| 40 - op/sep (
1192| 5 - id ET_var #746
1192| 44 - op/sep ,
1192| 5 - id varid #983
1192| 44 - op/sep ,
1192| 5 - id st_type #985
1192| 91 - op/sep [
1192| 5 - id varid #983
1192| 93 - op/sep ]
1192| 43 - op/sep +
1192| 2 - num 1
1192| 41 - op/sep )
1192| 59 - op/sep ;

1193| 133 - kw else
1193| 5 - id r #92
1193| 61 - op/sep =
1193| 5 - id ET_I #982
1193| 40 - op/sep (
1193| 5 - id ET_var #746
1193| 44 - op/sep ,
1193| 5 - id varid #983
1193| 44 - op/sep ,
1193| 5 - id st_type #985
1193| 91 - op/sep [
1193| 5 - id varid #983
1193| 93 - op/sep ]
1193| 41 - op/sep )
1193| 59 - op/sep ;

1194| 5 - id sc_next #247
1194| 40 - op/sep (
1194| 41 - op/sep )
1194| 59 - op/sep ;
1194| 137 - kw return
1194| 5 - id tx #706
1194| 40 - op/sep (
1194| 5 - id r #92
1194| 41 - op/sep )
1194| 59 - op/sep ;

1195| 125 - op/sep }

1196| 132 - kw if
1196| 40 - op/sep (
1196| 5 - id sc_tkn #655
1196| 110 - op/sep n
1196| 3 - chr 40
1196| 41 - op/sep )
1196| 137 - kw return
1196| 5 - id tx #706
1196| 40 - op/sep (
1196| 2 - num 0
1196| 41 - op/sep )
1196| 59 - op/sep ;

1197| 5 - id sc_next #247
1197| 40 - op/sep (
1197| 41 - op/sep )
1197| 59 - op/sep ;
1197| 132 - kw if
1197| 40 - op/sep (
1197| 33 - op/sep !
1197| 40 - op/sep (
1197| 5 - id r #92
1197| 61 - op/sep =
1197| 5 - id px_expr #616
1197| 40 - op/sep (
1197| 2 - num 0
1197| 41 - op/sep )
1197| 41 - op/sep )
1197| 41 - op/sep )
1197| 137 - kw return
1197| 5 - id tx #706
1197| 40 - op/sep (
1197| 2 - num 0
1197| 41 - op/sep )
1197| 59 - op/sep ;

1198| 132 - kw if
1198| 40 - op/sep (
1198| 5 - id sc_tkn #655
1198| 110 - op/sep n
1198| 3 - chr 41
1198| 41 - op/sep )
1198| 137 - kw return
1198| 5 - id tx #706
1198| 40 - op/sep (
1198| 2 - num 0
1198| 41 - op/sep )
1198| 59 - op/sep ;

1199| 5 - id sc_next #247
1199| 40 - op/sep (
1199| 41 - op/sep )
1199| 59 - op/sep ;

1200| 137 - kw return
1200| 5 - id tx #706
1200| 40 - op/sep (
1200| 5 - id r #92
1200| 41 - op/sep )
1200| 59 - op/sep ;

1201| 125 - op/sep }

1203| 130 - kw int
1203| 5 - id pa_integer #167
1203| 40 - op/sep (
1203| 41 - op/sep )

1204| 123 - op/sep {

1205| 130 - kw int
1205| 5 - id neg #377
1205| 61 - op/sep =
1205| 5 - id F #48
1205| 59 - op/sep ;

1206| 5 - id t1 #635
1206| 40 - op/sep (
1206| 4 - str "pa_integer"
1206| 41 - op/sep )
1206| 59 - op/sep ;

1207| 132 - kw if
1207| 40 - op/sep (
1207| 5 - id sc_tkn #655
1207| 101 - op/sep e
1207| 3 - chr 45
1207| 41 - op/sep )
1207| 123 - op/sep {
1207| 5 - id neg #377
1207| 61 - op/sep =
1207| 5 - id T #62
1207| 59 - op/sep ;
1207| 5 - id sc_next #247
1207| 40 - op/sep (
1207| 41 - op/sep )
1207| 59 - op/sep ;
1207| 125 - op/sep }

1208| 132 - kw if
1208| 40 - op/sep (
1208| 5 - id sc_tkn #655
1208| 110 - op/sep n
1208| 5 - id Num #278
1208| 97 - op/sep a
1208| 5 - id sc_tkn #655
1208| 110 - op/sep n
1208| 5 - id Chr #950
1208| 97 - op/sep a
1208| 5 - id sc_tkn #655
1208| 110 - op/sep n
1208| 5 - id Id #875
1208| 41 - op/sep )
1208| 137 - kw return
1208| 5 - id t_ #681
1208| 40 - op/sep (
1208| 5 - id F #48
1208| 41 - op/sep )
1208| 59 - op/sep ;

1209| 5 - id se_type #260
1209| 61 - op/sep =
1209| 5 - id T_i #743
1209| 59 - op/sep ;

1210| 132 - kw if
1210| 40 - op/sep (
1210| 5 - id sc_tkn #655
1210| 101 - op/sep e
1210| 5 - id Id #875
1210| 41 - op/sep )

1211| 123 - op/sep {

1212| 130 - kw int
1212| 5 - id i #83
1212| 61 - op/sep =
1212| 5 - id st_find #734
1212| 40 - op/sep (
1212| 5 - id sc_num #403
1212| 41 - op/sep )
1212| 59 - op/sep ;

1213| 132 - kw if
1213| 40 - op/sep (
1213| 5 - id i #83
1213| 60 - op/sep <
1213| 2 - num 0
1213| 111 - op/sep o
1213| 5 - id st_kind #389
1213| 91 - op/sep [
1213| 5 - id i #83
1213| 93 - op/sep ]
1213| 110 - op/sep n
1213| 5 - id K_enum #356
1213| 41 - op/sep )

1214| 5 - id err2 #523
1214| 40 - op/sep (
1214| 4 - str "Can't find enum Id in const expression"
1214| 44 - op/sep ,
1214| 5 - id id_table #669
1214| 91 - op/sep [
1214| 5 - id sc_num #403
1214| 93 - op/sep ]
1214| 41 - op/sep )
1214| 59 - op/sep ;

1215| 5 - id se_value #679
1215| 61 - op/sep =
1215| 5 - id st_value #595
1215| 91 - op/sep [
1215| 5 - id i #83
1215| 93 - op/sep ]
1215| 59 - op/sep ;

1216| 125 - op/sep }

1217| 133 - kw else

1218| 123 - op/sep {

1219| 5 - id se_value #679
1219| 61 - op/sep =
1219| 5 - id sc_num #403
1219| 59 - op/sep ;

1220| 132 - kw if
1220| 40 - op/sep (
1220| 5 - id sc_tkn #655
1220| 101 - op/sep e
1220| 5 - id Chr #950
1220| 41 - op/sep )
1220| 5 - id se_type #260
1220| 61 - op/sep =
1220| 5 - id T_c #736
1220| 59 - op/sep ;

1221| 125 - op/sep }

1222| 132 - kw if
1222| 40 - op/sep (
1222| 5 - id neg #377
1222| 41 - op/sep )
1222| 5 - id se_value #679
1222| 61 - op/sep =
1222| 45 - op/sep -
1222| 5 - id se_value #679
1222| 59 - op/sep ;

1223| 5 - id sc_next #247
1223| 40 - op/sep (
1223| 41 - op/sep )
1223| 59 - op/sep ;

1224| 137 - kw return
1224| 5 - id t_ #681
1224| 40 - op/sep (
1224| 5 - id T #62
1224| 41 - op/sep )
1224| 59 - op/sep ;

1225| 125 - op/sep }

1227| 130 - kw int
1227| 42 - op/sep *
1227| 5 - id px_exprs #274
1227| 40 - op/sep (
1227| 41 - op/sep )

1228| 123 - op/sep {

1229| 5 - id t1 #635
1229| 40 - op/sep (
1229| 4 - str "px_exprs"
1229| 41 - op/sep )
1229| 59 - op/sep ;

1230| 130 - kw int
1230| 42 - op/sep *
1230| 5 - id r #92
1230| 61 - op/sep =
1230| 5 - id px_expr #616
1230| 40 - op/sep (
1230| 2 - num 0
1230| 41 - op/sep )
1230| 59 - op/sep ;
1230| 132 - kw if
1230| 40 - op/sep (
1230| 33 - op/sep !
1230| 5 - id r #92
1230| 41 - op/sep )
1230| 137 - kw return
1230| 5 - id tx #706
1230| 40 - op/sep (
1230| 2 - num 0
1230| 41 - op/sep )
1230| 59 - op/sep ;

1231| 130 - kw int
1231| 42 - op/sep *
1231| 5 - id first #536
1231| 61 - op/sep =
1231| 5 - id ET_P #988
1231| 40 - op/sep (
1231| 5 - id r #92
1231| 41 - op/sep )
1231| 59 - op/sep ;

1232| 130 - kw int
1232| 42 - op/sep *
1232| 5 - id last #786
1232| 61 - op/sep =
1232| 5 - id first #536
1232| 59 - op/sep ;

1233| 134 - kw while
1233| 40 - op/sep (
1233| 5 - id sc_tkn #655
1233| 101 - op/sep e
1233| 3 - chr 44
1233| 41 - op/sep )

1234| 123 - op/sep {

1235| 5 - id sc_next #247
1235| 40 - op/sep (
1235| 41 - op/sep )
1235| 59 - op/sep ;

1236| 132 - kw if
1236| 40 - op/sep (
1236| 33 - op/sep !
1236| 40 - op/sep (
1236| 5 - id r #92
1236| 61 - op/sep =
1236| 5 - id px_expr #616
1236| 40 - op/sep (
1236| 2 - num 0
1236| 41 - op/sep )
1236| 41 - op/sep )
1236| 41 - op/sep )
1236| 137 - kw return
1236| 5 - id tx #706
1236| 40 - op/sep (
1236| 2 - num 0
1236| 41 - op/sep )
1236| 59 - op/sep ;

1237| 5 - id last #786
1237| 91 - op/sep [
1237| 2 - num 1
1237| 93 - op/sep ]
1237| 61 - op/sep =
1237| 40 - op/sep (
1237| 130 - kw int
1237| 41 - op/sep )
1237| 5 - id ET_P #988
1237| 40 - op/sep (
1237| 5 - id r #92
1237| 41 - op/sep )
1237| 59 - op/sep ;

1238| 5 - id last #786
1238| 61 - op/sep =
1238| 40 - op/sep (
1238| 130 - kw int
1238| 42 - op/sep *
1238| 41 - op/sep )
1238| 5 - id last #786
1238| 91 - op/sep [
1238| 2 - num 1
1238| 93 - op/sep ]
1238| 59 - op/sep ;

1239| 125 - op/sep }

1240| 137 - kw return
1240| 5 - id tx #706
1240| 40 - op/sep (
1240| 5 - id first #536
1240| 41 - op/sep )
1240| 59 - op/sep ;

1241| 125 - op/sep }

1243| 130 - kw int
1243| 42 - op/sep *
1243| 5 - id px_call_or_index #479
1243| 40 - op/sep (
1243| 130 - kw int
1243| 42 - op/sep *
1243| 5 - id e #79
1243| 41 - op/sep )

1244| 123 - op/sep {

1245| 5 - id t1 #635
1245| 40 - op/sep (
1245| 4 - str "px_call_or_index"
1245| 41 - op/sep )
1245| 59 - op/sep ;

1246| 130 - kw int
1246| 42 - op/sep *
1246| 5 - id r #92
1246| 59 - op/sep ;

1247| 134 - kw while
1247| 40 - op/sep (
1247| 5 - id sc_tkn #655
1247| 101 - op/sep e
1247| 3 - chr 40
1247| 111 - op/sep o
1247| 5 - id sc_tkn #655
1247| 101 - op/sep e
1247| 3 - chr 91
1247| 41 - op/sep )

1248| 123 - op/sep {

1249| 132 - kw if
1249| 40 - op/sep (
1249| 5 - id sc_tkn #655
1249| 101 - op/sep e
1249| 3 - chr 91
1249| 41 - op/sep )

1250| 123 - op/sep {

1251| 5 - id sc_next #247
1251| 40 - op/sep (
1251| 41 - op/sep )
1251| 59 - op/sep ;

1252| 132 - kw if
1252| 40 - op/sep (
1252| 33 - op/sep !
1252| 40 - op/sep (
1252| 5 - id r #92
1252| 61 - op/sep =
1252| 5 - id px_expr #616
1252| 40 - op/sep (
1252| 2 - num 0
1252| 41 - op/sep )
1252| 41 - op/sep )
1252| 111 - op/sep o
1252| 5 - id sc_tkn #655
1252| 110 - op/sep n
1252| 3 - chr 93
1252| 41 - op/sep )
1252| 137 - kw return
1252| 5 - id tx #706
1252| 40 - op/sep (
1252| 2 - num 0
1252| 41 - op/sep )
1252| 59 - op/sep ;

1253| 130 - kw int
1253| 5 - id et #721
1253| 61 - op/sep =
1253| 42 - op/sep *
1253| 5 - id e #79
1253| 47 - op/sep /
1253| 5 - id ET_T #992
1253| 59 - op/sep ;

1254| 130 - kw int
1254| 5 - id rt #573
1254| 61 - op/sep =
1254| 42 - op/sep *
1254| 5 - id r #92
1254| 47 - op/sep /
1254| 5 - id ET_T #992
1254| 59 - op/sep ;

1255| 132 - kw if
1255| 40 - op/sep (
1255| 33 - op/sep !
1255| 40 - op/sep (
1255| 5 - id et #721
1255| 101 - op/sep e
1255| 5 - id T_cp #742
1255| 111 - op/sep o
1255| 5 - id et #721
1255| 101 - op/sep e
1255| 5 - id T_cpp #428
1255| 111 - op/sep o
1255| 5 - id et #721
1255| 101 - op/sep e
1255| 5 - id T_ip #129
1255| 111 - op/sep o
1255| 5 - id et #721
1255| 101 - op/sep e
1255| 5 - id T_ipp #330
1255| 41 - op/sep )
1255| 41 - op/sep )

1256| 5 - id err1 #522
1256| 40 - op/sep (
1256| 4 - str "Indexed expr. must be pointer"
1256| 41 - op/sep )
1256| 59 - op/sep ;

1257| 132 - kw if
1257| 40 - op/sep (
1257| 33 - op/sep !
1257| 40 - op/sep (
1257| 5 - id rt #573
1257| 101 - op/sep e
1257| 5 - id T_i #743
1257| 111 - op/sep o
1257| 5 - id rt #573
1257| 101 - op/sep e
1257| 5 - id T_c #736
1257| 41 - op/sep )
1257| 41 - op/sep )
1257| 5 - id err1 #522
1257| 40 - op/sep (
1257| 4 - str "Index must be integer"
1257| 41 - op/sep )
1257| 59 - op/sep ;

1259| 5 - id e #79
1259| 61 - op/sep =
1259| 5 - id ET_1 #957
1259| 40 - op/sep (
1259| 5 - id ET_star #966
1259| 44 - op/sep ,
1259| 5 - id ET_2 #958
1259| 40 - op/sep (
1259| 3 - chr 43
1259| 44 - op/sep ,
1259| 5 - id e #79
1259| 44 - op/sep ,
1259| 5 - id r #92
1259| 44 - op/sep ,
1259| 5 - id et #721
1259| 41 - op/sep )
1259| 44 - op/sep ,
1259| 5 - id et #721
1259| 45 - op/sep -
1259| 2 - num 1
1259| 41 - op/sep )
1259| 59 - op/sep ;

1260| 125 - op/sep }

1261| 133 - kw else

1262| 123 - op/sep {

1263| 5 - id sc_next #247
1263| 40 - op/sep (
1263| 41 - op/sep )
1263| 59 - op/sep ;

1264| 132 - kw if
1264| 40 - op/sep (
1264| 5 - id sc_tkn #655
1264| 101 - op/sep e
1264| 3 - chr 41
1264| 41 - op/sep )

1265| 123 - op/sep {

1266| 5 - id e #79
1266| 61 - op/sep =
1266| 5 - id ET_2 #958
1266| 40 - op/sep (
1266| 5 - id ET_call #308
1266| 44 - op/sep ,
1266| 5 - id e #79
1266| 44 - op/sep ,
1266| 2 - num 0
1266| 44 - op/sep ,
1266| 42 - op/sep *
1266| 5 - id e #79
1266| 47 - op/sep /
1266| 5 - id ET_T #992
1266| 41 - op/sep )
1266| 59 - op/sep ;

1267| 125 - op/sep }

1268| 133 - kw else

1269| 123 - op/sep {

1270| 132 - kw if
1270| 40 - op/sep (
1270| 33 - op/sep !
1270| 40 - op/sep (
1270| 5 - id r #92
1270| 61 - op/sep =
1270| 5 - id px_exprs #274
1270| 40 - op/sep (
1270| 41 - op/sep )
1270| 41 - op/sep )
1270| 111 - op/sep o
1270| 5 - id sc_tkn #655
1270| 110 - op/sep n
1270| 3 - chr 41
1270| 41 - op/sep )
1270| 137 - kw return
1270| 5 - id tx #706
1270| 40 - op/sep (
1270| 2 - num 0
1270| 41 - op/sep )
1270| 59 - op/sep ;

1271| 5 - id e #79
1271| 61 - op/sep =
1271| 5 - id ET_2 #958
1271| 40 - op/sep (
1271| 5 - id ET_call #308
1271| 44 - op/sep ,
1271| 5 - id e #79
1271| 44 - op/sep ,
1271| 5 - id r #92
1271| 44 - op/sep ,
1271| 42 - op/sep *
1271| 5 - id e #79
1271| 47 - op/sep /
1271| 5 - id ET_T #992
1271| 41 - op/sep )
1271| 59 - op/sep ;

1272| 125 - op/sep }

1273| 125 - op/sep }

1274| 5 - id sc_next #247
1274| 40 - op/sep (
1274| 41 - op/sep )
1274| 59 - op/sep ;

1275| 125 - op/sep }

1276| 137 - kw return
1276| 5 - id tx #706
1276| 40 - op/sep (
1276| 5 - id e #79
1276| 41 - op/sep )
1276| 59 - op/sep ;

1277| 125 - op/sep }

1279| 130 - kw int
1279| 42 - op/sep *
1279| 5 - id px_postfix #452
1279| 40 - op/sep (
1279| 41 - op/sep )

1280| 123 - op/sep {

1281| 5 - id t1 #635
1281| 40 - op/sep (
1281| 4 - str "px_postfix"
1281| 41 - op/sep )
1281| 59 - op/sep ;

1282| 130 - kw int
1282| 42 - op/sep *
1282| 5 - id r #92
1282| 61 - op/sep =
1282| 5 - id px_primary #459
1282| 40 - op/sep (
1282| 41 - op/sep )
1282| 59 - op/sep ;

1283| 132 - kw if
1283| 40 - op/sep (
1283| 33 - op/sep !
1283| 5 - id r #92
1283| 41 - op/sep )
1283| 137 - kw return
1283| 5 - id tx #706
1283| 40 - op/sep (
1283| 2 - num 0
1283| 41 - op/sep )
1283| 59 - op/sep ;

1284| 137 - kw return
1284| 5 - id tx #706
1284| 40 - op/sep (
1284| 5 - id px_call_or_index #479
1284| 40 - op/sep (
1284| 5 - id r #92
1284| 41 - op/sep )
1284| 41 - op/sep )
1284| 59 - op/sep ;

1285| 125 - op/sep }

1287| 130 - kw int
1287| 42 - op/sep *
1287| 5 - id px_unexpr #245
1287| 40 - op/sep (
1287| 41 - op/sep )

1288| 123 - op/sep {

1289| 5 - id t1 #635
1289| 40 - op/sep (
1289| 4 - str "px_unexpr"
1289| 41 - op/sep )
1289| 59 - op/sep ;

1290| 132 - kw if
1290| 40 - op/sep (
1290| 5 - id sc_tkn #655
1290| 101 - op/sep e
1290| 3 - chr 105
1290| 111 - op/sep o
1290| 5 - id sc_tkn #655
1290| 101 - op/sep e
1290| 3 - chr 100
1290| 41 - op/sep )

1291| 123 - op/sep {

1292| 130 - kw int
1292| 5 - id t #94
1292| 61 - op/sep =
1292| 5 - id sc_tkn #655
1292| 59 - op/sep ;

1293| 5 - id sc_next #247
1293| 40 - op/sep (
1293| 41 - op/sep )
1293| 59 - op/sep ;

1294| 130 - kw int
1294| 42 - op/sep *
1294| 5 - id e #79
1294| 61 - op/sep =
1294| 5 - id px_unexpr #245
1294| 40 - op/sep (
1294| 41 - op/sep )
1294| 59 - op/sep ;

1295| 137 - kw return
1295| 5 - id tx #706
1295| 40 - op/sep (
1295| 5 - id ET_1 #957
1295| 40 - op/sep (
1295| 5 - id t #94
1295| 44 - op/sep ,
1295| 5 - id e #79
1295| 44 - op/sep ,
1295| 42 - op/sep *
1295| 5 - id e #79
1295| 47 - op/sep /
1295| 5 - id ET_T #992
1295| 41 - op/sep )
1295| 41 - op/sep )
1295| 59 - op/sep ;

1296| 125 - op/sep }

1297| 132 - kw if
1297| 40 - op/sep (
1297| 5 - id sc_tkn #655
1297| 101 - op/sep e
1297| 3 - chr 45
1297| 111 - op/sep o
1297| 5 - id sc_tkn #655
1297| 101 - op/sep e
1297| 3 - chr 33
1297| 111 - op/sep o
1297| 5 - id sc_tkn #655
1297| 101 - op/sep e
1297| 3 - chr 42
1297| 111 - op/sep o
1297| 5 - id sc_tkn #655
1297| 101 - op/sep e
1297| 3 - chr 126
1297| 41 - op/sep )

1298| 123 - op/sep {

1299| 130 - kw int
1299| 5 - id t #94
1299| 61 - op/sep =
1299| 5 - id sc_tkn #655
1299| 59 - op/sep ;

1300| 132 - kw if
1300| 40 - op/sep (
1300| 5 - id t #94
1300| 101 - op/sep e
1300| 3 - chr 45
1300| 41 - op/sep )
1300| 5 - id t #94
1300| 61 - op/sep =
1300| 5 - id ET_neg #457
1300| 59 - op/sep ;
1300| 133 - kw else
1300| 132 - kw if
1300| 40 - op/sep (
1300| 5 - id t #94
1300| 101 - op/sep e
1300| 3 - chr 42
1300| 41 - op/sep )
1300| 5 - id t #94
1300| 61 - op/sep =
1300| 5 - id ET_star #966
1300| 59 - op/sep ;

1301| 5 - id sc_next #247
1301| 40 - op/sep (
1301| 41 - op/sep )
1301| 59 - op/sep ;

1302| 130 - kw int
1302| 42 - op/sep *
1302| 5 - id e #79
1302| 61 - op/sep =
1302| 5 - id px_term #691
1302| 40 - op/sep (
1302| 41 - op/sep )
1302| 59 - op/sep ;

1303| 130 - kw int
1303| 5 - id type #638
1303| 61 - op/sep =
1303| 5 - id T_i #743
1303| 59 - op/sep ;

1304| 132 - kw if
1304| 40 - op/sep (
1304| 5 - id t #94
1304| 101 - op/sep e
1304| 5 - id ET_star #966
1304| 41 - op/sep )

1305| 123 - op/sep {

1306| 130 - kw int
1306| 5 - id et #721
1306| 61 - op/sep =
1306| 42 - op/sep *
1306| 5 - id e #79
1306| 47 - op/sep /
1306| 5 - id ET_T #992
1306| 59 - op/sep ;

1307| 132 - kw if
1307| 40 - op/sep (
1307| 33 - op/sep !
1307| 40 - op/sep (
1307| 5 - id et #721
1307| 101 - op/sep e
1307| 5 - id T_cp #742
1307| 111 - op/sep o
1307| 5 - id et #721
1307| 101 - op/sep e
1307| 5 - id T_cpp #428
1307| 111 - op/sep o
1307| 5 - id et #721
1307| 101 - op/sep e
1307| 5 - id T_ip #129
1307| 111 - op/sep o
1307| 5 - id et #721
1307| 101 - op/sep e
1307| 5 - id T_ipp #330
1307| 41 - op/sep )
1307| 41 - op/sep )

1308| 5 - id err1 #522
1308| 40 - op/sep (
1308| 4 - str "Dereferenced expr. must be pointer"
1308| 41 - op/sep )
1308| 59 - op/sep ;

1309| 5 - id type #638
1309| 61 - op/sep =
1309| 5 - id et #721
1309| 45 - op/sep -
1309| 2 - num 1
1309| 59 - op/sep ;

1310| 125 - op/sep }

1311| 137 - kw return
1311| 5 - id tx #706
1311| 40 - op/sep (
1311| 5 - id ET_1 #957
1311| 40 - op/sep (
1311| 5 - id t #94
1311| 44 - op/sep ,
1311| 5 - id e #79
1311| 44 - op/sep ,
1311| 5 - id type #638
1311| 41 - op/sep )
1311| 41 - op/sep )
1311| 59 - op/sep ;

1312| 125 - op/sep }

1313| 137 - kw return
1313| 5 - id tx #706
1313| 40 - op/sep (
1313| 5 - id px_postfix #452
1313| 40 - op/sep (
1313| 41 - op/sep )
1313| 41 - op/sep )
1313| 59 - op/sep ;

1314| 125 - op/sep }

1316| 130 - kw int
1316| 5 - id pa_type #267
1316| 40 - op/sep (
1316| 41 - op/sep )

1317| 123 - op/sep {

1318| 5 - id t1 #635
1318| 40 - op/sep (
1318| 4 - str "pa_type"
1318| 41 - op/sep )
1318| 59 - op/sep ;

1319| 132 - kw if
1319| 40 - op/sep (
1319| 5 - id sc_tkn #655
1319| 101 - op/sep e
1319| 5 - id Kw #17
1319| 43 - op/sep +
1319| 5 - id Int #241
1319| 111 - op/sep o
1319| 5 - id sc_tkn #655
1319| 101 - op/sep e
1319| 5 - id Kw #17
1319| 43 - op/sep +
1319| 5 - id Char #193
1319| 41 - op/sep )

1320| 123 - op/sep {

1321| 132 - kw if
1321| 40 - op/sep (
1321| 5 - id sc_tkn #655
1321| 101 - op/sep e
1321| 5 - id Kw #17
1321| 43 - op/sep +
1321| 5 - id Int #241
1321| 41 - op/sep )
1321| 5 - id se_type #260
1321| 61 - op/sep =
1321| 5 - id T_i #743
1321| 59 - op/sep ;
1321| 133 - kw else
1321| 5 - id se_type #260
1321| 61 - op/sep =
1321| 5 - id T_c #736
1321| 59 - op/sep ;

1322| 5 - id sc_next #247
1322| 40 - op/sep (
1322| 41 - op/sep )
1322| 59 - op/sep ;

1323| 137 - kw return
1323| 5 - id t_ #681
1323| 40 - op/sep (
1323| 5 - id T #62
1323| 41 - op/sep )
1323| 59 - op/sep ;

1324| 125 - op/sep }

1325| 137 - kw return
1325| 5 - id t_ #681
1325| 40 - op/sep (
1325| 5 - id F #48
1325| 41 - op/sep )
1325| 59 - op/sep ;

1326| 125 - op/sep }

1328| 130 - kw int
1328| 5 - id pa_stars #59
1328| 40 - op/sep (
1328| 41 - op/sep )

1329| 123 - op/sep {

1330| 5 - id t1 #635
1330| 40 - op/sep (
1330| 4 - str "pa_stars"
1330| 41 - op/sep )
1330| 59 - op/sep ;

1331| 5 - id se_stars #955
1331| 61 - op/sep =
1331| 2 - num 0
1331| 59 - op/sep ;

1332| 132 - kw if
1332| 40 - op/sep (
1332| 5 - id sc_tkn #655
1332| 101 - op/sep e
1332| 3 - chr 42
1332| 41 - op/sep )
1332| 123 - op/sep {
1332| 5 - id sc_next #247
1332| 40 - op/sep (
1332| 41 - op/sep )
1332| 59 - op/sep ;
1332| 5 - id se_stars #955
1332| 61 - op/sep =
1332| 2 - num 1
1332| 59 - op/sep ;
1332| 132 - kw if
1332| 40 - op/sep (
1332| 5 - id sc_tkn #655
1332| 101 - op/sep e
1332| 3 - chr 42
1332| 41 - op/sep )
1332| 123 - op/sep {
1332| 5 - id sc_next #247
1332| 40 - op/sep (
1332| 41 - op/sep )
1332| 59 - op/sep ;
1332| 5 - id se_stars #955
1332| 61 - op/sep =
1332| 2 - num 2
1332| 59 - op/sep ;
1332| 125 - op/sep }
1332| 125 - op/sep }

1333| 137 - kw return
1333| 5 - id t_ #681
1333| 40 - op/sep (
1333| 5 - id T #62
1333| 41 - op/sep )
1333| 59 - op/sep ;

1334| 125 - op/sep }

1336| 130 - kw int
1336| 42 - op/sep *
1336| 5 - id px_term #691
1336| 40 - op/sep (
1336| 41 - op/sep )

1337| 123 - op/sep {

1338| 5 - id t1 #635
1338| 40 - op/sep (
1338| 4 - str "px_term"
1338| 41 - op/sep )
1338| 59 - op/sep ;

1339| 132 - kw if
1339| 40 - op/sep (
1339| 5 - id sc_tkn #655
1339| 101 - op/sep e
1339| 3 - chr 40
1339| 41 - op/sep )

1340| 123 - op/sep {

1341| 5 - id sc_next #247
1341| 40 - op/sep (
1341| 41 - op/sep )
1341| 59 - op/sep ;

1342| 132 - kw if
1342| 40 - op/sep (
1342| 5 - id pa_type #267
1342| 40 - op/sep (
1342| 41 - op/sep )
1342| 41 - op/sep )

1343| 123 - op/sep {

1344| 5 - id pa_stars #59
1344| 40 - op/sep (
1344| 41 - op/sep )
1344| 59 - op/sep ;
1344| 132 - kw if
1344| 40 - op/sep (
1344| 5 - id sc_tkn #655
1344| 110 - op/sep n
1344| 3 - chr 41
1344| 41 - op/sep )
1344| 137 - kw return
1344| 5 - id tx #706
1344| 40 - op/sep (
1344| 2 - num 0
1344| 41 - op/sep )
1344| 59 - op/sep ;

1345| 130 - kw int
1345| 5 - id t #94
1345| 61 - op/sep =
1345| 5 - id se_type #260
1345| 43 - op/sep +
1345| 5 - id se_stars #955
1345| 59 - op/sep ;

1346| 5 - id sc_next #247
1346| 40 - op/sep (
1346| 41 - op/sep )
1346| 59 - op/sep ;

1347| 137 - kw return
1347| 5 - id tx #706
1347| 40 - op/sep (
1347| 5 - id ET_1 #957
1347| 40 - op/sep (
1347| 5 - id ET_cast #778
1347| 44 - op/sep ,
1347| 5 - id px_term #691
1347| 40 - op/sep (
1347| 41 - op/sep )
1347| 44 - op/sep ,
1347| 5 - id t #94
1347| 41 - op/sep )
1347| 41 - op/sep )
1347| 59 - op/sep ;

1348| 125 - op/sep }

1349| 130 - kw int
1349| 42 - op/sep *
1349| 5 - id r #92
1349| 61 - op/sep =
1349| 5 - id px_expr #616
1349| 40 - op/sep (
1349| 2 - num 0
1349| 41 - op/sep )
1349| 59 - op/sep ;

1350| 132 - kw if
1350| 40 - op/sep (
1350| 33 - op/sep !
1350| 5 - id r #92
1350| 111 - op/sep o
1350| 5 - id sc_tkn #655
1350| 110 - op/sep n
1350| 3 - chr 41
1350| 41 - op/sep )
1350| 137 - kw return
1350| 5 - id tx #706
1350| 40 - op/sep (
1350| 2 - num 0
1350| 41 - op/sep )
1350| 59 - op/sep ;

1351| 5 - id sc_next #247
1351| 40 - op/sep (
1351| 41 - op/sep )
1351| 59 - op/sep ;

1352| 137 - kw return
1352| 5 - id tx #706
1352| 40 - op/sep (
1352| 5 - id px_call_or_index #479
1352| 40 - op/sep (
1352| 5 - id r #92
1352| 41 - op/sep )
1352| 41 - op/sep )
1352| 59 - op/sep ;

1353| 125 - op/sep }

1354| 137 - kw return
1354| 5 - id tx #706
1354| 40 - op/sep (
1354| 5 - id px_unexpr #245
1354| 40 - op/sep (
1354| 41 - op/sep )
1354| 41 - op/sep )
1354| 59 - op/sep ;

1355| 125 - op/sep }

1357| 130 - kw int
1357| 5 - id se_calc_binop_type #508
1357| 40 - op/sep (
1357| 130 - kw int
1357| 5 - id op #369
1357| 44 - op/sep ,
1357| 130 - kw int
1357| 42 - op/sep *
1357| 5 - id left #199
1357| 44 - op/sep ,
1357| 130 - kw int
1357| 42 - op/sep *
1357| 5 - id right #787
1357| 41 - op/sep )

1358| 123 - op/sep {

1360| 132 - kw if
1360| 40 - op/sep (
1360| 5 - id op #369
1360| 101 - op/sep e
1360| 3 - chr 97
1360| 111 - op/sep o
1360| 5 - id op #369
1360| 101 - op/sep e
1360| 3 - chr 111
1360| 41 - op/sep )
1360| 137 - kw return
1360| 5 - id T_i #743
1360| 59 - op/sep ;

1361| 130 - kw int
1361| 5 - id lt #175
1361| 61 - op/sep =
1361| 42 - op/sep *
1361| 5 - id left #199
1361| 47 - op/sep /
1361| 5 - id ET_T #992
1361| 59 - op/sep ;

1362| 130 - kw int
1362| 5 - id rt #573
1362| 61 - op/sep =
1362| 42 - op/sep *
1362| 5 - id right #787
1362| 47 - op/sep /
1362| 5 - id ET_T #992
1362| 59 - op/sep ;

1363| 132 - kw if
1363| 40 - op/sep (
1363| 5 - id op #369
1363| 101 - op/sep e
1363| 3 - chr 61
1363| 97 - op/sep a
1363| 5 - id lt #175
1363| 101 - op/sep e
1363| 5 - id T_c #736
1363| 97 - op/sep a
1363| 5 - id rt #573
1363| 101 - op/sep e
1363| 5 - id T_c #736
1363| 41 - op/sep )
1363| 137 - kw return
1363| 5 - id T_c #736
1363| 59 - op/sep ;

1364| 132 - kw if
1364| 40 - op/sep (
1364| 5 - id se_is_int #769
1364| 40 - op/sep (
1364| 5 - id lt #175
1364| 41 - op/sep )
1364| 97 - op/sep a
1364| 5 - id se_is_int #769
1364| 40 - op/sep (
1364| 5 - id rt #573
1364| 41 - op/sep )
1364| 41 - op/sep )
1364| 137 - kw return
1364| 5 - id T_i #743
1364| 59 - op/sep ;

1365| 132 - kw if
1365| 40 - op/sep (
1365| 5 - id op #369
1365| 101 - op/sep e
1365| 3 - chr 61
1365| 41 - op/sep )

1366| 123 - op/sep {

1367| 132 - kw if
1367| 40 - op/sep (
1367| 5 - id se_is_ptr #376
1367| 40 - op/sep (
1367| 5 - id lt #175
1367| 41 - op/sep )
1367| 97 - op/sep a
1367| 5 - id lt #175
1367| 101 - op/sep e
1367| 5 - id rt #573
1367| 41 - op/sep )
1367| 137 - kw return
1367| 5 - id lt #175
1367| 59 - op/sep ;

1368| 132 - kw if
1368| 40 - op/sep (
1368| 5 - id se_is_ptr #376
1368| 40 - op/sep (
1368| 5 - id lt #175
1368| 41 - op/sep )
1368| 97 - op/sep a
1368| 40 - op/sep (
1368| 5 - id rt #573
1368| 101 - op/sep e
1368| 5 - id T_c #736
1368| 111 - op/sep o
1368| 5 - id rt #573
1368| 101 - op/sep e
1368| 5 - id T_i #743
1368| 41 - op/sep )
1368| 41 - op/sep )
1368| 137 - kw return
1368| 5 - id lt #175
1368| 59 - op/sep ;

1369| 125 - op/sep }

1370| 133 - kw else
1370| 132 - kw if
1370| 40 - op/sep (
1370| 5 - id op #369
1370| 101 - op/sep e
1370| 3 - chr 43
1370| 41 - op/sep )

1371| 123 - op/sep {

1372| 132 - kw if
1372| 40 - op/sep (
1372| 5 - id se_is_ptr #376
1372| 40 - op/sep (
1372| 5 - id lt #175
1372| 41 - op/sep )
1372| 97 - op/sep a
1372| 40 - op/sep (
1372| 5 - id rt #573
1372| 101 - op/sep e
1372| 5 - id T_c #736
1372| 111 - op/sep o
1372| 5 - id rt #573
1372| 101 - op/sep e
1372| 5 - id T_i #743
1372| 41 - op/sep )
1372| 41 - op/sep )
1372| 137 - kw return
1372| 5 - id lt #175
1372| 59 - op/sep ;

1373| 132 - kw if
1373| 40 - op/sep (
1373| 40 - op/sep (
1373| 5 - id lt #175
1373| 101 - op/sep e
1373| 5 - id T_c #736
1373| 111 - op/sep o
1373| 5 - id lt #175
1373| 101 - op/sep e
1373| 5 - id T_i #743
1373| 41 - op/sep )
1373| 97 - op/sep a
1373| 5 - id se_is_ptr #376
1373| 40 - op/sep (
1373| 5 - id rt #573
1373| 41 - op/sep )
1373| 41 - op/sep )
1373| 137 - kw return
1373| 5 - id rt #573
1373| 59 - op/sep ;

1374| 125 - op/sep }

1375| 133 - kw else
1375| 132 - kw if
1375| 40 - op/sep (
1375| 5 - id op #369
1375| 101 - op/sep e
1375| 3 - chr 45
1375| 41 - op/sep )

1376| 123 - op/sep {

1377| 132 - kw if
1377| 40 - op/sep (
1377| 5 - id se_is_ptr #376
1377| 40 - op/sep (
1377| 5 - id lt #175
1377| 41 - op/sep )
1377| 97 - op/sep a
1377| 40 - op/sep (
1377| 5 - id rt #573
1377| 101 - op/sep e
1377| 5 - id T_c #736
1377| 111 - op/sep o
1377| 5 - id rt #573
1377| 101 - op/sep e
1377| 5 - id T_i #743
1377| 41 - op/sep )
1377| 41 - op/sep )
1377| 137 - kw return
1377| 5 - id lt #175
1377| 59 - op/sep ;

1378| 132 - kw if
1378| 40 - op/sep (
1378| 5 - id se_is_ptr #376
1378| 40 - op/sep (
1378| 5 - id lt #175
1378| 41 - op/sep )
1378| 97 - op/sep a
1378| 5 - id lt #175
1378| 101 - op/sep e
1378| 5 - id rt #573
1378| 41 - op/sep )
1378| 137 - kw return
1378| 5 - id T_i #743
1378| 59 - op/sep ;

1379| 125 - op/sep }

1380| 133 - kw else
1380| 132 - kw if
1380| 40 - op/sep (
1380| 5 - id op #369
1380| 101 - op/sep e
1380| 3 - chr 101
1380| 111 - op/sep o
1380| 5 - id op #369
1380| 101 - op/sep e
1380| 3 - chr 110
1380| 41 - op/sep )

1381| 123 - op/sep {

1382| 132 - kw if
1382| 40 - op/sep (
1382| 5 - id se_is_ptr #376
1382| 40 - op/sep (
1382| 5 - id lt #175
1382| 41 - op/sep )
1382| 97 - op/sep a
1382| 5 - id lt #175
1382| 101 - op/sep e
1382| 5 - id rt #573
1382| 41 - op/sep )
1382| 137 - kw return
1382| 5 - id T_i #743
1382| 59 - op/sep ;

1383| 132 - kw if
1383| 40 - op/sep (
1383| 5 - id se_is_ptr #376
1383| 40 - op/sep (
1383| 5 - id lt #175
1383| 41 - op/sep )
1383| 97 - op/sep a
1383| 40 - op/sep (
1383| 5 - id rt #573
1383| 101 - op/sep e
1383| 5 - id T_c #736
1383| 111 - op/sep o
1383| 5 - id rt #573
1383| 101 - op/sep e
1383| 5 - id T_i #743
1383| 41 - op/sep )
1383| 41 - op/sep )
1383| 137 - kw return
1383| 5 - id T_i #743
1383| 59 - op/sep ;

1384| 125 - op/sep }

1385| 133 - kw else
1385| 132 - kw if
1385| 40 - op/sep (
1385| 5 - id op #369
1385| 101 - op/sep e
1385| 3 - chr 60
1385| 111 - op/sep o
1385| 5 - id op #369
1385| 101 - op/sep e
1385| 3 - chr 62
1385| 111 - op/sep o
1385| 5 - id op #369
1385| 101 - op/sep e
1385| 3 - chr 108
1385| 111 - op/sep o
1385| 5 - id op #369
1385| 101 - op/sep e
1385| 3 - chr 103
1385| 41 - op/sep )

1386| 123 - op/sep {

1387| 132 - kw if
1387| 40 - op/sep (
1387| 5 - id se_is_ptr #376
1387| 40 - op/sep (
1387| 5 - id lt #175
1387| 41 - op/sep )
1387| 97 - op/sep a
1387| 5 - id lt #175
1387| 101 - op/sep e
1387| 5 - id rt #573
1387| 41 - op/sep )
1387| 137 - kw return
1387| 5 - id T_i #743
1387| 59 - op/sep ;

1388| 125 - op/sep }

1390| 129 - kw char
1390| 5 - id op_s #24
1390| 91 - op/sep [
1390| 2 - num 2
1390| 93 - op/sep ]
1390| 59 - op/sep ;
1390| 5 - id op_s #24
1390| 91 - op/sep [
1390| 2 - num 0
1390| 93 - op/sep ]
1390| 61 - op/sep =
1390| 40 - op/sep (
1390| 129 - kw char
1390| 41 - op/sep )
1390| 5 - id op #369
1390| 59 - op/sep ;
1390| 5 - id op_s #24
1390| 91 - op/sep [
1390| 2 - num 1
1390| 93 - op/sep ]
1390| 61 - op/sep =
1390| 3 - chr 0
1390| 59 - op/sep ;

1391| 129 - kw char
1391| 42 - op/sep *
1391| 5 - id op_r #21
1391| 61 - op/sep =
1391| 5 - id op_s #24
1391| 59 - op/sep ;

1392| 132 - kw if
1392| 40 - op/sep (
1392| 5 - id op #369
1392| 101 - op/sep e
1392| 3 - chr 101
1392| 41 - op/sep )
1392| 5 - id op_r #21
1392| 61 - op/sep =
1392| 4 - str "=="
1392| 59 - op/sep ;
1392| 133 - kw else
1392| 132 - kw if
1392| 40 - op/sep (
1392| 5 - id op #369
1392| 101 - op/sep e
1392| 3 - chr 110
1392| 41 - op/sep )
1392| 5 - id op_r #21
1392| 61 - op/sep =
1392| 4 - str "!="
1392| 59 - op/sep ;

1393| 133 - kw else
1393| 132 - kw if
1393| 40 - op/sep (
1393| 5 - id op #369
1393| 101 - op/sep e
1393| 3 - chr 108
1393| 41 - op/sep )
1393| 5 - id op_r #21
1393| 61 - op/sep =
1393| 4 - str "<="
1393| 59 - op/sep ;
1393| 133 - kw else
1393| 132 - kw if
1393| 40 - op/sep (
1393| 5 - id op #369
1393| 101 - op/sep e
1393| 3 - chr 103
1393| 41 - op/sep )
1393| 5 - id op_r #21
1393| 61 - op/sep =
1393| 4 - str ">="
1393| 59 - op/sep ;

1394| 5 - id err2 #523
1394| 40 - op/sep (
1394| 4 - str "Wrong operand types in operator: "
1394| 44 - op/sep ,
1394| 5 - id op_r #21
1394| 41 - op/sep )
1394| 59 - op/sep ;

1395| 137 - kw return
1395| 5 - id T_v #755
1395| 59 - op/sep ;

1396| 125 - op/sep }

1398| 130 - kw int
1398| 42 - op/sep *
1398| 5 - id px_expr #616
1398| 40 - op/sep (
1398| 130 - kw int
1398| 5 - id min_prec #620
1398| 41 - op/sep )

1399| 123 - op/sep {

1400| 5 - id t2 #636
1400| 40 - op/sep (
1400| 4 - str "px_expr "
1400| 44 - op/sep ,
1400| 5 - id i2s #466
1400| 40 - op/sep (
1400| 5 - id min_prec #620
1400| 41 - op/sep )
1400| 41 - op/sep )
1400| 59 - op/sep ;

1401| 130 - kw int
1401| 42 - op/sep *
1401| 5 - id r #92
1401| 61 - op/sep =
1401| 5 - id px_term #691
1401| 40 - op/sep (
1401| 41 - op/sep )
1401| 59 - op/sep ;

1402| 132 - kw if
1402| 40 - op/sep (
1402| 33 - op/sep !
1402| 5 - id r #92
1402| 41 - op/sep )
1402| 137 - kw return
1402| 5 - id tx #706
1402| 40 - op/sep (
1402| 2 - num 0
1402| 41 - op/sep )
1402| 59 - op/sep ;

1403| 134 - kw while
1403| 40 - op/sep (
1403| 5 - id memchr #91
1403| 40 - op/sep (
1403| 5 - id OPS #148
1403| 44 - op/sep ,
1403| 5 - id sc_tkn #655
1403| 44 - op/sep ,
1403| 5 - id OPS_LEN #785
1403| 41 - op/sep )
1403| 110 - op/sep n
1403| 2 - num 0
1403| 97 - op/sep a
1403| 5 - id min_prec #620
1403| 60 - op/sep <
1403| 5 - id op_prec #591
1403| 91 - op/sep [
1403| 5 - id sc_tkn #655
1403| 93 - op/sep ]
1403| 41 - op/sep )

1404| 123 - op/sep {

1405| 130 - kw int
1405| 5 - id p #90
1405| 61 - op/sep =
1405| 5 - id op_prec #591
1405| 91 - op/sep [
1405| 5 - id sc_tkn #655
1405| 93 - op/sep ]
1405| 59 - op/sep ;

1406| 132 - kw if
1406| 40 - op/sep (
1406| 5 - id sc_tkn #655
1406| 101 - op/sep e
1406| 3 - chr 61
1406| 41 - op/sep )
1406| 100 - op/sep d
1406| 5 - id p #90
1406| 59 - op/sep ;

1407| 130 - kw int
1407| 5 - id t #94
1407| 61 - op/sep =
1407| 5 - id sc_tkn #655
1407| 59 - op/sep ;

1408| 5 - id sc_next #247
1408| 40 - op/sep (
1408| 41 - op/sep )
1408| 59 - op/sep ;

1409| 130 - kw int
1409| 42 - op/sep *
1409| 5 - id q #100
1409| 61 - op/sep =
1409| 5 - id px_expr #616
1409| 40 - op/sep (
1409| 5 - id p #90
1409| 41 - op/sep )
1409| 59 - op/sep ;

1410| 132 - kw if
1410| 40 - op/sep (
1410| 33 - op/sep !
1410| 5 - id q #100
1410| 41 - op/sep )
1410| 137 - kw return
1410| 5 - id tx #706
1410| 40 - op/sep (
1410| 2 - num 0
1410| 41 - op/sep )
1410| 59 - op/sep ;

1411| 5 - id r #92
1411| 61 - op/sep =
1411| 5 - id ET_2 #958
1411| 40 - op/sep (
1411| 5 - id t #94
1411| 44 - op/sep ,
1411| 5 - id r #92
1411| 44 - op/sep ,
1411| 5 - id q #100
1411| 44 - op/sep ,
1411| 5 - id se_calc_binop_type #508
1411| 40 - op/sep (
1411| 5 - id t #94
1411| 44 - op/sep ,
1411| 5 - id r #92
1411| 44 - op/sep ,
1411| 5 - id q #100
1411| 41 - op/sep )
1411| 41 - op/sep )
1411| 59 - op/sep ;

1412| 125 - op/sep }

1413| 137 - kw return
1413| 5 - id tx #706
1413| 40 - op/sep (
1413| 5 - id r #92
1413| 41 - op/sep )
1413| 59 - op/sep ;

1414| 125 - op/sep }

1416| 130 - kw int
1416| 5 - id pa_arrayinit #978
1416| 40 - op/sep (
1416| 41 - op/sep )

1417| 123 - op/sep {

1418| 5 - id t1 #635
1418| 40 - op/sep (
1418| 4 - str "pa_arrayinit"
1418| 41 - op/sep )
1418| 59 - op/sep ;

1419| 132 - kw if
1419| 40 - op/sep (
1419| 5 - id sc_tkn #655
1419| 101 - op/sep e
1419| 5 - id Str #808
1419| 41 - op/sep )

1420| 123 - op/sep {

1421| 132 - kw if
1421| 40 - op/sep (
1421| 5 - id se_type #260
1421| 110 - op/sep n
1421| 5 - id T_c #736
1421| 41 - op/sep )
1421| 137 - kw return
1421| 5 - id t_ #681
1421| 40 - op/sep (
1421| 5 - id F #48
1421| 41 - op/sep )
1421| 59 - op/sep ;

1422| 5 - id se_items #271
1422| 61 - op/sep =
1422| 5 - id strlen #338
1422| 40 - op/sep (
1422| 5 - id sc_text #842
1422| 41 - op/sep )
1422| 43 - op/sep +
1422| 2 - num 1
1422| 59 - op/sep ;

1423| 5 - id sc_next #247
1423| 40 - op/sep (
1423| 41 - op/sep )
1423| 59 - op/sep ;

1424| 137 - kw return
1424| 5 - id t_ #681
1424| 40 - op/sep (
1424| 5 - id T #62
1424| 41 - op/sep )
1424| 59 - op/sep ;

1425| 125 - op/sep }

1426| 5 - id se_items #271
1426| 61 - op/sep =
1426| 2 - num 0
1426| 59 - op/sep ;

1427| 5 - id se_array_items #1005
1427| 61 - op/sep =
1427| 2 - num 0
1427| 59 - op/sep ;

1428| 132 - kw if
1428| 40 - op/sep (
1428| 5 - id sc_tkn #655
1428| 110 - op/sep n
1428| 3 - chr 123
1428| 41 - op/sep )
1428| 137 - kw return
1428| 5 - id t_ #681
1428| 40 - op/sep (
1428| 5 - id F #48
1428| 41 - op/sep )
1428| 59 - op/sep ;

1429| 5 - id sc_next #247
1429| 40 - op/sep (
1429| 41 - op/sep )
1429| 59 - op/sep ;

1430| 132 - kw if
1430| 40 - op/sep (
1430| 5 - id sc_tkn #655
1430| 101 - op/sep e
1430| 5 - id Str #808
1430| 41 - op/sep )

1431| 123 - op/sep {

1432| 130 - kw int
1432| 42 - op/sep *
1432| 5 - id array_items #485
1432| 61 - op/sep =
1432| 40 - op/sep (
1432| 130 - kw int
1432| 42 - op/sep *
1432| 41 - op/sep )
1432| 5 - id malloc #352
1432| 40 - op/sep (
1432| 5 - id INTSZ #949
1432| 42 - op/sep *
1432| 5 - id MAX_INIT_DIM #583
1432| 41 - op/sep )
1432| 59 - op/sep ;

1433| 5 - id array_items #485
1433| 91 - op/sep [
1433| 5 - id se_items #271
1433| 93 - op/sep ]
1433| 61 - op/sep =
1433| 5 - id sc_num #403
1433| 59 - op/sep ;

1434| 5 - id sc_next #247
1434| 40 - op/sep (
1434| 41 - op/sep )
1434| 59 - op/sep ;

1435| 134 - kw while
1435| 40 - op/sep (
1435| 5 - id sc_tkn #655
1435| 101 - op/sep e
1435| 3 - chr 44
1435| 41 - op/sep )

1436| 123 - op/sep {

1437| 5 - id sc_next #247
1437| 40 - op/sep (
1437| 41 - op/sep )
1437| 59 - op/sep ;
1437| 105 - op/sep i
1437| 5 - id se_items #271
1437| 59 - op/sep ;

1438| 132 - kw if
1438| 40 - op/sep (
1438| 5 - id sc_tkn #655
1438| 110 - op/sep n
1438| 5 - id Str #808
1438| 41 - op/sep )
1438| 137 - kw return
1438| 5 - id t_ #681
1438| 40 - op/sep (
1438| 5 - id F #48
1438| 41 - op/sep )
1438| 59 - op/sep ;

1439| 5 - id array_items #485
1439| 91 - op/sep [
1439| 5 - id se_items #271
1439| 93 - op/sep ]
1439| 61 - op/sep =
1439| 5 - id sc_num #403
1439| 59 - op/sep ;

1440| 5 - id sc_next #247
1440| 40 - op/sep (
1440| 41 - op/sep )
1440| 59 - op/sep ;

1441| 125 - op/sep }

1442| 5 - id se_array_items #1005
1442| 61 - op/sep =
1442| 5 - id array_items #485
1442| 59 - op/sep ;

1443| 125 - op/sep }

1444| 133 - kw else

1445| 123 - op/sep {

1446| 132 - kw if
1446| 40 - op/sep (
1446| 33 - op/sep !
1446| 5 - id pa_integer #167
1446| 40 - op/sep (
1446| 41 - op/sep )
1446| 41 - op/sep )
1446| 137 - kw return
1446| 5 - id t_ #681
1446| 40 - op/sep (
1446| 5 - id F #48
1446| 41 - op/sep )
1446| 59 - op/sep ;

1447| 134 - kw while
1447| 40 - op/sep (
1447| 5 - id sc_tkn #655
1447| 101 - op/sep e
1447| 3 - chr 44
1447| 41 - op/sep )

1448| 123 - op/sep {

1449| 5 - id sc_next #247
1449| 40 - op/sep (
1449| 41 - op/sep )
1449| 59 - op/sep ;
1449| 105 - op/sep i
1449| 5 - id se_items #271
1449| 59 - op/sep ;

1450| 132 - kw if
1450| 40 - op/sep (
1450| 33 - op/sep !
1450| 5 - id pa_integer #167
1450| 40 - op/sep (
1450| 41 - op/sep )
1450| 41 - op/sep )
1450| 137 - kw return
1450| 5 - id t_ #681
1450| 40 - op/sep (
1450| 5 - id F #48
1450| 41 - op/sep )
1450| 59 - op/sep ;

1451| 125 - op/sep }

1452| 125 - op/sep }

1453| 132 - kw if
1453| 40 - op/sep (
1453| 5 - id sc_tkn #655
1453| 110 - op/sep n
1453| 3 - chr 125
1453| 41 - op/sep )
1453| 137 - kw return
1453| 5 - id t_ #681
1453| 40 - op/sep (
1453| 5 - id F #48
1453| 41 - op/sep )
1453| 59 - op/sep ;

1454| 5 - id sc_next #247
1454| 40 - op/sep (
1454| 41 - op/sep )
1454| 59 - op/sep ;
1454| 105 - op/sep i
1454| 5 - id se_items #271
1454| 59 - op/sep ;

1455| 137 - kw return
1455| 5 - id t_ #681
1455| 40 - op/sep (
1455| 5 - id T #62
1455| 41 - op/sep )
1455| 59 - op/sep ;

1456| 125 - op/sep }

1458| 130 - kw int
1458| 5 - id se_add_var #661
1458| 40 - op/sep (
1458| 130 - kw int
1458| 5 - id id #969
1458| 44 - op/sep ,
1458| 130 - kw int
1458| 5 - id t #94
1458| 44 - op/sep ,
1458| 130 - kw int
1458| 5 - id dim #472
1458| 44 - op/sep ,
1458| 130 - kw int
1458| 5 - id init #458
1458| 44 - op/sep ,
1458| 130 - kw int
1458| 42 - op/sep *
1458| 5 - id init_exprs #663
1458| 41 - op/sep )

1459| 123 - op/sep {

1462| 130 - kw int
1462| 5 - id k #85
1462| 61 - op/sep =
1462| 5 - id K_array #367
1462| 59 - op/sep ;

1463| 132 - kw if
1463| 40 - op/sep (
1463| 5 - id dim #472
1463| 60 - op/sep <
1463| 2 - num 0
1463| 41 - op/sep )
1463| 123 - op/sep {
1463| 5 - id dim #472
1463| 61 - op/sep =
1463| 2 - num 1
1463| 59 - op/sep ;
1463| 5 - id k #85
1463| 61 - op/sep =
1463| 5 - id K_var #777
1463| 59 - op/sep ;
1463| 125 - op/sep }

1464| 130 - kw int
1464| 5 - id itemsz #517
1464| 61 - op/sep =
1464| 5 - id INTSZ #949
1464| 59 - op/sep ;
1464| 132 - kw if
1464| 40 - op/sep (
1464| 5 - id t #94
1464| 101 - op/sep e
1464| 5 - id T_c #736
1464| 41 - op/sep )
1464| 5 - id itemsz #517
1464| 61 - op/sep =
1464| 2 - num 1
1464| 59 - op/sep ;

1465| 130 - kw int
1465| 5 - id idealsz #513
1465| 61 - op/sep =
1465| 5 - id dim #472
1465| 42 - op/sep *
1465| 5 - id itemsz #517
1465| 59 - op/sep ;

1466| 130 - kw int
1466| 5 - id varsz #664
1466| 61 - op/sep =
1466| 40 - op/sep (
1466| 5 - id idealsz #513
1466| 43 - op/sep +
1466| 5 - id INTSZ #949
1466| 45 - op/sep -
1466| 2 - num 1
1466| 41 - op/sep )
1466| 47 - op/sep /
1466| 5 - id INTSZ #949
1466| 42 - op/sep *
1466| 5 - id INTSZ #949
1466| 59 - op/sep ;

1468| 132 - kw if
1468| 40 - op/sep (
1468| 5 - id se_level #920
1468| 62 - op/sep >
1468| 2 - num 0
1468| 41 - op/sep )

1469| 123 - op/sep {

1470| 5 - id se_local_offset #845
1470| 61 - op/sep =
1470| 5 - id se_local_offset #845
1470| 45 - op/sep -
1470| 5 - id varsz #664
1470| 59 - op/sep ;

1471| 132 - kw if
1471| 40 - op/sep (
1471| 5 - id init #458
1471| 41 - op/sep )

1472| 123 - op/sep {

1473| 132 - kw if
1473| 40 - op/sep (
1473| 5 - id k #85
1473| 101 - op/sep e
1473| 5 - id K_var #777
1473| 41 - op/sep )

1474| 123 - op/sep {

1475| 5 - id cg_expr #960
1475| 40 - op/sep (
1475| 5 - id init_exprs #663
1475| 41 - op/sep )
1475| 59 - op/sep ;

1477| 5 - id cg_o #993
1477| 40 - op/sep (
1477| 4 - str "  mov DWORD PTR [ebp"
1477| 41 - op/sep )
1477| 59 - op/sep ;
1477| 5 - id cg_o #993
1477| 40 - op/sep (
1477| 5 - id i2s #466
1477| 40 - op/sep (
1477| 5 - id se_local_offset #845
1477| 41 - op/sep )
1477| 41 - op/sep )
1477| 59 - op/sep ;

1478| 5 - id cg_o #993
1478| 40 - op/sep (
1478| 4 - str ",eax # init "
1478| 41 - op/sep )
1478| 59 - op/sep ;
1478| 5 - id cg_n #994
1478| 40 - op/sep (
1478| 5 - id id_table #669
1478| 91 - op/sep [
1478| 5 - id id #969
1478| 93 - op/sep ]
1478| 41 - op/sep )
1478| 59 - op/sep ;

1479| 125 - op/sep }

1480| 133 - kw else

1481| 123 - op/sep {

1482| 130 - kw int
1482| 5 - id n #88
1482| 61 - op/sep =
1482| 2 - num 0
1482| 59 - op/sep ;

1483| 135 - kw for
1483| 40 - op/sep (
1483| 130 - kw int
1483| 42 - op/sep *
1483| 5 - id x #98
1483| 61 - op/sep =
1483| 5 - id init_exprs #663
1483| 59 - op/sep ;
1483| 5 - id x #98
1483| 97 - op/sep a
1483| 5 - id n #88
1483| 60 - op/sep <
1483| 5 - id dim #472
1483| 59 - op/sep ;
1483| 105 - op/sep i
1483| 5 - id n #88
1483| 44 - op/sep ,
1483| 5 - id x #98
1483| 61 - op/sep =
1483| 40 - op/sep (
1483| 130 - kw int
1483| 42 - op/sep *
1483| 41 - op/sep )
1483| 5 - id x #98
1483| 91 - op/sep [
1483| 2 - num 1
1483| 93 - op/sep ]
1483| 41 - op/sep )

1484| 123 - op/sep {

1485| 5 - id cg_expr #960
1485| 40 - op/sep (
1485| 40 - op/sep (
1485| 130 - kw int
1485| 42 - op/sep *
1485| 41 - op/sep )
1485| 5 - id x #98
1485| 91 - op/sep [
1485| 2 - num 0
1485| 93 - op/sep ]
1485| 41 - op/sep )
1485| 59 - op/sep ;

1486| 5 - id cg_o #993
1486| 40 - op/sep (
1486| 4 - str "  mov DWORD PTR [ebp"
1486| 41 - op/sep )
1486| 59 - op/sep ;
1486| 5 - id cg_o #993
1486| 40 - op/sep (
1486| 5 - id i2s #466
1486| 40 - op/sep (
1486| 5 - id se_local_offset #845
1486| 43 - op/sep +
1486| 5 - id n #88
1486| 42 - op/sep *
1486| 5 - id INTSZ #949
1486| 41 - op/sep )
1486| 41 - op/sep )
1486| 59 - op/sep ;

1487| 132 - kw if
1487| 40 - op/sep (
1487| 5 - id n #88
1487| 110 - op/sep n
1487| 2 - num 0
1487| 41 - op/sep )
1487| 5 - id cg_n #994
1487| 40 - op/sep (
1487| 4 - str ",eax"
1487| 41 - op/sep )
1487| 59 - op/sep ;
1487| 133 - kw else
1487| 123 - op/sep {
1487| 5 - id cg_o #993
1487| 40 - op/sep (
1487| 4 - str ",eax # init "
1487| 41 - op/sep )
1487| 59 - op/sep ;
1487| 5 - id cg_n #994
1487| 40 - op/sep (
1487| 5 - id id_table #669
1487| 91 - op/sep [
1487| 5 - id id #969
1487| 93 - op/sep ]
1487| 41 - op/sep )
1487| 59 - op/sep ;
1487| 125 - op/sep }

1488| 125 - op/sep }

1489| 135 - kw for
1489| 40 - op/sep (
1489| 59 - op/sep ;
1489| 5 - id n #88
1489| 60 - op/sep <
1489| 5 - id dim #472
1489| 59 - op/sep ;
1489| 105 - op/sep i
1489| 5 - id n #88
1489| 41 - op/sep )

1490| 123 - op/sep {

1491| 5 - id cg_o #993
1491| 40 - op/sep (
1491| 4 - str "  mov DWORD PTR [ebp"
1491| 41 - op/sep )
1491| 59 - op/sep ;
1491| 5 - id cg_o #993
1491| 40 - op/sep (
1491| 5 - id i2s #466
1491| 40 - op/sep (
1491| 5 - id se_local_offset #845
1491| 43 - op/sep +
1491| 5 - id n #88
1491| 42 - op/sep *
1491| 5 - id INTSZ #949
1491| 41 - op/sep )
1491| 41 - op/sep )
1491| 59 - op/sep ;

1492| 5 - id cg_n #994
1492| 40 - op/sep (
1492| 4 - str ",0"
1492| 41 - op/sep )
1492| 59 - op/sep ;

1493| 125 - op/sep }

1494| 125 - op/sep }

1495| 125 - op/sep }

1496| 137 - kw return
1496| 5 - id st_add #645
1496| 40 - op/sep (
1496| 5 - id id #969
1496| 44 - op/sep ,
1496| 5 - id t #94
1496| 44 - op/sep ,
1496| 5 - id k #85
1496| 44 - op/sep ,
1496| 5 - id se_local_offset #845
1496| 44 - op/sep ,
1496| 5 - id dim #472
1496| 41 - op/sep )
1496| 59 - op/sep ;

1497| 125 - op/sep }

1499| 132 - kw if
1499| 40 - op/sep (
1499| 5 - id init #458
1499| 101 - op/sep e
1499| 2 - num 0
1499| 111 - op/sep o
1499| 5 - id init #458
1499| 101 - op/sep e
1499| 5 - id Num #278
1499| 97 - op/sep a
1499| 5 - id init_exprs #663
1499| 101 - op/sep e
1499| 2 - num 0
1499| 41 - op/sep )

1500| 123 - op/sep {

1501| 130 - kw int
1501| 5 - id n #88
1501| 61 - op/sep =
1501| 5 - id st_add #645
1501| 40 - op/sep (
1501| 5 - id id #969
1501| 44 - op/sep ,
1501| 5 - id t #94
1501| 44 - op/sep ,
1501| 5 - id k #85
1501| 44 - op/sep ,
1501| 5 - id se_bss_offset #400
1501| 43 - op/sep +
1501| 5 - id BSS_ORG #398
1501| 44 - op/sep ,
1501| 5 - id dim #472
1501| 41 - op/sep )
1501| 59 - op/sep ;

1502| 5 - id se_bss_offset #400
1502| 61 - op/sep =
1502| 5 - id se_bss_offset #400
1502| 43 - op/sep +
1502| 5 - id varsz #664
1502| 59 - op/sep ;

1503| 5 - id cg_o #993
1503| 40 - op/sep (
1503| 4 - str "  .globl _"
1503| 41 - op/sep )
1503| 59 - op/sep ;
1503| 5 - id cg_n #994
1503| 40 - op/sep (
1503| 5 - id id_table #669
1503| 91 - op/sep [
1503| 5 - id id #969
1503| 93 - op/sep ]
1503| 41 - op/sep )
1503| 59 - op/sep ;

1504| 132 - kw if
1504| 40 - op/sep (
1504| 5 - id cg_section #889
1504| 110 - op/sep n
1504| 5 - id S_BSS #115
1504| 41 - op/sep )
1504| 123 - op/sep {
1504| 5 - id cg_section #889
1504| 61 - op/sep =
1504| 5 - id S_BSS #115
1504| 59 - op/sep ;
1504| 5 - id cg_n #994
1504| 40 - op/sep (
1504| 4 - str "  .bss"
1504| 41 - op/sep )
1504| 59 - op/sep ;
1504| 125 - op/sep }

1505| 132 - kw if
1505| 40 - op/sep (
1505| 5 - id idealsz #513
1505| 103 - op/sep g
1505| 2 - num 4
1505| 97 - op/sep a
1505| 5 - id cg_bss_align #160
1505| 110 - op/sep n
1505| 2 - num 0
1505| 41 - op/sep )
1505| 123 - op/sep {
1505| 5 - id cg_n #994
1505| 40 - op/sep (
1505| 4 - str "  .align 4"
1505| 41 - op/sep )
1505| 59 - op/sep ;
1505| 5 - id cg_bss_align #160
1505| 61 - op/sep =
1505| 2 - num 0
1505| 59 - op/sep ;
1505| 125 - op/sep }

1506| 5 - id cg_bss_align #160
1506| 61 - op/sep =
1506| 40 - op/sep (
1506| 5 - id cg_bss_align #160
1506| 43 - op/sep +
1506| 5 - id idealsz #513
1506| 41 - op/sep )
1506| 37 - op/sep %
1506| 2 - num 4
1506| 59 - op/sep ;

1507| 5 - id cg_o #993
1507| 40 - op/sep (
1507| 4 - str "_"
1507| 41 - op/sep )
1507| 59 - op/sep ;
1507| 5 - id cg_o #993
1507| 40 - op/sep (
1507| 5 - id id_table #669
1507| 91 - op/sep [
1507| 5 - id id #969
1507| 93 - op/sep ]
1507| 41 - op/sep )
1507| 59 - op/sep ;
1507| 5 - id cg_n #994
1507| 40 - op/sep (
1507| 4 - str ":"
1507| 41 - op/sep )
1507| 59 - op/sep ;

1508| 5 - id cg_o #993
1508| 40 - op/sep (
1508| 4 - str "  .space "
1508| 41 - op/sep )
1508| 59 - op/sep ;
1508| 5 - id cg_n #994
1508| 40 - op/sep (
1508| 5 - id i2s #466
1508| 40 - op/sep (
1508| 5 - id idealsz #513
1508| 41 - op/sep )
1508| 41 - op/sep )
1508| 59 - op/sep ;

1509| 137 - kw return
1509| 5 - id n #88
1509| 59 - op/sep ;

1510| 125 - op/sep }

1511| 130 - kw int
1511| 5 - id n #88
1511| 61 - op/sep =
1511| 5 - id st_add #645
1511| 40 - op/sep (
1511| 5 - id id #969
1511| 44 - op/sep ,
1511| 5 - id t #94
1511| 44 - op/sep ,
1511| 5 - id k #85
1511| 44 - op/sep ,
1511| 5 - id se_data_offset #528
1511| 44 - op/sep ,
1511| 5 - id dim #472
1511| 41 - op/sep )
1511| 59 - op/sep ;

1512| 5 - id se_data_offset #528
1512| 61 - op/sep =
1512| 5 - id se_data_offset #528
1512| 43 - op/sep +
1512| 5 - id varsz #664
1512| 59 - op/sep ;

1513| 5 - id cg_o #993
1513| 40 - op/sep (
1513| 4 - str "  .globl _"
1513| 41 - op/sep )
1513| 59 - op/sep ;
1513| 5 - id cg_n #994
1513| 40 - op/sep (
1513| 5 - id id_table #669
1513| 91 - op/sep [
1513| 5 - id id #969
1513| 93 - op/sep ]
1513| 41 - op/sep )
1513| 59 - op/sep ;

1514| 132 - kw if
1514| 40 - op/sep (
1514| 5 - id cg_section #889
1514| 110 - op/sep n
1514| 5 - id S_DATA #615
1514| 41 - op/sep )
1514| 123 - op/sep {
1514| 5 - id cg_section #889
1514| 61 - op/sep =
1514| 5 - id S_DATA #615
1514| 59 - op/sep ;
1514| 5 - id cg_n #994
1514| 40 - op/sep (
1514| 4 - str "  .data"
1514| 41 - op/sep )
1514| 59 - op/sep ;
1514| 125 - op/sep }

1515| 132 - kw if
1515| 40 - op/sep (
1515| 5 - id idealsz #513
1515| 103 - op/sep g
1515| 2 - num 4
1515| 97 - op/sep a
1515| 5 - id cg_data_align #44
1515| 110 - op/sep n
1515| 2 - num 0
1515| 41 - op/sep )
1515| 123 - op/sep {
1515| 5 - id cg_n #994
1515| 40 - op/sep (
1515| 4 - str "  .align 4"
1515| 41 - op/sep )
1515| 59 - op/sep ;
1515| 5 - id cg_data_align #44
1515| 61 - op/sep =
1515| 2 - num 0
1515| 59 - op/sep ;
1515| 125 - op/sep }

1516| 5 - id cg_data_align #44
1516| 61 - op/sep =
1516| 40 - op/sep (
1516| 5 - id cg_data_align #44
1516| 43 - op/sep +
1516| 5 - id idealsz #513
1516| 41 - op/sep )
1516| 37 - op/sep %
1516| 2 - num 4
1516| 59 - op/sep ;

1517| 5 - id cg_o #993
1517| 40 - op/sep (
1517| 4 - str "_"
1517| 41 - op/sep )
1517| 59 - op/sep ;
1517| 5 - id cg_o #993
1517| 40 - op/sep (
1517| 5 - id id_table #669
1517| 91 - op/sep [
1517| 5 - id id #969
1517| 93 - op/sep ]
1517| 41 - op/sep )
1517| 59 - op/sep ;
1517| 5 - id cg_n #994
1517| 40 - op/sep (
1517| 4 - str ":"
1517| 41 - op/sep )
1517| 59 - op/sep ;

1518| 132 - kw if
1518| 40 - op/sep (
1518| 5 - id init #458
1518| 101 - op/sep e
1518| 5 - id Str #808
1518| 97 - op/sep a
1518| 5 - id t #94
1518| 101 - op/sep e
1518| 5 - id T_c #736
1518| 97 - op/sep a
1518| 5 - id k #85
1518| 101 - op/sep e
1518| 5 - id K_array #367
1518| 41 - op/sep )

1519| 123 - op/sep {

1520| 5 - id cg_sl_str #361
1520| 40 - op/sep (
1520| 40 - op/sep (
1520| 130 - kw int
1520| 41 - op/sep )
1520| 5 - id init_exprs #663
1520| 41 - op/sep )
1520| 59 - op/sep ;

1521| 130 - kw int
1521| 5 - id tail #575
1521| 61 - op/sep =
1521| 5 - id dim #472
1521| 45 - op/sep -
1521| 40 - op/sep (
1521| 5 - id strlen #338
1521| 40 - op/sep (
1521| 5 - id sl_table #893
1521| 91 - op/sep [
1521| 40 - op/sep (
1521| 130 - kw int
1521| 41 - op/sep )
1521| 5 - id init_exprs #663
1521| 93 - op/sep ]
1521| 41 - op/sep )
1521| 43 - op/sep +
1521| 2 - num 1
1521| 41 - op/sep )
1521| 59 - op/sep ;

1522| 132 - kw if
1522| 40 - op/sep (
1522| 5 - id tail #575
1522| 62 - op/sep >
1522| 2 - num 0
1522| 41 - op/sep )
1522| 123 - op/sep {
1522| 5 - id cg_o #993
1522| 40 - op/sep (
1522| 4 - str "  .space "
1522| 41 - op/sep )
1522| 59 - op/sep ;
1522| 5 - id cg_n #994
1522| 40 - op/sep (
1522| 5 - id i2s #466
1522| 40 - op/sep (
1522| 5 - id tail #575
1522| 41 - op/sep )
1522| 41 - op/sep )
1522| 59 - op/sep ;
1522| 125 - op/sep }

1523| 125 - op/sep }

1524| 133 - kw else
1524| 132 - kw if
1524| 40 - op/sep (
1524| 5 - id init #458
1524| 101 - op/sep e
1524| 5 - id Str #808
1524| 97 - op/sep a
1524| 5 - id t #94
1524| 101 - op/sep e
1524| 5 - id T_cp #742
1524| 97 - op/sep a
1524| 5 - id k #85
1524| 101 - op/sep e
1524| 5 - id K_array #367
1524| 41 - op/sep )

1525| 123 - op/sep {

1526| 130 - kw int
1526| 5 - id items #19
1526| 61 - op/sep =
1526| 5 - id dim #472
1526| 59 - op/sep ;

1527| 132 - kw if
1527| 40 - op/sep (
1527| 5 - id items #19
1527| 62 - op/sep >
1527| 5 - id se_items #271
1527| 41 - op/sep )
1527| 5 - id items #19
1527| 61 - op/sep =
1527| 5 - id se_items #271
1527| 59 - op/sep ;

1528| 130 - kw int
1528| 5 - id i #83
1528| 61 - op/sep =
1528| 2 - num 0
1528| 59 - op/sep ;

1529| 135 - kw for
1529| 40 - op/sep (
1529| 59 - op/sep ;
1529| 5 - id i #83
1529| 60 - op/sep <
1529| 5 - id items #19
1529| 59 - op/sep ;
1529| 105 - op/sep i
1529| 5 - id i #83
1529| 41 - op/sep )

1530| 5 - id cg_2n #198
1530| 40 - op/sep (
1530| 4 - str "  .long S"
1530| 44 - op/sep ,
1530| 5 - id i2s #466
1530| 40 - op/sep (
1530| 5 - id init_exprs #663
1530| 91 - op/sep [
1530| 5 - id i #83
1530| 93 - op/sep ]
1530| 41 - op/sep )
1530| 41 - op/sep )
1530| 59 - op/sep ;

1531| 132 - kw if
1531| 40 - op/sep (
1531| 5 - id i #83
1531| 60 - op/sep <
1531| 5 - id dim #472
1531| 41 - op/sep )

1532| 5 - id cg_2n #198
1532| 40 - op/sep (
1532| 4 - str "  .space "
1532| 44 - op/sep ,
1532| 5 - id i2s #466
1532| 40 - op/sep (
1532| 2 - num 4
1532| 42 - op/sep *
1532| 40 - op/sep (
1532| 5 - id dim #472
1532| 45 - op/sep -
1532| 5 - id items #19
1532| 41 - op/sep )
1532| 41 - op/sep )
1532| 41 - op/sep )
1532| 59 - op/sep ;

1533| 125 - op/sep }

1534| 133 - kw else

1535| 123 - op/sep {

1536| 5 - id cg_o #993
1536| 40 - op/sep (
1536| 4 - str "  .long "
1536| 41 - op/sep )
1536| 59 - op/sep ;

1537| 132 - kw if
1537| 40 - op/sep (
1537| 5 - id t #94
1537| 101 - op/sep e
1537| 5 - id T_cp #742
1537| 41 - op/sep )

1538| 5 - id cg_2n #198
1538| 40 - op/sep (
1538| 4 - str "S"
1538| 44 - op/sep ,
1538| 5 - id i2s #466
1538| 40 - op/sep (
1538| 40 - op/sep (
1538| 130 - kw int
1538| 41 - op/sep )
1538| 5 - id init_exprs #663
1538| 41 - op/sep )
1538| 41 - op/sep )
1538| 59 - op/sep ;

1539| 133 - kw else

1540| 5 - id cg_n #994
1540| 40 - op/sep (
1540| 5 - id i2s #466
1540| 40 - op/sep (
1540| 40 - op/sep (
1540| 130 - kw int
1540| 41 - op/sep )
1540| 5 - id init_exprs #663
1540| 41 - op/sep )
1540| 41 - op/sep )
1540| 59 - op/sep ;

1543| 125 - op/sep }

1544| 137 - kw return
1544| 5 - id n #88
1544| 59 - op/sep ;

1545| 125 - op/sep }

1547| 130 - kw int
1547| 5 - id pa_vartail #885
1547| 40 - op/sep (
1547| 41 - op/sep )

1548| 123 - op/sep {

1549| 5 - id assert #124
1549| 40 - op/sep (
1549| 5 - id sc_tkn #655
1549| 101 - op/sep e
1549| 3 - chr 61
1549| 111 - op/sep o
1549| 5 - id sc_tkn #655
1549| 101 - op/sep e
1549| 3 - chr 91
1549| 111 - op/sep o
1549| 5 - id sc_tkn #655
1549| 101 - op/sep e
1549| 3 - chr 44
1549| 111 - op/sep o
1549| 5 - id sc_tkn #655
1549| 101 - op/sep e
1549| 3 - chr 59
1549| 44 - op/sep ,
1549| 4 - str "var"
1549| 41 - op/sep )
1549| 59 - op/sep ;

1550| 5 - id t1 #635
1550| 40 - op/sep (
1550| 4 - str "pa_vartail"
1550| 41 - op/sep )
1550| 59 - op/sep ;

1551| 130 - kw int
1551| 5 - id t #94
1551| 61 - op/sep =
1551| 5 - id se_type #260
1551| 43 - op/sep +
1551| 5 - id se_stars #955
1551| 59 - op/sep ;

1552| 130 - kw int
1552| 5 - id id #969
1552| 61 - op/sep =
1552| 5 - id sc_num #403
1552| 59 - op/sep ;

1553| 130 - kw int
1553| 5 - id k #85
1553| 61 - op/sep =
1553| 5 - id st_find #734
1553| 40 - op/sep (
1553| 5 - id id #969
1553| 41 - op/sep )
1553| 59 - op/sep ;

1554| 132 - kw if
1554| 40 - op/sep (
1554| 5 - id se_level #920
1554| 62 - op/sep >
1554| 2 - num 0
1554| 97 - op/sep a
1554| 5 - id k #85
1554| 103 - op/sep g
1554| 5 - id st_local #865
1554| 111 - op/sep o
1554| 5 - id se_level #920
1554| 101 - op/sep e
1554| 2 - num 0
1554| 97 - op/sep a
1554| 5 - id k #85
1554| 103 - op/sep g
1554| 2 - num 0
1554| 41 - op/sep )

1555| 5 - id p2n #683
1555| 40 - op/sep (
1555| 4 - str "duplicate var "
1555| 44 - op/sep ,
1555| 5 - id id_table #669
1555| 91 - op/sep [
1555| 5 - id id #969
1555| 93 - op/sep ]
1555| 41 - op/sep )
1555| 59 - op/sep ;

1556| 132 - kw if
1556| 40 - op/sep (
1556| 5 - id se_level #920
1556| 62 - op/sep >
1556| 2 - num 0
1556| 41 - op/sep )
1556| 105 - op/sep i
1556| 5 - id se_lvars #956
1556| 59 - op/sep ;
1556| 133 - kw else
1556| 105 - op/sep i
1556| 5 - id se_gvars #929
1556| 59 - op/sep ;

1557| 132 - kw if
1557| 40 - op/sep (
1557| 5 - id sc_tkn #655
1557| 101 - op/sep e
1557| 3 - chr 61
1557| 41 - op/sep )

1558| 123 - op/sep {

1559| 5 - id sc_next #247
1559| 40 - op/sep (
1559| 41 - op/sep )
1559| 59 - op/sep ;

1560| 132 - kw if
1560| 40 - op/sep (
1560| 5 - id se_level #920
1560| 101 - op/sep e
1560| 2 - num 0
1560| 41 - op/sep )

1561| 123 - op/sep {

1562| 132 - kw if
1562| 40 - op/sep (
1562| 5 - id sc_tkn #655
1562| 101 - op/sep e
1562| 5 - id Str #808
1562| 41 - op/sep )

1563| 123 - op/sep {

1564| 5 - id se_add_var #661
1564| 40 - op/sep (
1564| 5 - id id #969
1564| 44 - op/sep ,
1564| 5 - id t #94
1564| 44 - op/sep ,
1564| 45 - op/sep -
1564| 2 - num 1
1564| 44 - op/sep ,
1564| 5 - id Str #808
1564| 44 - op/sep ,
1564| 40 - op/sep (
1564| 130 - kw int
1564| 42 - op/sep *
1564| 41 - op/sep )
1564| 5 - id sc_num #403
1564| 41 - op/sep )
1564| 59 - op/sep ;

1565| 5 - id sc_next #247
1565| 40 - op/sep (
1565| 41 - op/sep )
1565| 59 - op/sep ;

1566| 125 - op/sep }

1567| 133 - kw else

1568| 123 - op/sep {

1569| 132 - kw if
1569| 40 - op/sep (
1569| 33 - op/sep !
1569| 5 - id pa_integer #167
1569| 40 - op/sep (
1569| 41 - op/sep )
1569| 41 - op/sep )
1569| 137 - kw return
1569| 5 - id t_ #681
1569| 40 - op/sep (
1569| 5 - id F #48
1569| 41 - op/sep )
1569| 59 - op/sep ;

1570| 5 - id se_add_var #661
1570| 40 - op/sep (
1570| 5 - id id #969
1570| 44 - op/sep ,
1570| 5 - id t #94
1570| 44 - op/sep ,
1570| 45 - op/sep -
1570| 2 - num 1
1570| 44 - op/sep ,
1570| 5 - id Num #278
1570| 44 - op/sep ,
1570| 40 - op/sep (
1570| 130 - kw int
1570| 42 - op/sep *
1570| 41 - op/sep )
1570| 5 - id se_value #679
1570| 41 - op/sep )
1570| 59 - op/sep ;

1571| 125 - op/sep }

1572| 125 - op/sep }

1573| 133 - kw else

1574| 123 - op/sep {

1575| 130 - kw int
1575| 42 - op/sep *
1575| 5 - id e #79
1575| 61 - op/sep =
1575| 5 - id px_expr #616
1575| 40 - op/sep (
1575| 2 - num 0
1575| 41 - op/sep )
1575| 59 - op/sep ;

1576| 132 - kw if
1576| 40 - op/sep (
1576| 33 - op/sep !
1576| 5 - id e #79
1576| 41 - op/sep )
1576| 137 - kw return
1576| 5 - id t_ #681
1576| 40 - op/sep (
1576| 5 - id F #48
1576| 41 - op/sep )
1576| 59 - op/sep ;

1577| 132 - kw if
1577| 40 - op/sep (
1577| 5 - id ET_TRACE #18
1577| 97 - op/sep a
1577| 5 - id e #79
1577| 41 - op/sep )
1577| 123 - op/sep {
1577| 5 - id p1 #371
1577| 40 - op/sep (
1577| 4 - str "E:var "
1577| 41 - op/sep )
1577| 59 - op/sep ;
1577| 5 - id et_print #395
1577| 40 - op/sep (
1577| 5 - id e #79
1577| 41 - op/sep )
1577| 59 - op/sep ;
1577| 5 - id p0n #551
1577| 40 - op/sep (
1577| 41 - op/sep )
1577| 59 - op/sep ;
1577| 125 - op/sep }

1578| 130 - kw int
1578| 5 - id idx #744
1578| 61 - op/sep =
1578| 5 - id se_add_var #661
1578| 40 - op/sep (
1578| 5 - id id #969
1578| 44 - op/sep ,
1578| 5 - id t #94
1578| 44 - op/sep ,
1578| 45 - op/sep -
1578| 2 - num 1
1578| 44 - op/sep ,
1578| 2 - num 0
1578| 44 - op/sep ,
1578| 2 - num 0
1578| 41 - op/sep )
1578| 59 - op/sep ;

1579| 5 - id cg_expr #960
1579| 40 - op/sep (
1579| 5 - id e #79
1579| 41 - op/sep )
1579| 59 - op/sep ;

1580| 5 - id cg_o #993
1580| 40 - op/sep (
1580| 4 - str "  mov DWORD PTR [ebp"
1580| 41 - op/sep )
1580| 59 - op/sep ;
1580| 5 - id cg_o #993
1580| 40 - op/sep (
1580| 5 - id i2s #466
1580| 40 - op/sep (
1580| 5 - id st_value #595
1580| 91 - op/sep [
1580| 5 - id idx #744
1580| 93 - op/sep ]
1580| 41 - op/sep )
1580| 41 - op/sep )
1580| 59 - op/sep ;
1580| 5 - id cg_o #993
1580| 40 - op/sep (
1580| 4 - str "],eax # "
1580| 41 - op/sep )
1580| 59 - op/sep ;

1581| 5 - id cg_n #994
1581| 40 - op/sep (
1581| 5 - id id_table #669
1581| 91 - op/sep [
1581| 5 - id id #969
1581| 93 - op/sep ]
1581| 41 - op/sep )
1581| 59 - op/sep ;

1582| 125 - op/sep }

1583| 137 - kw return
1583| 5 - id t_ #681
1583| 40 - op/sep (
1583| 5 - id T #62
1583| 41 - op/sep )
1583| 59 - op/sep ;

1584| 125 - op/sep }

1585| 132 - kw if
1585| 40 - op/sep (
1585| 5 - id sc_tkn #655
1585| 110 - op/sep n
1585| 3 - chr 91
1585| 41 - op/sep )

1586| 123 - op/sep {

1587| 5 - id se_add_var #661
1587| 40 - op/sep (
1587| 5 - id id #969
1587| 44 - op/sep ,
1587| 5 - id t #94
1587| 44 - op/sep ,
1587| 45 - op/sep -
1587| 2 - num 1
1587| 44 - op/sep ,
1587| 2 - num 0
1587| 44 - op/sep ,
1587| 2 - num 0
1587| 41 - op/sep )
1587| 59 - op/sep ;

1588| 137 - kw return
1588| 5 - id t_ #681
1588| 40 - op/sep (
1588| 5 - id T #62
1588| 41 - op/sep )
1588| 59 - op/sep ;

1589| 125 - op/sep }

1590| 5 - id sc_next #247
1590| 40 - op/sep (
1590| 41 - op/sep )
1590| 59 - op/sep ;

1592| 132 - kw if
1592| 40 - op/sep (
1592| 5 - id sc_tkn #655
1592| 101 - op/sep e
1592| 3 - chr 93
1592| 41 - op/sep )

1593| 123 - op/sep {

1594| 5 - id sc_next #247
1594| 40 - op/sep (
1594| 41 - op/sep )
1594| 59 - op/sep ;

1595| 132 - kw if
1595| 40 - op/sep (
1595| 5 - id sc_tkn #655
1595| 110 - op/sep n
1595| 3 - chr 61
1595| 41 - op/sep )
1595| 137 - kw return
1595| 5 - id t_ #681
1595| 40 - op/sep (
1595| 5 - id F #48
1595| 41 - op/sep )
1595| 59 - op/sep ;

1596| 5 - id sc_next #247
1596| 40 - op/sep (
1596| 41 - op/sep )
1596| 59 - op/sep ;

1597| 132 - kw if
1597| 40 - op/sep (
1597| 33 - op/sep !
1597| 5 - id pa_arrayinit #978
1597| 40 - op/sep (
1597| 41 - op/sep )
1597| 41 - op/sep )
1597| 137 - kw return
1597| 5 - id t_ #681
1597| 40 - op/sep (
1597| 5 - id F #48
1597| 41 - op/sep )
1597| 59 - op/sep ;

1598| 5 - id se_add_var #661
1598| 40 - op/sep (
1598| 5 - id id #969
1598| 44 - op/sep ,
1598| 5 - id t #94
1598| 44 - op/sep ,
1598| 5 - id se_items #271
1598| 44 - op/sep ,
1598| 5 - id Str #808
1598| 44 - op/sep ,
1598| 5 - id se_array_items #1005
1598| 41 - op/sep )
1598| 59 - op/sep ;

1599| 5 - id free #656
1599| 40 - op/sep (
1599| 40 - op/sep (
1599| 129 - kw char
1599| 42 - op/sep *
1599| 41 - op/sep )
1599| 5 - id se_array_items #1005
1599| 41 - op/sep )
1599| 59 - op/sep ;

1600| 137 - kw return
1600| 5 - id t_ #681
1600| 40 - op/sep (
1600| 5 - id T #62
1600| 41 - op/sep )
1600| 59 - op/sep ;

1601| 125 - op/sep }

1602| 133 - kw else

1603| 123 - op/sep {

1604| 132 - kw if
1604| 40 - op/sep (
1604| 33 - op/sep !
1604| 5 - id pa_integer #167
1604| 40 - op/sep (
1604| 41 - op/sep )
1604| 41 - op/sep )
1604| 137 - kw return
1604| 5 - id t_ #681
1604| 40 - op/sep (
1604| 5 - id F #48
1604| 41 - op/sep )
1604| 59 - op/sep ;

1605| 132 - kw if
1605| 40 - op/sep (
1605| 5 - id sc_tkn #655
1605| 110 - op/sep n
1605| 3 - chr 93
1605| 41 - op/sep )
1605| 137 - kw return
1605| 5 - id t_ #681
1605| 40 - op/sep (
1605| 5 - id F #48
1605| 41 - op/sep )
1605| 59 - op/sep ;

1606| 130 - kw int
1606| 5 - id dim #472
1606| 61 - op/sep =
1606| 5 - id se_value #679
1606| 59 - op/sep ;

1607| 5 - id sc_next #247
1607| 40 - op/sep (
1607| 41 - op/sep )
1607| 59 - op/sep ;

1608| 132 - kw if
1608| 40 - op/sep (
1608| 5 - id sc_tkn #655
1608| 110 - op/sep n
1608| 3 - chr 61
1608| 41 - op/sep )

1609| 123 - op/sep {

1610| 5 - id se_add_var #661
1610| 40 - op/sep (
1610| 5 - id id #969
1610| 44 - op/sep ,
1610| 5 - id t #94
1610| 44 - op/sep ,
1610| 5 - id dim #472
1610| 44 - op/sep ,
1610| 2 - num 0
1610| 44 - op/sep ,
1610| 2 - num 0
1610| 41 - op/sep )
1610| 59 - op/sep ;

1611| 137 - kw return
1611| 5 - id t_ #681
1611| 40 - op/sep (
1611| 5 - id T #62
1611| 41 - op/sep )
1611| 59 - op/sep ;

1612| 125 - op/sep }

1613| 5 - id sc_next #247
1613| 40 - op/sep (
1613| 41 - op/sep )
1613| 59 - op/sep ;

1614| 132 - kw if
1614| 40 - op/sep (
1614| 33 - op/sep !
1614| 5 - id pa_arrayinit #978
1614| 40 - op/sep (
1614| 41 - op/sep )
1614| 41 - op/sep )
1614| 137 - kw return
1614| 5 - id t_ #681
1614| 40 - op/sep (
1614| 5 - id F #48
1614| 41 - op/sep )
1614| 59 - op/sep ;

1615| 5 - id se_add_var #661
1615| 40 - op/sep (
1615| 5 - id id #969
1615| 44 - op/sep ,
1615| 5 - id t #94
1615| 44 - op/sep ,
1615| 5 - id dim #472
1615| 44 - op/sep ,
1615| 5 - id Str #808
1615| 44 - op/sep ,
1615| 5 - id se_array_items #1005
1615| 41 - op/sep )
1615| 59 - op/sep ;

1616| 5 - id free #656
1616| 40 - op/sep (
1616| 40 - op/sep (
1616| 129 - kw char
1616| 42 - op/sep *
1616| 41 - op/sep )
1616| 5 - id se_array_items #1005
1616| 41 - op/sep )
1616| 59 - op/sep ;

1617| 137 - kw return
1617| 5 - id t_ #681
1617| 40 - op/sep (
1617| 5 - id T #62
1617| 41 - op/sep )
1617| 59 - op/sep ;

1618| 125 - op/sep }

1619| 125 - op/sep }

1621| 130 - kw int
1621| 5 - id pa_morevars #802
1621| 40 - op/sep (
1621| 41 - op/sep )

1622| 123 - op/sep {

1623| 5 - id t1 #635
1623| 40 - op/sep (
1623| 4 - str "pa_morevars"
1623| 41 - op/sep )
1623| 59 - op/sep ;

1625| 132 - kw if
1625| 40 - op/sep (
1625| 33 - op/sep !
1625| 5 - id pa_vartail #885
1625| 40 - op/sep (
1625| 41 - op/sep )
1625| 41 - op/sep )
1625| 137 - kw return
1625| 5 - id t_ #681
1625| 40 - op/sep (
1625| 5 - id F #48
1625| 41 - op/sep )
1625| 59 - op/sep ;

1626| 134 - kw while
1626| 40 - op/sep (
1626| 5 - id sc_tkn #655
1626| 101 - op/sep e
1626| 3 - chr 44
1626| 41 - op/sep )

1627| 123 - op/sep {

1628| 5 - id sc_next #247
1628| 40 - op/sep (
1628| 41 - op/sep )
1628| 59 - op/sep ;
1628| 5 - id pa_stars #59
1628| 40 - op/sep (
1628| 41 - op/sep )
1628| 59 - op/sep ;

1629| 130 - kw int
1629| 5 - id t #94
1629| 61 - op/sep =
1629| 5 - id se_type #260
1629| 43 - op/sep +
1629| 5 - id se_stars #955
1629| 59 - op/sep ;

1630| 132 - kw if
1630| 40 - op/sep (
1630| 5 - id sc_tkn #655
1630| 110 - op/sep n
1630| 5 - id Id #875
1630| 41 - op/sep )
1630| 137 - kw return
1630| 5 - id t_ #681
1630| 40 - op/sep (
1630| 5 - id F #48
1630| 41 - op/sep )
1630| 59 - op/sep ;

1631| 5 - id sc_next #247
1631| 40 - op/sep (
1631| 41 - op/sep )
1631| 59 - op/sep ;

1632| 132 - kw if
1632| 40 - op/sep (
1632| 33 - op/sep !
1632| 5 - id pa_vartail #885
1632| 40 - op/sep (
1632| 41 - op/sep )
1632| 41 - op/sep )
1632| 137 - kw return
1632| 5 - id t_ #681
1632| 40 - op/sep (
1632| 5 - id F #48
1632| 41 - op/sep )
1632| 59 - op/sep ;

1633| 125 - op/sep }

1634| 132 - kw if
1634| 40 - op/sep (
1634| 5 - id sc_tkn #655
1634| 110 - op/sep n
1634| 3 - chr 59
1634| 41 - op/sep )
1634| 137 - kw return
1634| 5 - id t_ #681
1634| 40 - op/sep (
1634| 5 - id F #48
1634| 41 - op/sep )
1634| 59 - op/sep ;

1635| 5 - id sc_next #247
1635| 40 - op/sep (
1635| 41 - op/sep )
1635| 59 - op/sep ;

1636| 137 - kw return
1636| 5 - id t_ #681
1636| 40 - op/sep (
1636| 5 - id T #62
1636| 41 - op/sep )
1636| 59 - op/sep ;

1637| 125 - op/sep }

1639| 130 - kw int
1639| 5 - id pa_vardef_or_expr #553
1639| 40 - op/sep (
1639| 41 - op/sep )

1640| 123 - op/sep {

1647| 5 - id t1 #635
1647| 40 - op/sep (
1647| 4 - str "pa_vardef_or_expr"
1647| 41 - op/sep )
1647| 59 - op/sep ;

1648| 132 - kw if
1648| 40 - op/sep (
1648| 5 - id sc_tkn #655
1648| 110 - op/sep n
1648| 5 - id Kw #17
1648| 43 - op/sep +
1648| 5 - id Int #241
1648| 97 - op/sep a
1648| 5 - id sc_tkn #655
1648| 110 - op/sep n
1648| 5 - id Kw #17
1648| 43 - op/sep +
1648| 5 - id Char #193
1648| 41 - op/sep )

1649| 123 - op/sep {

1650| 130 - kw int
1650| 42 - op/sep *
1650| 5 - id e #79
1650| 61 - op/sep =
1650| 5 - id px_expr #616
1650| 40 - op/sep (
1650| 2 - num 0
1650| 41 - op/sep )
1650| 59 - op/sep ;

1651| 132 - kw if
1651| 40 - op/sep (
1651| 33 - op/sep !
1651| 5 - id e #79
1651| 111 - op/sep o
1651| 5 - id sc_tkn #655
1651| 110 - op/sep n
1651| 3 - chr 59
1651| 41 - op/sep )
1651| 137 - kw return
1651| 5 - id t_ #681
1651| 40 - op/sep (
1651| 5 - id F #48
1651| 41 - op/sep )
1651| 59 - op/sep ;

1652| 132 - kw if
1652| 40 - op/sep (
1652| 5 - id ET_TRACE #18
1652| 97 - op/sep a
1652| 5 - id e #79
1652| 41 - op/sep )
1652| 123 - op/sep {
1652| 5 - id p1 #371
1652| 40 - op/sep (
1652| 4 - str "E:exp "
1652| 41 - op/sep )
1652| 59 - op/sep ;
1652| 5 - id et_print #395
1652| 40 - op/sep (
1652| 5 - id e #79
1652| 41 - op/sep )
1652| 59 - op/sep ;
1652| 5 - id p0n #551
1652| 40 - op/sep (
1652| 41 - op/sep )
1652| 59 - op/sep ;
1652| 125 - op/sep }

1653| 5 - id sc_next #247
1653| 40 - op/sep (
1653| 41 - op/sep )
1653| 59 - op/sep ;

1654| 5 - id cg_expr #960
1654| 40 - op/sep (
1654| 40 - op/sep (
1654| 130 - kw int
1654| 42 - op/sep *
1654| 41 - op/sep )
1654| 5 - id e #79
1654| 41 - op/sep )
1654| 59 - op/sep ;

1655| 137 - kw return
1655| 5 - id t_ #681
1655| 40 - op/sep (
1655| 5 - id T #62
1655| 41 - op/sep )
1655| 59 - op/sep ;

1656| 125 - op/sep }

1657| 132 - kw if
1657| 40 - op/sep (
1657| 33 - op/sep !
1657| 5 - id pa_type #267
1657| 40 - op/sep (
1657| 41 - op/sep )
1657| 41 - op/sep )
1657| 137 - kw return
1657| 5 - id t_ #681
1657| 40 - op/sep (
1657| 5 - id F #48
1657| 41 - op/sep )
1657| 59 - op/sep ;

1658| 5 - id pa_stars #59
1658| 40 - op/sep (
1658| 41 - op/sep )
1658| 59 - op/sep ;

1659| 132 - kw if
1659| 40 - op/sep (
1659| 5 - id sc_tkn #655
1659| 110 - op/sep n
1659| 5 - id Id #875
1659| 41 - op/sep )
1659| 137 - kw return
1659| 5 - id t_ #681
1659| 40 - op/sep (
1659| 5 - id F #48
1659| 41 - op/sep )
1659| 59 - op/sep ;

1660| 5 - id sc_next #247
1660| 40 - op/sep (
1660| 41 - op/sep )
1660| 59 - op/sep ;

1661| 137 - kw return
1661| 5 - id t_ #681
1661| 40 - op/sep (
1661| 5 - id pa_morevars #802
1661| 40 - op/sep (
1661| 41 - op/sep )
1661| 41 - op/sep )
1661| 59 - op/sep ;

1662| 125 - op/sep }

1664| 130 - kw int
1664| 5 - id pa_argdef #26
1664| 40 - op/sep (
1664| 41 - op/sep )

1665| 123 - op/sep {

1666| 5 - id t1 #635
1666| 40 - op/sep (
1666| 4 - str "pa_argdef"
1666| 41 - op/sep )
1666| 59 - op/sep ;

1667| 132 - kw if
1667| 40 - op/sep (
1667| 33 - op/sep !
1667| 5 - id pa_type #267
1667| 40 - op/sep (
1667| 41 - op/sep )
1667| 41 - op/sep )
1667| 137 - kw return
1667| 5 - id t_ #681
1667| 40 - op/sep (
1667| 5 - id F #48
1667| 41 - op/sep )
1667| 59 - op/sep ;

1668| 5 - id pa_stars #59
1668| 40 - op/sep (
1668| 41 - op/sep )
1668| 59 - op/sep ;

1669| 130 - kw int
1669| 5 - id t #94
1669| 61 - op/sep =
1669| 5 - id se_type #260
1669| 43 - op/sep +
1669| 5 - id se_stars #955
1669| 59 - op/sep ;

1670| 132 - kw if
1670| 40 - op/sep (
1670| 5 - id sc_tkn #655
1670| 110 - op/sep n
1670| 5 - id Id #875
1670| 41 - op/sep )
1670| 137 - kw return
1670| 5 - id t_ #681
1670| 40 - op/sep (
1670| 5 - id F #48
1670| 41 - op/sep )
1670| 59 - op/sep ;

1671| 105 - op/sep i
1671| 5 - id se_arg_count #249
1671| 59 - op/sep ;

1672| 5 - id st_add #645
1672| 40 - op/sep (
1672| 5 - id sc_num #403
1672| 44 - op/sep ,
1672| 5 - id t #94
1672| 44 - op/sep ,
1672| 5 - id K_arg #213
1672| 44 - op/sep ,
1672| 5 - id se_arg_count #249
1672| 42 - op/sep *
1672| 5 - id INTSZ #949
1672| 43 - op/sep +
1672| 5 - id INTSZ #949
1672| 44 - op/sep ,
1672| 2 - num 0
1672| 41 - op/sep )
1672| 59 - op/sep ;

1673| 5 - id sc_next #247
1673| 40 - op/sep (
1673| 41 - op/sep )
1673| 59 - op/sep ;

1674| 137 - kw return
1674| 5 - id t_ #681
1674| 40 - op/sep (
1674| 5 - id T #62
1674| 41 - op/sep )
1674| 59 - op/sep ;

1675| 125 - op/sep }

1677| 130 - kw int
1677| 5 - id pa_args #776
1677| 40 - op/sep (
1677| 41 - op/sep )

1678| 123 - op/sep {

1679| 5 - id t1 #635
1679| 40 - op/sep (
1679| 4 - str "pa_args"
1679| 41 - op/sep )
1679| 59 - op/sep ;

1680| 5 - id se_arg_count #249
1680| 61 - op/sep =
1680| 2 - num 0
1680| 59 - op/sep ;

1681| 132 - kw if
1681| 40 - op/sep (
1681| 33 - op/sep !
1681| 5 - id pa_argdef #26
1681| 40 - op/sep (
1681| 41 - op/sep )
1681| 41 - op/sep )
1681| 137 - kw return
1681| 5 - id t_ #681
1681| 40 - op/sep (
1681| 5 - id T #62
1681| 41 - op/sep )
1681| 59 - op/sep ;

1682| 134 - kw while
1682| 40 - op/sep (
1682| 5 - id sc_tkn #655
1682| 101 - op/sep e
1682| 3 - chr 44
1682| 41 - op/sep )

1683| 123 - op/sep {

1684| 5 - id sc_next #247
1684| 40 - op/sep (
1684| 41 - op/sep )
1684| 59 - op/sep ;

1685| 132 - kw if
1685| 40 - op/sep (
1685| 33 - op/sep !
1685| 5 - id pa_argdef #26
1685| 40 - op/sep (
1685| 41 - op/sep )
1685| 41 - op/sep )
1685| 137 - kw return
1685| 5 - id t_ #681
1685| 40 - op/sep (
1685| 5 - id F #48
1685| 41 - op/sep )
1685| 59 - op/sep ;

1686| 125 - op/sep }

1687| 137 - kw return
1687| 5 - id t_ #681
1687| 40 - op/sep (
1687| 5 - id T #62
1687| 41 - op/sep )
1687| 59 - op/sep ;

1688| 125 - op/sep }

1690| 130 - kw int
1690| 5 - id pa_stmt #574
1690| 40 - op/sep (
1690| 41 - op/sep )

1691| 123 - op/sep {

1692| 5 - id t1 #635
1692| 40 - op/sep (
1692| 4 - str "pa_stmt"
1692| 41 - op/sep )
1692| 59 - op/sep ;

1693| 5 - id assert #124
1693| 40 - op/sep (
1693| 5 - id se_level #920
1693| 62 - op/sep >
1693| 2 - num 0
1693| 44 - op/sep ,
1693| 4 - str "stmt in fns only"
1693| 41 - op/sep )
1693| 59 - op/sep ;

1694| 5 - id se_last_stmt_ret #0
1694| 61 - op/sep =
1694| 5 - id F #48
1694| 59 - op/sep ;

1695| 132 - kw if
1695| 40 - op/sep (
1695| 5 - id sc_tkn #655
1695| 101 - op/sep e
1695| 3 - chr 59
1695| 41 - op/sep )
1695| 123 - op/sep {
1695| 5 - id sc_next #247
1695| 40 - op/sep (
1695| 41 - op/sep )
1695| 59 - op/sep ;
1695| 137 - kw return
1695| 5 - id t_ #681
1695| 40 - op/sep (
1695| 5 - id T #62
1695| 41 - op/sep )
1695| 59 - op/sep ;
1695| 125 - op/sep }

1696| 132 - kw if
1696| 40 - op/sep (
1696| 5 - id sc_tkn #655
1696| 101 - op/sep e
1696| 3 - chr 123
1696| 41 - op/sep )

1697| 123 - op/sep {

1698| 5 - id sc_next #247
1698| 40 - op/sep (
1698| 41 - op/sep )
1698| 59 - op/sep ;

1699| 105 - op/sep i
1699| 5 - id se_level #920
1699| 59 - op/sep ;

1700| 130 - kw int
1700| 5 - id block_local_start #268
1700| 61 - op/sep =
1700| 5 - id st_count #730
1700| 59 - op/sep ;

1701| 130 - kw int
1701| 5 - id block_local_offset #355
1701| 61 - op/sep =
1701| 5 - id se_local_offset #845
1701| 59 - op/sep ;

1702| 134 - kw while
1702| 40 - op/sep (
1702| 5 - id sc_tkn #655
1702| 110 - op/sep n
1702| 3 - chr 125
1702| 41 - op/sep )
1702| 132 - kw if
1702| 40 - op/sep (
1702| 33 - op/sep !
1702| 5 - id pa_stmt #574
1702| 40 - op/sep (
1702| 41 - op/sep )
1702| 41 - op/sep )
1702| 137 - kw return
1702| 5 - id t_ #681
1702| 40 - op/sep (
1702| 5 - id F #48
1702| 41 - op/sep )
1702| 59 - op/sep ;

1703| 5 - id sc_next #247
1703| 40 - op/sep (
1703| 41 - op/sep )
1703| 59 - op/sep ;

1704| 132 - kw if
1704| 40 - op/sep (
1704| 5 - id se_local_offset #845
1704| 60 - op/sep <
1704| 5 - id se_max_l_offset #50
1704| 41 - op/sep )
1704| 5 - id se_max_l_offset #50
1704| 61 - op/sep =
1704| 5 - id se_local_offset #845
1704| 59 - op/sep ;

1705| 132 - kw if
1705| 40 - op/sep (
1705| 5 - id st_count #730
1705| 62 - op/sep >
1705| 5 - id block_local_start #268
1705| 41 - op/sep )

1706| 123 - op/sep {

1707| 132 - kw if
1707| 40 - op/sep (
1707| 5 - id ST_DUMP #185
1707| 41 - op/sep )
1707| 123 - op/sep {
1707| 5 - id p1n #619
1707| 40 - op/sep (
1707| 4 - str "block"
1707| 41 - op/sep )
1707| 59 - op/sep ;
1707| 5 - id st_dump #624
1707| 40 - op/sep (
1707| 5 - id block_local_start #268
1707| 44 - op/sep ,
1707| 45 - op/sep -
1707| 2 - num 1
1707| 41 - op/sep )
1707| 59 - op/sep ;
1707| 125 - op/sep }

1708| 5 - id st_count #730
1708| 61 - op/sep =
1708| 5 - id block_local_start #268
1708| 59 - op/sep ;

1709| 5 - id se_local_offset #845
1709| 61 - op/sep =
1709| 5 - id block_local_offset #355
1709| 59 - op/sep ;

1710| 125 - op/sep }

1711| 100 - op/sep d
1711| 5 - id se_level #920
1711| 59 - op/sep ;

1712| 137 - kw return
1712| 5 - id t_ #681
1712| 40 - op/sep (
1712| 5 - id T #62
1712| 41 - op/sep )
1712| 59 - op/sep ;

1713| 125 - op/sep }

1714| 132 - kw if
1714| 40 - op/sep (
1714| 5 - id sc_tkn #655
1714| 101 - op/sep e
1714| 5 - id Kw #17
1714| 43 - op/sep +
1714| 5 - id Break #375
1714| 41 - op/sep )

1715| 123 - op/sep {

1716| 130 - kw int
1716| 5 - id loop_label #454
1716| 61 - op/sep =
1716| 5 - id cg_current_loop_label #737
1716| 40 - op/sep (
1716| 41 - op/sep )
1716| 59 - op/sep ;

1717| 132 - kw if
1717| 40 - op/sep (
1717| 5 - id loop_label #454
1717| 60 - op/sep <
1717| 2 - num 0
1717| 41 - op/sep )
1717| 5 - id err1 #522
1717| 40 - op/sep (
1717| 4 - str "break outside loop"
1717| 41 - op/sep )
1717| 59 - op/sep ;

1718| 5 - id sc_next #247
1718| 40 - op/sep (
1718| 41 - op/sep )
1718| 59 - op/sep ;
1718| 132 - kw if
1718| 40 - op/sep (
1718| 5 - id sc_tkn #655
1718| 110 - op/sep n
1718| 3 - chr 59
1718| 41 - op/sep )
1718| 137 - kw return
1718| 5 - id t_ #681
1718| 40 - op/sep (
1718| 5 - id F #48
1718| 41 - op/sep )
1718| 59 - op/sep ;
1718| 5 - id sc_next #247
1718| 40 - op/sep (
1718| 41 - op/sep )
1718| 59 - op/sep ;

1719| 5 - id cg_o #993
1719| 40 - op/sep (
1719| 4 - str "  jmp E"
1719| 41 - op/sep )
1719| 59 - op/sep ;
1719| 5 - id cg_n #994
1719| 40 - op/sep (
1719| 5 - id i2s #466
1719| 40 - op/sep (
1719| 5 - id loop_label #454
1719| 41 - op/sep )
1719| 41 - op/sep )
1719| 59 - op/sep ;

1720| 137 - kw return
1720| 5 - id t_ #681
1720| 40 - op/sep (
1720| 5 - id T #62
1720| 41 - op/sep )
1720| 59 - op/sep ;

1721| 125 - op/sep }

1722| 132 - kw if
1722| 40 - op/sep (
1722| 5 - id sc_tkn #655
1722| 101 - op/sep e
1722| 5 - id Kw #17
1722| 43 - op/sep +
1722| 5 - id Return #684
1722| 41 - op/sep )

1723| 123 - op/sep {

1724| 5 - id se_last_stmt_ret #0
1724| 61 - op/sep =
1724| 5 - id T #62
1724| 59 - op/sep ;

1725| 5 - id sc_next #247
1725| 40 - op/sep (
1725| 41 - op/sep )
1725| 59 - op/sep ;

1726| 132 - kw if
1726| 40 - op/sep (
1726| 5 - id sc_tkn #655
1726| 101 - op/sep e
1726| 3 - chr 59
1726| 41 - op/sep )

1727| 123 - op/sep {

1728| 5 - id cg_o #993
1728| 40 - op/sep (
1728| 4 - str "  jmp R"
1728| 41 - op/sep )
1728| 59 - op/sep ;
1728| 5 - id cg_n #994
1728| 40 - op/sep (
1728| 5 - id i2s #466
1728| 40 - op/sep (
1728| 5 - id cg_fn_label #111
1728| 41 - op/sep )
1728| 41 - op/sep )
1728| 59 - op/sep ;

1729| 5 - id sc_next #247
1729| 40 - op/sep (
1729| 41 - op/sep )
1729| 59 - op/sep ;
1729| 137 - kw return
1729| 5 - id t_ #681
1729| 40 - op/sep (
1729| 5 - id T #62
1729| 41 - op/sep )
1729| 59 - op/sep ;

1730| 125 - op/sep }

1731| 130 - kw int
1731| 42 - op/sep *
1731| 5 - id e #79
1731| 61 - op/sep =
1731| 5 - id px_expr #616
1731| 40 - op/sep (
1731| 2 - num 0
1731| 41 - op/sep )
1731| 59 - op/sep ;

1732| 132 - kw if
1732| 40 - op/sep (
1732| 5 - id ET_TRACE #18
1732| 97 - op/sep a
1732| 5 - id e #79
1732| 41 - op/sep )
1732| 123 - op/sep {
1732| 5 - id p1 #371
1732| 40 - op/sep (
1732| 4 - str "E:ret "
1732| 41 - op/sep )
1732| 59 - op/sep ;
1732| 5 - id et_print #395
1732| 40 - op/sep (
1732| 5 - id e #79
1732| 41 - op/sep )
1732| 59 - op/sep ;
1732| 5 - id p0n #551
1732| 40 - op/sep (
1732| 41 - op/sep )
1732| 59 - op/sep ;
1732| 125 - op/sep }

1733| 132 - kw if
1733| 40 - op/sep (
1733| 33 - op/sep !
1733| 5 - id e #79
1733| 111 - op/sep o
1733| 5 - id sc_tkn #655
1733| 110 - op/sep n
1733| 3 - chr 59
1733| 41 - op/sep )
1733| 137 - kw return
1733| 5 - id t_ #681
1733| 40 - op/sep (
1733| 5 - id F #48
1733| 41 - op/sep )
1733| 59 - op/sep ;

1734| 132 - kw if
1734| 40 - op/sep (
1734| 5 - id e #79
1734| 41 - op/sep )
1734| 5 - id cg_expr #960
1734| 40 - op/sep (
1734| 5 - id e #79
1734| 41 - op/sep )
1734| 59 - op/sep ;

1735| 5 - id cg_o #993
1735| 40 - op/sep (
1735| 4 - str "  jmp R"
1735| 41 - op/sep )
1735| 59 - op/sep ;
1735| 5 - id cg_n #994
1735| 40 - op/sep (
1735| 5 - id i2s #466
1735| 40 - op/sep (
1735| 5 - id cg_fn_label #111
1735| 41 - op/sep )
1735| 41 - op/sep )
1735| 59 - op/sep ;

1736| 5 - id sc_next #247
1736| 40 - op/sep (
1736| 41 - op/sep )
1736| 59 - op/sep ;
1736| 137 - kw return
1736| 5 - id t_ #681
1736| 40 - op/sep (
1736| 5 - id T #62
1736| 41 - op/sep )
1736| 59 - op/sep ;

1737| 125 - op/sep }

1738| 132 - kw if
1738| 40 - op/sep (
1738| 5 - id sc_tkn #655
1738| 101 - op/sep e
1738| 5 - id Kw #17
1738| 43 - op/sep +
1738| 5 - id While #633
1738| 41 - op/sep )

1739| 123 - op/sep {

1740| 130 - kw int
1740| 42 - op/sep *
1740| 5 - id c #77
1740| 59 - op/sep ;

1741| 130 - kw int
1741| 5 - id loop_label #454
1741| 61 - op/sep =
1741| 5 - id cg_new_loop_label #177
1741| 40 - op/sep (
1741| 41 - op/sep )
1741| 59 - op/sep ;

1742| 5 - id sc_next #247
1742| 40 - op/sep (
1742| 41 - op/sep )
1742| 59 - op/sep ;
1742| 132 - kw if
1742| 40 - op/sep (
1742| 5 - id sc_tkn #655
1742| 110 - op/sep n
1742| 3 - chr 40
1742| 41 - op/sep )
1742| 137 - kw return
1742| 5 - id t_ #681
1742| 40 - op/sep (
1742| 5 - id F #48
1742| 41 - op/sep )
1742| 59 - op/sep ;

1743| 5 - id cg_o #993
1743| 40 - op/sep (
1743| 4 - str "L"
1743| 41 - op/sep )
1743| 59 - op/sep ;
1743| 5 - id cg_o #993
1743| 40 - op/sep (
1743| 5 - id i2s #466
1743| 40 - op/sep (
1743| 5 - id loop_label #454
1743| 41 - op/sep )
1743| 41 - op/sep )
1743| 59 - op/sep ;
1743| 5 - id cg_n #994
1743| 40 - op/sep (
1743| 4 - str ":"
1743| 41 - op/sep )
1743| 59 - op/sep ;

1744| 5 - id sc_next #247
1744| 40 - op/sep (
1744| 41 - op/sep )
1744| 59 - op/sep ;
1744| 132 - kw if
1744| 40 - op/sep (
1744| 33 - op/sep !
1744| 40 - op/sep (
1744| 5 - id c #77
1744| 61 - op/sep =
1744| 5 - id px_expr #616
1744| 40 - op/sep (
1744| 2 - num 0
1744| 41 - op/sep )
1744| 41 - op/sep )
1744| 111 - op/sep o
1744| 5 - id sc_tkn #655
1744| 110 - op/sep n
1744| 3 - chr 41
1744| 41 - op/sep )
1744| 137 - kw return
1744| 5 - id t_ #681
1744| 40 - op/sep (
1744| 5 - id F #48
1744| 41 - op/sep )
1744| 59 - op/sep ;

1746| 5 - id cg_expr #960
1746| 40 - op/sep (
1746| 5 - id c #77
1746| 41 - op/sep )
1746| 59 - op/sep ;

1747| 5 - id cg_n #994
1747| 40 - op/sep (
1747| 4 - str "  test eax,eax"
1747| 41 - op/sep )
1747| 59 - op/sep ;

1748| 5 - id cg_o #993
1748| 40 - op/sep (
1748| 4 - str "  jz E"
1748| 41 - op/sep )
1748| 59 - op/sep ;
1748| 5 - id cg_n #994
1748| 40 - op/sep (
1748| 5 - id i2s #466
1748| 40 - op/sep (
1748| 5 - id loop_label #454
1748| 41 - op/sep )
1748| 41 - op/sep )
1748| 59 - op/sep ;

1749| 132 - kw if
1749| 40 - op/sep (
1749| 5 - id ET_TRACE #18
1749| 97 - op/sep a
1749| 5 - id c #77
1749| 41 - op/sep )
1749| 123 - op/sep {
1749| 5 - id p1 #371
1749| 40 - op/sep (
1749| 4 - str "E:whl "
1749| 41 - op/sep )
1749| 59 - op/sep ;
1749| 5 - id et_print #395
1749| 40 - op/sep (
1749| 40 - op/sep (
1749| 130 - kw int
1749| 42 - op/sep *
1749| 41 - op/sep )
1749| 5 - id c #77
1749| 41 - op/sep )
1749| 59 - op/sep ;
1749| 5 - id p0n #551
1749| 40 - op/sep (
1749| 41 - op/sep )
1749| 59 - op/sep ;
1749| 125 - op/sep }

1750| 5 - id sc_next #247
1750| 40 - op/sep (
1750| 41 - op/sep )
1750| 59 - op/sep ;

1751| 130 - kw int
1751| 5 - id r #92
1751| 61 - op/sep =
1751| 5 - id pa_stmt #574
1751| 40 - op/sep (
1751| 41 - op/sep )
1751| 59 - op/sep ;

1752| 5 - id cg_o #993
1752| 40 - op/sep (
1752| 4 - str "  jmp L"
1752| 41 - op/sep )
1752| 59 - op/sep ;
1752| 5 - id cg_n #994
1752| 40 - op/sep (
1752| 5 - id i2s #466
1752| 40 - op/sep (
1752| 5 - id loop_label #454
1752| 41 - op/sep )
1752| 41 - op/sep )
1752| 59 - op/sep ;

1753| 5 - id cg_o #993
1753| 40 - op/sep (
1753| 4 - str "E"
1753| 41 - op/sep )
1753| 59 - op/sep ;
1753| 5 - id cg_o #993
1753| 40 - op/sep (
1753| 5 - id i2s #466
1753| 40 - op/sep (
1753| 5 - id loop_label #454
1753| 41 - op/sep )
1753| 41 - op/sep )
1753| 59 - op/sep ;
1753| 5 - id cg_n #994
1753| 40 - op/sep (
1753| 4 - str ":"
1753| 41 - op/sep )
1753| 59 - op/sep ;

1754| 5 - id cg_pop_loop_label #827
1754| 40 - op/sep (
1754| 41 - op/sep )
1754| 59 - op/sep ;

1755| 137 - kw return
1755| 5 - id t_ #681
1755| 40 - op/sep (
1755| 5 - id r #92
1755| 41 - op/sep )
1755| 59 - op/sep ;

1756| 125 - op/sep }

1757| 132 - kw if
1757| 40 - op/sep (
1757| 5 - id sc_tkn #655
1757| 101 - op/sep e
1757| 5 - id Kw #17
1757| 43 - op/sep +
1757| 5 - id If #877
1757| 41 - op/sep )

1758| 123 - op/sep {

1759| 130 - kw int
1759| 42 - op/sep *
1759| 5 - id c #77
1759| 59 - op/sep ;

1760| 130 - kw int
1760| 5 - id if_label #461
1760| 61 - op/sep =
1760| 5 - id cg_new_label #814
1760| 40 - op/sep (
1760| 41 - op/sep )
1760| 59 - op/sep ;

1761| 5 - id sc_next #247
1761| 40 - op/sep (
1761| 41 - op/sep )
1761| 59 - op/sep ;
1761| 132 - kw if
1761| 40 - op/sep (
1761| 5 - id sc_tkn #655
1761| 110 - op/sep n
1761| 3 - chr 40
1761| 41 - op/sep )
1761| 137 - kw return
1761| 5 - id t_ #681
1761| 40 - op/sep (
1761| 5 - id F #48
1761| 41 - op/sep )
1761| 59 - op/sep ;

1762| 5 - id sc_next #247
1762| 40 - op/sep (
1762| 41 - op/sep )
1762| 59 - op/sep ;
1762| 132 - kw if
1762| 40 - op/sep (
1762| 33 - op/sep !
1762| 40 - op/sep (
1762| 5 - id c #77
1762| 61 - op/sep =
1762| 5 - id px_expr #616
1762| 40 - op/sep (
1762| 2 - num 0
1762| 41 - op/sep )
1762| 41 - op/sep )
1762| 111 - op/sep o
1762| 5 - id sc_tkn #655
1762| 110 - op/sep n
1762| 3 - chr 41
1762| 41 - op/sep )
1762| 137 - kw return
1762| 5 - id t_ #681
1762| 40 - op/sep (
1762| 5 - id F #48
1762| 41 - op/sep )
1762| 59 - op/sep ;

1764| 5 - id cg_expr #960
1764| 40 - op/sep (
1764| 5 - id c #77
1764| 41 - op/sep )
1764| 59 - op/sep ;

1765| 5 - id cg_n #994
1765| 40 - op/sep (
1765| 4 - str "  test eax,eax"
1765| 41 - op/sep )
1765| 59 - op/sep ;

1766| 5 - id cg_o #993
1766| 40 - op/sep (
1766| 4 - str "  jz J"
1766| 41 - op/sep )
1766| 59 - op/sep ;
1766| 5 - id cg_n #994
1766| 40 - op/sep (
1766| 5 - id i2s #466
1766| 40 - op/sep (
1766| 5 - id if_label #461
1766| 41 - op/sep )
1766| 41 - op/sep )
1766| 59 - op/sep ;

1767| 132 - kw if
1767| 40 - op/sep (
1767| 5 - id ET_TRACE #18
1767| 97 - op/sep a
1767| 5 - id c #77
1767| 41 - op/sep )
1767| 123 - op/sep {
1767| 5 - id p1 #371
1767| 40 - op/sep (
1767| 4 - str "E:iff "
1767| 41 - op/sep )
1767| 59 - op/sep ;
1767| 5 - id et_print #395
1767| 40 - op/sep (
1767| 40 - op/sep (
1767| 130 - kw int
1767| 42 - op/sep *
1767| 41 - op/sep )
1767| 5 - id c #77
1767| 41 - op/sep )
1767| 59 - op/sep ;
1767| 5 - id p0n #551
1767| 40 - op/sep (
1767| 41 - op/sep )
1767| 59 - op/sep ;
1767| 125 - op/sep }

1768| 5 - id sc_next #247
1768| 40 - op/sep (
1768| 41 - op/sep )
1768| 59 - op/sep ;
1768| 132 - kw if
1768| 40 - op/sep (
1768| 33 - op/sep !
1768| 5 - id pa_stmt #574
1768| 40 - op/sep (
1768| 41 - op/sep )
1768| 41 - op/sep )
1768| 137 - kw return
1768| 5 - id t_ #681
1768| 40 - op/sep (
1768| 5 - id F #48
1768| 41 - op/sep )
1768| 59 - op/sep ;

1769| 132 - kw if
1769| 40 - op/sep (
1769| 5 - id sc_tkn #655
1769| 101 - op/sep e
1769| 5 - id Kw #17
1769| 43 - op/sep +
1769| 5 - id Else #928
1769| 41 - op/sep )

1770| 123 - op/sep {

1771| 5 - id cg_o #993
1771| 40 - op/sep (
1771| 4 - str "  jmp Z"
1771| 41 - op/sep )
1771| 59 - op/sep ;
1771| 5 - id cg_n #994
1771| 40 - op/sep (
1771| 5 - id i2s #466
1771| 40 - op/sep (
1771| 5 - id if_label #461
1771| 41 - op/sep )
1771| 41 - op/sep )
1771| 59 - op/sep ;

1772| 5 - id cg_o #993
1772| 40 - op/sep (
1772| 4 - str "J"
1772| 41 - op/sep )
1772| 59 - op/sep ;
1772| 5 - id cg_o #993
1772| 40 - op/sep (
1772| 5 - id i2s #466
1772| 40 - op/sep (
1772| 5 - id if_label #461
1772| 41 - op/sep )
1772| 41 - op/sep )
1772| 59 - op/sep ;
1772| 5 - id cg_n #994
1772| 40 - op/sep (
1772| 4 - str ":"
1772| 41 - op/sep )
1772| 59 - op/sep ;

1773| 5 - id sc_next #247
1773| 40 - op/sep (
1773| 41 - op/sep )
1773| 59 - op/sep ;

1774| 132 - kw if
1774| 40 - op/sep (
1774| 33 - op/sep !
1774| 5 - id pa_stmt #574
1774| 40 - op/sep (
1774| 41 - op/sep )
1774| 41 - op/sep )
1774| 137 - kw return
1774| 5 - id t_ #681
1774| 40 - op/sep (
1774| 5 - id F #48
1774| 41 - op/sep )
1774| 59 - op/sep ;

1775| 5 - id cg_o #993
1775| 40 - op/sep (
1775| 4 - str "Z"
1775| 41 - op/sep )
1775| 59 - op/sep ;
1775| 5 - id cg_o #993
1775| 40 - op/sep (
1775| 5 - id i2s #466
1775| 40 - op/sep (
1775| 5 - id if_label #461
1775| 41 - op/sep )
1775| 41 - op/sep )
1775| 59 - op/sep ;
1775| 5 - id cg_n #994
1775| 40 - op/sep (
1775| 4 - str ":"
1775| 41 - op/sep )
1775| 59 - op/sep ;

1776| 125 - op/sep }

1777| 133 - kw else

1778| 123 - op/sep {

1779| 5 - id cg_o #993
1779| 40 - op/sep (
1779| 4 - str "J"
1779| 41 - op/sep )
1779| 59 - op/sep ;
1779| 5 - id cg_o #993
1779| 40 - op/sep (
1779| 5 - id i2s #466
1779| 40 - op/sep (
1779| 5 - id if_label #461
1779| 41 - op/sep )
1779| 41 - op/sep )
1779| 59 - op/sep ;
1779| 5 - id cg_n #994
1779| 40 - op/sep (
1779| 4 - str ":"
1779| 41 - op/sep )
1779| 59 - op/sep ;

1780| 125 - op/sep }

1781| 137 - kw return
1781| 5 - id t_ #681
1781| 40 - op/sep (
1781| 5 - id T #62
1781| 41 - op/sep )
1781| 59 - op/sep ;

1782| 125 - op/sep }

1783| 132 - kw if
1783| 40 - op/sep (
1783| 5 - id sc_tkn #655
1783| 101 - op/sep e
1783| 5 - id Kw #17
1783| 43 - op/sep +
1783| 5 - id For #354
1783| 41 - op/sep )

1784| 123 - op/sep {

1785| 130 - kw int
1785| 5 - id loop_label #454
1785| 61 - op/sep =
1785| 5 - id cg_new_loop_label #177
1785| 40 - op/sep (
1785| 41 - op/sep )
1785| 59 - op/sep ;

1786| 5 - id sc_next #247
1786| 40 - op/sep (
1786| 41 - op/sep )
1786| 59 - op/sep ;
1786| 132 - kw if
1786| 40 - op/sep (
1786| 5 - id sc_tkn #655
1786| 110 - op/sep n
1786| 3 - chr 40
1786| 41 - op/sep )
1786| 137 - kw return
1786| 5 - id t_ #681
1786| 40 - op/sep (
1786| 5 - id F #48
1786| 41 - op/sep )
1786| 59 - op/sep ;

1787| 5 - id sc_next #247
1787| 40 - op/sep (
1787| 41 - op/sep )
1787| 59 - op/sep ;

1788| 105 - op/sep i
1788| 5 - id se_level #920
1788| 59 - op/sep ;

1789| 130 - kw int
1789| 5 - id block_local_start #268
1789| 61 - op/sep =
1789| 5 - id st_count #730
1789| 59 - op/sep ;

1790| 130 - kw int
1790| 5 - id block_local_offset #355
1790| 61 - op/sep =
1790| 5 - id se_local_offset #845
1790| 59 - op/sep ;

1791| 132 - kw if
1791| 40 - op/sep (
1791| 5 - id sc_tkn #655
1791| 110 - op/sep n
1791| 3 - chr 59
1791| 41 - op/sep )

1792| 123 - op/sep {

1793| 132 - kw if
1793| 40 - op/sep (
1793| 33 - op/sep !
1793| 5 - id pa_vardef_or_expr #553
1793| 40 - op/sep (
1793| 41 - op/sep )
1793| 41 - op/sep )
1793| 137 - kw return
1793| 5 - id t_ #681
1793| 40 - op/sep (
1793| 5 - id F #48
1793| 41 - op/sep )
1793| 59 - op/sep ;

1795| 125 - op/sep }

1796| 133 - kw else

1797| 5 - id sc_next #247
1797| 40 - op/sep (
1797| 41 - op/sep )
1797| 59 - op/sep ;

1798| 130 - kw int
1798| 42 - op/sep *
1798| 5 - id e2 #658
1798| 61 - op/sep =
1798| 2 - num 0
1798| 59 - op/sep ;

1799| 132 - kw if
1799| 40 - op/sep (
1799| 5 - id sc_tkn #655
1799| 110 - op/sep n
1799| 3 - chr 59
1799| 41 - op/sep )

1800| 123 - op/sep {

1801| 132 - kw if
1801| 40 - op/sep (
1801| 33 - op/sep !
1801| 40 - op/sep (
1801| 5 - id e2 #658
1801| 61 - op/sep =
1801| 5 - id px_expr #616
1801| 40 - op/sep (
1801| 2 - num 0
1801| 41 - op/sep )
1801| 41 - op/sep )
1801| 41 - op/sep )
1801| 137 - kw return
1801| 5 - id t_ #681
1801| 40 - op/sep (
1801| 5 - id F #48
1801| 41 - op/sep )
1801| 59 - op/sep ;

1802| 125 - op/sep }

1803| 132 - kw if
1803| 40 - op/sep (
1803| 5 - id ET_TRACE #18
1803| 97 - op/sep a
1803| 5 - id e2 #658
1803| 41 - op/sep )
1803| 123 - op/sep {
1803| 5 - id p1 #371
1803| 40 - op/sep (
1803| 4 - str "E:fr2 "
1803| 41 - op/sep )
1803| 59 - op/sep ;
1803| 5 - id et_print #395
1803| 40 - op/sep (
1803| 40 - op/sep (
1803| 130 - kw int
1803| 42 - op/sep *
1803| 41 - op/sep )
1803| 5 - id e2 #658
1803| 41 - op/sep )
1803| 59 - op/sep ;
1803| 5 - id p0n #551
1803| 40 - op/sep (
1803| 41 - op/sep )
1803| 59 - op/sep ;
1803| 125 - op/sep }

1804| 130 - kw int
1804| 42 - op/sep *
1804| 5 - id e3 #665
1804| 61 - op/sep =
1804| 2 - num 0
1804| 59 - op/sep ;

1805| 5 - id sc_next #247
1805| 40 - op/sep (
1805| 41 - op/sep )
1805| 59 - op/sep ;

1806| 132 - kw if
1806| 40 - op/sep (
1806| 5 - id sc_tkn #655
1806| 110 - op/sep n
1806| 3 - chr 41
1806| 41 - op/sep )

1807| 123 - op/sep {

1808| 132 - kw if
1808| 40 - op/sep (
1808| 33 - op/sep !
1808| 40 - op/sep (
1808| 5 - id e3 #665
1808| 61 - op/sep =
1808| 5 - id px_exprs #274
1808| 40 - op/sep (
1808| 41 - op/sep )
1808| 41 - op/sep )
1808| 41 - op/sep )
1808| 137 - kw return
1808| 5 - id t_ #681
1808| 40 - op/sep (
1808| 5 - id F #48
1808| 41 - op/sep )
1808| 59 - op/sep ;

1809| 125 - op/sep }

1810| 132 - kw if
1810| 40 - op/sep (
1810| 5 - id ET_TRACE #18
1810| 97 - op/sep a
1810| 5 - id e3 #665
1810| 41 - op/sep )
1810| 123 - op/sep {
1810| 5 - id p1 #371
1810| 40 - op/sep (
1810| 4 - str "E:fr3 ["
1810| 41 - op/sep )
1810| 59 - op/sep ;
1810| 5 - id et_print_exprs #107
1810| 40 - op/sep (
1810| 40 - op/sep (
1810| 130 - kw int
1810| 42 - op/sep *
1810| 42 - op/sep *
1810| 41 - op/sep )
1810| 5 - id e3 #665
1810| 41 - op/sep )
1810| 59 - op/sep ;
1810| 125 - op/sep }

1811| 132 - kw if
1811| 40 - op/sep (
1811| 5 - id sc_tkn #655
1811| 110 - op/sep n
1811| 3 - chr 41
1811| 41 - op/sep )
1811| 137 - kw return
1811| 5 - id t_ #681
1811| 40 - op/sep (
1811| 5 - id F #48
1811| 41 - op/sep )
1811| 59 - op/sep ;

1812| 5 - id sc_next #247
1812| 40 - op/sep (
1812| 41 - op/sep )
1812| 59 - op/sep ;

1813| 132 - kw if
1813| 40 - op/sep (
1813| 5 - id e3 #665
1813| 41 - op/sep )
1813| 123 - op/sep {
1813| 5 - id cg_o #993
1813| 40 - op/sep (
1813| 4 - str "  jmp C"
1813| 41 - op/sep )
1813| 59 - op/sep ;
1813| 5 - id cg_n #994
1813| 40 - op/sep (
1813| 5 - id i2s #466
1813| 40 - op/sep (
1813| 5 - id loop_label #454
1813| 41 - op/sep )
1813| 41 - op/sep )
1813| 59 - op/sep ;
1813| 125 - op/sep }

1814| 5 - id cg_o #993
1814| 40 - op/sep (
1814| 4 - str "P"
1814| 41 - op/sep )
1814| 59 - op/sep ;
1814| 5 - id cg_o #993
1814| 40 - op/sep (
1814| 5 - id i2s #466
1814| 40 - op/sep (
1814| 5 - id loop_label #454
1814| 41 - op/sep )
1814| 41 - op/sep )
1814| 59 - op/sep ;
1814| 5 - id cg_n #994
1814| 40 - op/sep (
1814| 4 - str ":"
1814| 41 - op/sep )
1814| 59 - op/sep ;

1815| 132 - kw if
1815| 40 - op/sep (
1815| 5 - id e3 #665
1815| 41 - op/sep )
1815| 5 - id cg_exprs #818
1815| 40 - op/sep (
1815| 40 - op/sep (
1815| 130 - kw int
1815| 42 - op/sep *
1815| 42 - op/sep *
1815| 41 - op/sep )
1815| 5 - id e3 #665
1815| 41 - op/sep )
1815| 59 - op/sep ;

1816| 5 - id cg_o #993
1816| 40 - op/sep (
1816| 4 - str "C"
1816| 41 - op/sep )
1816| 59 - op/sep ;
1816| 5 - id cg_o #993
1816| 40 - op/sep (
1816| 5 - id i2s #466
1816| 40 - op/sep (
1816| 5 - id loop_label #454
1816| 41 - op/sep )
1816| 41 - op/sep )
1816| 59 - op/sep ;
1816| 5 - id cg_n #994
1816| 40 - op/sep (
1816| 4 - str ":"
1816| 41 - op/sep )
1816| 59 - op/sep ;

1817| 132 - kw if
1817| 40 - op/sep (
1817| 5 - id e2 #658
1817| 41 - op/sep )

1818| 123 - op/sep {

1819| 5 - id cg_expr #960
1819| 40 - op/sep (
1819| 5 - id e2 #658
1819| 41 - op/sep )
1819| 59 - op/sep ;

1820| 5 - id cg_n #994
1820| 40 - op/sep (
1820| 4 - str "  test eax,eax"
1820| 41 - op/sep )
1820| 59 - op/sep ;

1821| 5 - id cg_o #993
1821| 40 - op/sep (
1821| 4 - str "  jz E"
1821| 41 - op/sep )
1821| 59 - op/sep ;
1821| 5 - id cg_n #994
1821| 40 - op/sep (
1821| 5 - id i2s #466
1821| 40 - op/sep (
1821| 5 - id loop_label #454
1821| 41 - op/sep )
1821| 41 - op/sep )
1821| 59 - op/sep ;

1822| 125 - op/sep }

1823| 130 - kw int
1823| 5 - id rc #554
1823| 61 - op/sep =
1823| 5 - id pa_stmt #574
1823| 40 - op/sep (
1823| 41 - op/sep )
1823| 59 - op/sep ;

1824| 132 - kw if
1824| 40 - op/sep (
1824| 5 - id se_local_offset #845
1824| 60 - op/sep <
1824| 5 - id se_max_l_offset #50
1824| 41 - op/sep )
1824| 5 - id se_max_l_offset #50
1824| 61 - op/sep =
1824| 5 - id se_local_offset #845
1824| 59 - op/sep ;

1825| 132 - kw if
1825| 40 - op/sep (
1825| 5 - id st_count #730
1825| 62 - op/sep >
1825| 5 - id block_local_start #268
1825| 41 - op/sep )

1826| 123 - op/sep {

1827| 132 - kw if
1827| 40 - op/sep (
1827| 5 - id ST_DUMP #185
1827| 41 - op/sep )
1827| 123 - op/sep {
1827| 5 - id p1n #619
1827| 40 - op/sep (
1827| 4 - str "for"
1827| 41 - op/sep )
1827| 59 - op/sep ;
1827| 5 - id st_dump #624
1827| 40 - op/sep (
1827| 5 - id block_local_start #268
1827| 44 - op/sep ,
1827| 45 - op/sep -
1827| 2 - num 1
1827| 41 - op/sep )
1827| 59 - op/sep ;
1827| 125 - op/sep }

1828| 5 - id st_count #730
1828| 61 - op/sep =
1828| 5 - id block_local_start #268
1828| 59 - op/sep ;

1829| 5 - id se_local_offset #845
1829| 61 - op/sep =
1829| 5 - id block_local_offset #355
1829| 59 - op/sep ;

1830| 125 - op/sep }

1831| 100 - op/sep d
1831| 5 - id se_level #920
1831| 59 - op/sep ;

1832| 5 - id cg_o #993
1832| 40 - op/sep (
1832| 4 - str "  jmp P"
1832| 41 - op/sep )
1832| 59 - op/sep ;
1832| 5 - id cg_n #994
1832| 40 - op/sep (
1832| 5 - id i2s #466
1832| 40 - op/sep (
1832| 5 - id loop_label #454
1832| 41 - op/sep )
1832| 41 - op/sep )
1832| 59 - op/sep ;

1833| 5 - id cg_o #993
1833| 40 - op/sep (
1833| 4 - str "E"
1833| 41 - op/sep )
1833| 59 - op/sep ;
1833| 5 - id cg_o #993
1833| 40 - op/sep (
1833| 5 - id i2s #466
1833| 40 - op/sep (
1833| 5 - id loop_label #454
1833| 41 - op/sep )
1833| 41 - op/sep )
1833| 59 - op/sep ;
1833| 5 - id cg_n #994
1833| 40 - op/sep (
1833| 4 - str ":"
1833| 41 - op/sep )
1833| 59 - op/sep ;

1834| 5 - id cg_pop_loop_label #827
1834| 40 - op/sep (
1834| 41 - op/sep )
1834| 59 - op/sep ;

1835| 137 - kw return
1835| 5 - id t_ #681
1835| 40 - op/sep (
1835| 5 - id rc #554
1835| 41 - op/sep )
1835| 59 - op/sep ;

1836| 125 - op/sep }

1837| 130 - kw int
1837| 5 - id e #79
1837| 61 - op/sep =
1837| 5 - id pa_vardef_or_expr #553
1837| 40 - op/sep (
1837| 41 - op/sep )
1837| 59 - op/sep ;

1838| 137 - kw return
1838| 5 - id t_ #681
1838| 40 - op/sep (
1838| 5 - id e #79
1838| 41 - op/sep )
1838| 59 - op/sep ;

1839| 125 - op/sep }

1841| 130 - kw int
1841| 5 - id pa_func #833
1841| 40 - op/sep (
1841| 41 - op/sep )

1842| 123 - op/sep {

1843| 5 - id assert #124
1843| 40 - op/sep (
1843| 5 - id sc_tkn #655
1843| 101 - op/sep e
1843| 3 - chr 40
1843| 44 - op/sep ,
1843| 4 - str "pa_func not at '('"
1843| 41 - op/sep )
1843| 59 - op/sep ;

1844| 5 - id assert #124
1844| 40 - op/sep (
1844| 5 - id se_level #920
1844| 101 - op/sep e
1844| 2 - num 0
1844| 44 - op/sep ,
1844| 4 - str "pa_func lvl!=0"
1844| 41 - op/sep )
1844| 59 - op/sep ;

1845| 5 - id t1 #635
1845| 40 - op/sep (
1845| 4 - str "pa_func"
1845| 41 - op/sep )
1845| 59 - op/sep ;

1846| 130 - kw int
1846| 5 - id redefined #32
1846| 61 - op/sep =
1846| 5 - id F #48
1846| 44 - op/sep ,
1846| 5 - id ret0 #641
1846| 61 - op/sep =
1846| 5 - id F #48
1846| 59 - op/sep ;

1847| 130 - kw int
1847| 5 - id id #969
1847| 61 - op/sep =
1847| 5 - id sc_num #403
1847| 59 - op/sep ;

1848| 130 - kw int
1848| 5 - id t #94
1848| 61 - op/sep =
1848| 5 - id se_type #260
1848| 43 - op/sep +
1848| 5 - id se_stars #955
1848| 59 - op/sep ;

1849| 130 - kw int
1849| 5 - id k2 #43
1849| 61 - op/sep =
1849| 5 - id st_find #734
1849| 40 - op/sep (
1849| 5 - id id #969
1849| 41 - op/sep )
1849| 59 - op/sep ;

1850| 132 - kw if
1850| 40 - op/sep (
1850| 5 - id k2 #43
1850| 103 - op/sep g
1850| 2 - num 0
1850| 97 - op/sep a
1850| 5 - id st_kind #389
1850| 91 - op/sep [
1850| 5 - id k2 #43
1850| 93 - op/sep ]
1850| 110 - op/sep n
1850| 5 - id K_fn #550
1850| 41 - op/sep )

1851| 5 - id err2 #523
1851| 40 - op/sep (
1851| 4 - str "This was defined as not function before"
1851| 44 - op/sep ,
1851| 5 - id id_table #669
1851| 91 - op/sep [
1851| 5 - id id #969
1851| 93 - op/sep ]
1851| 41 - op/sep )
1851| 59 - op/sep ;

1852| 130 - kw int
1852| 5 - id k #85
1852| 61 - op/sep =
1852| 5 - id st_add #645
1852| 40 - op/sep (
1852| 5 - id id #969
1852| 44 - op/sep ,
1852| 5 - id t #94
1852| 44 - op/sep ,
1852| 5 - id K_fn #550
1852| 44 - op/sep ,
1852| 2 - num 0
1852| 44 - op/sep ,
1852| 2 - num 0
1852| 41 - op/sep )
1852| 59 - op/sep ;

1853| 5 - id sc_next #247
1853| 40 - op/sep (
1853| 41 - op/sep )
1853| 59 - op/sep ;

1854| 5 - id se_level #920
1854| 61 - op/sep =
1854| 2 - num 1
1854| 59 - op/sep ;

1855| 5 - id st_local #865
1855| 61 - op/sep =
1855| 5 - id st_count #730
1855| 59 - op/sep ;

1856| 132 - kw if
1856| 40 - op/sep (
1856| 33 - op/sep !
1856| 5 - id pa_args #776
1856| 40 - op/sep (
1856| 41 - op/sep )
1856| 111 - op/sep o
1856| 5 - id sc_tkn #655
1856| 110 - op/sep n
1856| 3 - chr 41
1856| 41 - op/sep )
1856| 137 - kw return
1856| 5 - id t_ #681
1856| 40 - op/sep (
1856| 5 - id F #48
1856| 41 - op/sep )
1856| 59 - op/sep ;

1857| 129 - kw char
1857| 42 - op/sep *
1857| 5 - id args #138
1857| 61 - op/sep =
1857| 5 - id st_copy_args #102
1857| 40 - op/sep (
1857| 5 - id st_local #865
1857| 44 - op/sep ,
1857| 5 - id se_arg_count #249
1857| 41 - op/sep )
1857| 59 - op/sep ;

1858| 5 - id sc_next #247
1858| 40 - op/sep (
1858| 41 - op/sep )
1858| 59 - op/sep ;

1859| 132 - kw if
1859| 40 - op/sep (
1859| 5 - id sc_tkn #655
1859| 101 - op/sep e
1859| 3 - chr 59
1859| 41 - op/sep )

1860| 123 - op/sep {

1861| 5 - id sc_next #247
1861| 40 - op/sep (
1861| 41 - op/sep )
1861| 59 - op/sep ;

1862| 132 - kw if
1862| 40 - op/sep (
1862| 5 - id k2 #43
1862| 103 - op/sep g
1862| 2 - num 0
1862| 41 - op/sep )

1863| 123 - op/sep {

1864| 132 - kw if
1864| 40 - op/sep (
1864| 5 - id t #94
1864| 110 - op/sep n
1864| 5 - id st_type #985
1864| 91 - op/sep [
1864| 5 - id k2 #43
1864| 93 - op/sep ]
1864| 111 - op/sep o
1864| 5 - id strcmp #6
1864| 40 - op/sep (
1864| 40 - op/sep (
1864| 129 - kw char
1864| 42 - op/sep *
1864| 41 - op/sep )
1864| 5 - id st_prop #984
1864| 91 - op/sep [
1864| 5 - id k2 #43
1864| 93 - op/sep ]
1864| 44 - op/sep ,
1864| 5 - id args #138
1864| 41 - op/sep )
1864| 41 - op/sep )

1865| 5 - id err2 #523
1865| 40 - op/sep (
1865| 4 - str "duplicate function declaration (not matching)"
1865| 44 - op/sep ,
1865| 5 - id id_table #669
1865| 91 - op/sep [
1865| 5 - id id #969
1865| 93 - op/sep ]
1865| 41 - op/sep )
1865| 59 - op/sep ;

1866| 125 - op/sep }

1867| 133 - kw else

1868| 123 - op/sep {

1869| 5 - id st_prop #984
1869| 91 - op/sep [
1869| 5 - id k #85
1869| 93 - op/sep ]
1869| 61 - op/sep =
1869| 40 - op/sep (
1869| 130 - kw int
1869| 41 - op/sep )
1869| 5 - id args #138
1869| 59 - op/sep ;

1870| 5 - id st_count #730
1870| 61 - op/sep =
1870| 5 - id st_local #865
1870| 59 - op/sep ;

1871| 5 - id se_level #920
1871| 61 - op/sep =
1871| 2 - num 0
1871| 59 - op/sep ;

1872| 125 - op/sep }

1873| 137 - kw return
1873| 5 - id t_ #681
1873| 40 - op/sep (
1873| 5 - id T #62
1873| 41 - op/sep )
1873| 59 - op/sep ;

1874| 125 - op/sep }

1875| 132 - kw if
1875| 40 - op/sep (
1875| 5 - id sc_tkn #655
1875| 101 - op/sep e
1875| 3 - chr 123
1875| 41 - op/sep )

1876| 123 - op/sep {

1877| 5 - id sc_next #247
1877| 40 - op/sep (
1877| 41 - op/sep )
1877| 59 - op/sep ;

1878| 5 - id se_lvars #956
1878| 61 - op/sep =
1878| 2 - num 0
1878| 59 - op/sep ;

1879| 132 - kw if
1879| 40 - op/sep (
1879| 5 - id k2 #43
1879| 103 - op/sep g
1879| 2 - num 0
1879| 41 - op/sep )

1880| 123 - op/sep {

1881| 132 - kw if
1881| 40 - op/sep (
1881| 5 - id st_value #595
1881| 91 - op/sep [
1881| 5 - id k2 #43
1881| 93 - op/sep ]
1881| 110 - op/sep n
1881| 2 - num 0
1881| 41 - op/sep )

1882| 5 - id err2 #523
1882| 40 - op/sep (
1882| 4 - str "function re-definition"
1882| 44 - op/sep ,
1882| 5 - id id_table #669
1882| 91 - op/sep [
1882| 5 - id id #969
1882| 93 - op/sep ]
1882| 41 - op/sep )
1882| 59 - op/sep ;

1883| 132 - kw if
1883| 40 - op/sep (
1883| 5 - id t #94
1883| 110 - op/sep n
1883| 5 - id st_type #985
1883| 91 - op/sep [
1883| 5 - id k2 #43
1883| 93 - op/sep ]
1883| 111 - op/sep o
1883| 5 - id strcmp #6
1883| 40 - op/sep (
1883| 40 - op/sep (
1883| 129 - kw char
1883| 42 - op/sep *
1883| 41 - op/sep )
1883| 5 - id st_prop #984
1883| 91 - op/sep [
1883| 5 - id k2 #43
1883| 93 - op/sep ]
1883| 44 - op/sep ,
1883| 5 - id args #138
1883| 41 - op/sep )
1883| 41 - op/sep )

1884| 5 - id err2 #523
1884| 40 - op/sep (
1884| 4 - str "not matching function definition"
1884| 44 - op/sep ,
1884| 5 - id id_table #669
1884| 91 - op/sep [
1884| 5 - id id #969
1884| 93 - op/sep ]
1884| 41 - op/sep )
1884| 59 - op/sep ;

1885| 5 - id st_value #595
1885| 91 - op/sep [
1885| 5 - id k2 #43
1885| 93 - op/sep ]
1885| 61 - op/sep =
1885| 2 - num 1
1885| 59 - op/sep ;

1886| 5 - id st_prop #984
1886| 91 - op/sep [
1886| 5 - id k2 #43
1886| 93 - op/sep ]
1886| 61 - op/sep =
1886| 40 - op/sep (
1886| 130 - kw int
1886| 41 - op/sep )
1886| 5 - id args #138
1886| 59 - op/sep ;

1887| 5 - id redefined #32
1887| 61 - op/sep =
1887| 5 - id T #62
1887| 59 - op/sep ;

1888| 125 - op/sep }

1889| 133 - kw else

1890| 123 - op/sep {

1891| 5 - id st_value #595
1891| 91 - op/sep [
1891| 5 - id k #85
1891| 93 - op/sep ]
1891| 61 - op/sep =
1891| 2 - num 1
1891| 59 - op/sep ;
1891| 5 - id st_prop #984
1891| 91 - op/sep [
1891| 5 - id k #85
1891| 93 - op/sep ]
1891| 61 - op/sep =
1891| 40 - op/sep (
1891| 130 - kw int
1891| 41 - op/sep )
1891| 5 - id args #138
1891| 59 - op/sep ;

1892| 125 - op/sep }

1893| 5 - id cg_fn_label #111
1893| 61 - op/sep =
1893| 5 - id cg_new_label #814
1893| 40 - op/sep (
1893| 41 - op/sep )
1893| 59 - op/sep ;

1894| 5 - id cg_fn_begin #67
1894| 40 - op/sep (
1894| 5 - id id_table #669
1894| 91 - op/sep [
1894| 5 - id id #969
1894| 93 - op/sep ]
1894| 41 - op/sep )
1894| 59 - op/sep ;

1895| 5 - id cg_suspend #188
1895| 40 - op/sep (
1895| 41 - op/sep )
1895| 59 - op/sep ;

1896| 132 - kw if
1896| 40 - op/sep (
1896| 5 - id strequ #915
1896| 40 - op/sep (
1896| 5 - id id_table #669
1896| 91 - op/sep [
1896| 5 - id id #969
1896| 93 - op/sep ]
1896| 44 - op/sep ,
1896| 4 - str "main"
1896| 41 - op/sep )
1896| 41 - op/sep )
1896| 5 - id cg_n #994
1896| 40 - op/sep (
1896| 4 - str "  call ___main\n"
1896| 41 - op/sep )
1896| 59 - op/sep ;

1897| 5 - id se_local_offset #845
1897| 61 - op/sep =
1897| 2 - num 0
1897| 59 - op/sep ;

1898| 5 - id se_max_l_offset #50
1898| 61 - op/sep =
1898| 2 - num 0
1898| 59 - op/sep ;

1899| 130 - kw int
1899| 5 - id block_local_start #268
1899| 61 - op/sep =
1899| 5 - id st_count #730
1899| 59 - op/sep ;

1900| 130 - kw int
1900| 5 - id block_local_offset #355
1900| 61 - op/sep =
1900| 5 - id se_local_offset #845
1900| 59 - op/sep ;

1901| 134 - kw while
1901| 40 - op/sep (
1901| 5 - id sc_tkn #655
1901| 110 - op/sep n
1901| 3 - chr 125
1901| 41 - op/sep )
1901| 132 - kw if
1901| 40 - op/sep (
1901| 33 - op/sep !
1901| 5 - id pa_stmt #574
1901| 40 - op/sep (
1901| 41 - op/sep )
1901| 41 - op/sep )
1901| 137 - kw return
1901| 5 - id t_ #681
1901| 40 - op/sep (
1901| 5 - id F #48
1901| 41 - op/sep )
1901| 59 - op/sep ;

1902| 5 - id sc_next #247
1902| 40 - op/sep (
1902| 41 - op/sep )
1902| 59 - op/sep ;

1903| 132 - kw if
1903| 40 - op/sep (
1903| 5 - id se_local_offset #845
1903| 60 - op/sep <
1903| 5 - id se_max_l_offset #50
1903| 41 - op/sep )
1903| 5 - id se_max_l_offset #50
1903| 61 - op/sep =
1903| 5 - id se_local_offset #845
1903| 59 - op/sep ;

1904| 132 - kw if
1904| 40 - op/sep (
1904| 5 - id ST_DUMP #185
1904| 41 - op/sep )
1904| 123 - op/sep {
1904| 5 - id p2n #683
1904| 40 - op/sep (
1904| 4 - str "fn "
1904| 44 - op/sep ,
1904| 5 - id id_table #669
1904| 91 - op/sep [
1904| 5 - id id #969
1904| 93 - op/sep ]
1904| 41 - op/sep )
1904| 59 - op/sep ;
1904| 5 - id st_dump #624
1904| 40 - op/sep (
1904| 5 - id st_local #865
1904| 44 - op/sep ,
1904| 45 - op/sep -
1904| 2 - num 1
1904| 41 - op/sep )
1904| 59 - op/sep ;

1905| 5 - id p2n #683
1905| 40 - op/sep (
1905| 4 - str "stk "
1905| 44 - op/sep ,
1905| 5 - id i2s #466
1905| 40 - op/sep (
1905| 5 - id se_max_l_offset #50
1905| 41 - op/sep )
1905| 41 - op/sep )
1905| 59 - op/sep ;
1905| 5 - id p0n #551
1905| 40 - op/sep (
1905| 41 - op/sep )
1905| 59 - op/sep ;
1905| 125 - op/sep }

1906| 132 - kw if
1906| 40 - op/sep (
1906| 5 - id redefined #32
1906| 41 - op/sep )
1906| 100 - op/sep d
1906| 5 - id st_local #865
1906| 59 - op/sep ;

1907| 5 - id st_count #730
1907| 61 - op/sep =
1907| 5 - id st_local #865
1907| 59 - op/sep ;

1908| 5 - id se_level #920
1908| 61 - op/sep =
1908| 2 - num 0
1908| 59 - op/sep ;

1909| 132 - kw if
1909| 40 - op/sep (
1909| 33 - op/sep !
1909| 5 - id se_last_stmt_ret #0
1909| 97 - op/sep a
1909| 5 - id t #94
1909| 110 - op/sep n
1909| 5 - id T_v #755
1909| 41 - op/sep )
1909| 123 - op/sep {
1909| 5 - id warn #965
1909| 40 - op/sep (
1909| 4 - str "last stmt was not return!"
1909| 41 - op/sep )
1909| 59 - op/sep ;
1909| 5 - id ret0 #641
1909| 61 - op/sep =
1909| 5 - id T #62
1909| 59 - op/sep ;
1909| 125 - op/sep }

1911| 132 - kw if
1911| 40 - op/sep (
1911| 5 - id se_max_l_offset #50
1911| 60 - op/sep <
1911| 2 - num 0
1911| 41 - op/sep )

1912| 123 - op/sep {

1913| 129 - kw char
1913| 5 - id cmd #407
1913| 91 - op/sep [
1913| 2 - num 32
1913| 93 - op/sep ]
1913| 59 - op/sep ;

1914| 5 - id memcopy #487
1914| 40 - op/sep (
1914| 5 - id cmd #407
1914| 44 - op/sep ,
1914| 4 - str "  sub esp,"
1914| 44 - op/sep ,
1914| 2 - num 10
1914| 41 - op/sep )
1914| 59 - op/sep ;

1915| 129 - kw char
1915| 42 - op/sep *
1915| 5 - id number #236
1915| 61 - op/sep =
1915| 5 - id i2s #466
1915| 40 - op/sep (
1915| 45 - op/sep -
1915| 5 - id se_max_l_offset #50
1915| 41 - op/sep )
1915| 59 - op/sep ;
1915| 130 - kw int
1915| 5 - id nn #300
1915| 61 - op/sep =
1915| 5 - id strlen #338
1915| 40 - op/sep (
1915| 5 - id number #236
1915| 41 - op/sep )
1915| 59 - op/sep ;

1916| 5 - id memcopy #487
1916| 40 - op/sep (
1916| 5 - id cmd #407
1916| 43 - op/sep +
1916| 2 - num 10
1916| 44 - op/sep ,
1916| 5 - id number #236
1916| 44 - op/sep ,
1916| 5 - id nn #300
1916| 41 - op/sep )
1916| 59 - op/sep ;

1917| 5 - id memcopy #487
1917| 40 - op/sep (
1917| 5 - id cmd #407
1917| 43 - op/sep +
1917| 2 - num 10
1917| 43 - op/sep +
1917| 5 - id nn #300
1917| 44 - op/sep ,
1917| 4 - str "\n"
1917| 44 - op/sep ,
1917| 2 - num 2
1917| 41 - op/sep )
1917| 59 - op/sep ;

1918| 5 - id cg_resume #772
1918| 40 - op/sep (
1918| 5 - id cmd #407
1918| 41 - op/sep )
1918| 59 - op/sep ;

1919| 125 - op/sep }

1920| 133 - kw else

1921| 5 - id cg_resume #772
1921| 40 - op/sep (
1921| 4 - str "  # no local variables\n"
1921| 41 - op/sep )
1921| 59 - op/sep ;

1922| 5 - id cg_fn_end #688
1922| 40 - op/sep (
1922| 5 - id ret0 #641
1922| 41 - op/sep )
1922| 59 - op/sep ;

1923| 137 - kw return
1923| 5 - id t_ #681
1923| 40 - op/sep (
1923| 5 - id T #62
1923| 41 - op/sep )
1923| 59 - op/sep ;

1924| 125 - op/sep }

1925| 137 - kw return
1925| 5 - id t_ #681
1925| 40 - op/sep (
1925| 5 - id F #48
1925| 41 - op/sep )
1925| 59 - op/sep ;

1926| 125 - op/sep }

1928| 130 - kw int
1928| 5 - id pa_enumerator #408
1928| 40 - op/sep (
1928| 41 - op/sep )

1929| 123 - op/sep {

1930| 5 - id t1 #635
1930| 40 - op/sep (
1930| 4 - str "pa_enumerator"
1930| 41 - op/sep )
1930| 59 - op/sep ;

1931| 132 - kw if
1931| 40 - op/sep (
1931| 5 - id sc_tkn #655
1931| 110 - op/sep n
1931| 5 - id Id #875
1931| 41 - op/sep )
1931| 137 - kw return
1931| 5 - id t_ #681
1931| 40 - op/sep (
1931| 5 - id F #48
1931| 41 - op/sep )
1931| 59 - op/sep ;

1932| 130 - kw int
1932| 5 - id id #969
1932| 61 - op/sep =
1932| 5 - id sc_num #403
1932| 59 - op/sep ;

1933| 5 - id sc_next #247
1933| 40 - op/sep (
1933| 41 - op/sep )
1933| 59 - op/sep ;

1934| 132 - kw if
1934| 40 - op/sep (
1934| 5 - id sc_tkn #655
1934| 101 - op/sep e
1934| 3 - chr 61
1934| 41 - op/sep )

1935| 123 - op/sep {

1936| 5 - id sc_next #247
1936| 40 - op/sep (
1936| 41 - op/sep )
1936| 59 - op/sep ;
1936| 132 - kw if
1936| 40 - op/sep (
1936| 33 - op/sep !
1936| 5 - id pa_integer #167
1936| 40 - op/sep (
1936| 41 - op/sep )
1936| 41 - op/sep )
1936| 137 - kw return
1936| 5 - id t_ #681
1936| 40 - op/sep (
1936| 5 - id F #48
1936| 41 - op/sep )
1936| 59 - op/sep ;

1937| 5 - id se_enum #131
1937| 61 - op/sep =
1937| 5 - id se_value #679
1937| 59 - op/sep ;

1938| 125 - op/sep }

1939| 5 - id st_add #645
1939| 40 - op/sep (
1939| 5 - id id #969
1939| 44 - op/sep ,
1939| 5 - id T_i #743
1939| 44 - op/sep ,
1939| 5 - id K_enum #356
1939| 44 - op/sep ,
1939| 5 - id se_enum #131
1939| 44 - op/sep ,
1939| 2 - num 0
1939| 41 - op/sep )
1939| 59 - op/sep ;

1940| 105 - op/sep i
1940| 5 - id se_enum #131
1940| 59 - op/sep ;

1941| 137 - kw return
1941| 5 - id t_ #681
1941| 40 - op/sep (
1941| 5 - id T #62
1941| 41 - op/sep )
1941| 59 - op/sep ;

1942| 125 - op/sep }

1944| 130 - kw int
1944| 5 - id pa_enumdef #526
1944| 40 - op/sep (
1944| 41 - op/sep )

1945| 123 - op/sep {

1946| 5 - id t1 #635
1946| 40 - op/sep (
1946| 4 - str "pa_enumdef"
1946| 41 - op/sep )
1946| 59 - op/sep ;

1947| 132 - kw if
1947| 40 - op/sep (
1947| 5 - id sc_tkn #655
1947| 110 - op/sep n
1947| 3 - chr 123
1947| 41 - op/sep )
1947| 137 - kw return
1947| 5 - id t_ #681
1947| 40 - op/sep (
1947| 5 - id F #48
1947| 41 - op/sep )
1947| 59 - op/sep ;

1948| 5 - id se_enum #131
1948| 61 - op/sep =
1948| 2 - num 0
1948| 59 - op/sep ;

1949| 5 - id sc_next #247
1949| 40 - op/sep (
1949| 41 - op/sep )
1949| 59 - op/sep ;
1949| 132 - kw if
1949| 40 - op/sep (
1949| 33 - op/sep !
1949| 5 - id pa_enumerator #408
1949| 40 - op/sep (
1949| 41 - op/sep )
1949| 41 - op/sep )
1949| 137 - kw return
1949| 5 - id t_ #681
1949| 40 - op/sep (
1949| 5 - id F #48
1949| 41 - op/sep )
1949| 59 - op/sep ;

1950| 134 - kw while
1950| 40 - op/sep (
1950| 5 - id sc_tkn #655
1950| 101 - op/sep e
1950| 3 - chr 44
1950| 41 - op/sep )
1950| 123 - op/sep {
1950| 5 - id sc_next #247
1950| 40 - op/sep (
1950| 41 - op/sep )
1950| 59 - op/sep ;
1950| 132 - kw if
1950| 40 - op/sep (
1950| 33 - op/sep !
1950| 5 - id pa_enumerator #408
1950| 40 - op/sep (
1950| 41 - op/sep )
1950| 41 - op/sep )
1950| 137 - kw return
1950| 5 - id t_ #681
1950| 40 - op/sep (
1950| 5 - id F #48
1950| 41 - op/sep )
1950| 59 - op/sep ;
1950| 125 - op/sep }

1951| 132 - kw if
1951| 40 - op/sep (
1951| 5 - id sc_tkn #655
1951| 110 - op/sep n
1951| 3 - chr 125
1951| 41 - op/sep )
1951| 137 - kw return
1951| 5 - id t_ #681
1951| 40 - op/sep (
1951| 5 - id F #48
1951| 41 - op/sep )
1951| 59 - op/sep ;

1952| 5 - id sc_next #247
1952| 40 - op/sep (
1952| 41 - op/sep )
1952| 59 - op/sep ;
1952| 132 - kw if
1952| 40 - op/sep (
1952| 5 - id sc_tkn #655
1952| 110 - op/sep n
1952| 3 - chr 59
1952| 41 - op/sep )
1952| 137 - kw return
1952| 5 - id t_ #681
1952| 40 - op/sep (
1952| 5 - id F #48
1952| 41 - op/sep )
1952| 59 - op/sep ;

1953| 5 - id sc_next #247
1953| 40 - op/sep (
1953| 41 - op/sep )
1953| 59 - op/sep ;

1954| 137 - kw return
1954| 5 - id t_ #681
1954| 40 - op/sep (
1954| 5 - id T #62
1954| 41 - op/sep )
1954| 59 - op/sep ;

1955| 125 - op/sep }

1957| 130 - kw int
1957| 5 - id pa_decl_or_def #527
1957| 40 - op/sep (
1957| 41 - op/sep )

1958| 123 - op/sep {

1959| 5 - id t1 #635
1959| 40 - op/sep (
1959| 4 - str "pa_decl_or_def"
1959| 41 - op/sep )
1959| 59 - op/sep ;

1960| 132 - kw if
1960| 40 - op/sep (
1960| 5 - id sc_tkn #655
1960| 101 - op/sep e
1960| 5 - id Kw #17
1960| 43 - op/sep +
1960| 5 - id Enum #699
1960| 41 - op/sep )
1960| 123 - op/sep {
1960| 5 - id sc_next #247
1960| 40 - op/sep (
1960| 41 - op/sep )
1960| 59 - op/sep ;
1960| 137 - kw return
1960| 5 - id t_ #681
1960| 40 - op/sep (
1960| 5 - id pa_enumdef #526
1960| 40 - op/sep (
1960| 41 - op/sep )
1960| 41 - op/sep )
1960| 59 - op/sep ;
1960| 125 - op/sep }

1961| 132 - kw if
1961| 40 - op/sep (
1961| 5 - id sc_tkn #655
1961| 101 - op/sep e
1961| 5 - id Kw #17
1961| 43 - op/sep +
1961| 5 - id Void #54
1961| 41 - op/sep )

1962| 123 - op/sep {

1963| 5 - id se_type #260
1963| 61 - op/sep =
1963| 5 - id T_v #755
1963| 59 - op/sep ;
1963| 5 - id se_stars #955
1963| 61 - op/sep =
1963| 2 - num 0
1963| 59 - op/sep ;

1964| 5 - id sc_next #247
1964| 40 - op/sep (
1964| 41 - op/sep )
1964| 59 - op/sep ;

1965| 132 - kw if
1965| 40 - op/sep (
1965| 5 - id sc_tkn #655
1965| 110 - op/sep n
1965| 5 - id Id #875
1965| 41 - op/sep )
1965| 137 - kw return
1965| 5 - id t_ #681
1965| 40 - op/sep (
1965| 5 - id F #48
1965| 41 - op/sep )
1965| 59 - op/sep ;

1966| 5 - id sc_next #247
1966| 40 - op/sep (
1966| 41 - op/sep )
1966| 59 - op/sep ;

1967| 132 - kw if
1967| 40 - op/sep (
1967| 5 - id sc_tkn #655
1967| 110 - op/sep n
1967| 3 - chr 40
1967| 41 - op/sep )
1967| 137 - kw return
1967| 5 - id t_ #681
1967| 40 - op/sep (
1967| 5 - id F #48
1967| 41 - op/sep )
1967| 59 - op/sep ;

1968| 137 - kw return
1968| 5 - id t_ #681
1968| 40 - op/sep (
1968| 5 - id pa_func #833
1968| 40 - op/sep (
1968| 41 - op/sep )
1968| 41 - op/sep )
1968| 59 - op/sep ;

1969| 125 - op/sep }

1970| 132 - kw if
1970| 40 - op/sep (
1970| 33 - op/sep !
1970| 5 - id pa_type #267
1970| 40 - op/sep (
1970| 41 - op/sep )
1970| 41 - op/sep )
1970| 137 - kw return
1970| 5 - id t_ #681
1970| 40 - op/sep (
1970| 5 - id F #48
1970| 41 - op/sep )
1970| 59 - op/sep ;

1971| 5 - id pa_stars #59
1971| 40 - op/sep (
1971| 41 - op/sep )
1971| 59 - op/sep ;

1972| 132 - kw if
1972| 40 - op/sep (
1972| 5 - id sc_tkn #655
1972| 110 - op/sep n
1972| 5 - id Id #875
1972| 41 - op/sep )
1972| 137 - kw return
1972| 5 - id t_ #681
1972| 40 - op/sep (
1972| 5 - id F #48
1972| 41 - op/sep )
1972| 59 - op/sep ;

1973| 5 - id sc_next #247
1973| 40 - op/sep (
1973| 41 - op/sep )
1973| 59 - op/sep ;

1974| 132 - kw if
1974| 40 - op/sep (
1974| 5 - id sc_tkn #655
1974| 110 - op/sep n
1974| 3 - chr 40
1974| 41 - op/sep )
1974| 137 - kw return
1974| 5 - id t_ #681
1974| 40 - op/sep (
1974| 5 - id pa_morevars #802
1974| 40 - op/sep (
1974| 41 - op/sep )
1974| 41 - op/sep )
1974| 59 - op/sep ;

1975| 137 - kw return
1975| 5 - id t_ #681
1975| 40 - op/sep (
1975| 5 - id pa_func #833
1975| 40 - op/sep (
1975| 41 - op/sep )
1975| 41 - op/sep )
1975| 59 - op/sep ;

1976| 125 - op/sep }

1978| 130 - kw int
1978| 5 - id pa_program #711
1978| 40 - op/sep (
1978| 41 - op/sep )

1979| 123 - op/sep {

1980| 5 - id t1 #635
1980| 40 - op/sep (
1980| 4 - str "pa_program"
1980| 41 - op/sep )
1980| 59 - op/sep ;

1981| 130 - kw int
1981| 5 - id rc #554
1981| 61 - op/sep =
1981| 5 - id T #62
1981| 59 - op/sep ;

1982| 5 - id sc_next #247
1982| 40 - op/sep (
1982| 41 - op/sep )
1982| 59 - op/sep ;

1983| 134 - kw while
1983| 40 - op/sep (
1983| 5 - id sc_tkn #655
1983| 110 - op/sep n
1983| 5 - id Eof #22
1983| 41 - op/sep )
1983| 132 - kw if
1983| 40 - op/sep (
1983| 33 - op/sep !
1983| 5 - id pa_decl_or_def #527
1983| 40 - op/sep (
1983| 41 - op/sep )
1983| 41 - op/sep )
1983| 123 - op/sep {
1983| 5 - id rc #554
1983| 61 - op/sep =
1983| 5 - id F #48
1983| 59 - op/sep ;
1983| 136 - kw break
1983| 59 - op/sep ;
1983| 125 - op/sep }

1984| 137 - kw return
1984| 5 - id t_ #681
1984| 40 - op/sep (
1984| 5 - id rc #554
1984| 41 - op/sep )
1984| 59 - op/sep ;

1985| 125 - op/sep }

1987| 128 - kw void
1987| 5 - id before_exit #492
1987| 40 - op/sep (
1987| 41 - op/sep )

1988| 123 - op/sep {

1989| 132 - kw if
1989| 40 - op/sep (
1989| 5 - id cg_file #859
1989| 62 - op/sep >
1989| 2 - num 0
1989| 41 - op/sep )
1989| 5 - id close #173
1989| 40 - op/sep (
1989| 5 - id cg_file #859
1989| 41 - op/sep )
1989| 59 - op/sep ;
1989| 5 - id cg_file #859
1989| 61 - op/sep =
1989| 2 - num 0
1989| 59 - op/sep ;

1990| 132 - kw if
1990| 40 - op/sep (
1990| 5 - id rd_file #57
1990| 62 - op/sep >
1990| 2 - num 0
1990| 41 - op/sep )
1990| 5 - id close #173
1990| 40 - op/sep (
1990| 5 - id rd_file #57
1990| 41 - op/sep )
1990| 59 - op/sep ;
1990| 5 - id rd_file #57
1990| 61 - op/sep =
1990| 2 - num 0
1990| 59 - op/sep ;

1991| 125 - op/sep }

1995| 130 - kw int
1995| 5 - id main #51
1995| 40 - op/sep (
1995| 130 - kw int
1995| 5 - id ac #441
1995| 44 - op/sep ,
1995| 129 - kw char
1995| 42 - op/sep *
1995| 42 - op/sep *
1995| 5 - id av #460
1995| 41 - op/sep )

1996| 123 - op/sep {

1997| 129 - kw char
1997| 42 - op/sep *
1997| 5 - id filename #935
1997| 61 - op/sep =
1997| 2 - num 0
1997| 59 - op/sep ;

1998| 129 - kw char
1998| 42 - op/sep *
1998| 5 - id outputfn #133
1998| 61 - op/sep =
1998| 2 - num 0
1998| 59 - op/sep ;

1999| 132 - kw if
1999| 40 - op/sep (
1999| 5 - id ac #441
1999| 101 - op/sep e
1999| 2 - num 1
1999| 111 - op/sep o
1999| 5 - id ac #441
1999| 101 - op/sep e
1999| 2 - num 2
1999| 97 - op/sep a
1999| 40 - op/sep (
1999| 5 - id strequ #915
1999| 40 - op/sep (
1999| 5 - id av #460
1999| 91 - op/sep [
1999| 2 - num 1
1999| 93 - op/sep ]
1999| 44 - op/sep ,
1999| 4 - str "-h"
1999| 41 - op/sep )
1999| 111 - op/sep o
1999| 5 - id strequ #915
1999| 40 - op/sep (
1999| 5 - id av #460
1999| 91 - op/sep [
1999| 2 - num 1
1999| 93 - op/sep ]
1999| 44 - op/sep ,
1999| 4 - str "--help"
1999| 41 - op/sep )
1999| 41 - op/sep )
1999| 41 - op/sep )

2000| 123 - op/sep {

2001| 5 - id p1 #371
2001| 40 - op/sep (
2001| 4 - str "cc.exe [options] file.c [options]\n"
2001| 41 - op/sep )
2001| 59 - op/sep ;

2002| 5 - id p1 #371
2002| 40 - op/sep (
2002| 4 - str "-T  show tokens\n"
2002| 41 - op/sep )
2002| 59 - op/sep ;

2003| 5 - id p1 #371
2003| 40 - op/sep (
2003| 4 - str "-P  show parser trace\n"
2003| 41 - op/sep )
2003| 59 - op/sep ;

2004| 5 - id p1 #371
2004| 40 - op/sep (
2004| 4 - str "-I  show id table trace\n"
2004| 41 - op/sep )
2004| 59 - op/sep ;

2005| 5 - id p1 #371
2005| 40 - op/sep (
2005| 4 - str "-D  dump id table data and string literal table\n"
2005| 41 - op/sep )
2005| 59 - op/sep ;

2006| 5 - id p1 #371
2006| 40 - op/sep (
2006| 4 - str "-S  dump symbol table\n"
2006| 41 - op/sep )
2006| 59 - op/sep ;

2007| 5 - id p1 #371
2007| 40 - op/sep (
2007| 4 - str "-E  trace expressions\n"
2007| 41 - op/sep )
2007| 59 - op/sep ;

2008| 5 - id p1 #371
2008| 40 - op/sep (
2008| 4 - str "-L  omit output of line numbers in assembler\n"
2008| 41 - op/sep )
2008| 59 - op/sep ;

2009| 5 - id p1 #371
2009| 40 - op/sep (
2009| 4 - str "-o FILE  specify output file name\n"
2009| 41 - op/sep )
2009| 59 - op/sep ;

2010| 137 - kw return
2010| 2 - num 0
2010| 59 - op/sep ;

2011| 125 - op/sep }

2012| 135 - kw for
2012| 40 - op/sep (
2012| 130 - kw int
2012| 5 - id i #83
2012| 61 - op/sep =
2012| 2 - num 1
2012| 59 - op/sep ;
2012| 5 - id i #83
2012| 60 - op/sep <
2012| 5 - id ac #441
2012| 59 - op/sep ;
2012| 105 - op/sep i
2012| 5 - id i #83
2012| 41 - op/sep )

2013| 132 - kw if
2013| 40 - op/sep (
2013| 42 - op/sep *
2013| 5 - id av #460
2013| 91 - op/sep [
2013| 5 - id i #83
2013| 93 - op/sep ]
2013| 110 - op/sep n
2013| 3 - chr 45
2013| 41 - op/sep )

2014| 5 - id filename #935
2014| 61 - op/sep =
2014| 5 - id av #460
2014| 91 - op/sep [
2014| 5 - id i #83
2014| 93 - op/sep ]
2014| 59 - op/sep ;

2015| 133 - kw else

2016| 123 - op/sep {

2017| 132 - kw if
2017| 40 - op/sep (
2017| 5 - id av #460
2017| 91 - op/sep [
2017| 5 - id i #83
2017| 93 - op/sep ]
2017| 91 - op/sep [
2017| 2 - num 1
2017| 93 - op/sep ]
2017| 101 - op/sep e
2017| 3 - chr 84
2017| 41 - op/sep )
2017| 5 - id SC_DEBUG #598
2017| 61 - op/sep =
2017| 2 - num 1
2017| 59 - op/sep ;

2018| 132 - kw if
2018| 40 - op/sep (
2018| 5 - id av #460
2018| 91 - op/sep [
2018| 5 - id i #83
2018| 93 - op/sep ]
2018| 91 - op/sep [
2018| 2 - num 1
2018| 93 - op/sep ]
2018| 101 - op/sep e
2018| 3 - chr 80
2018| 41 - op/sep )
2018| 5 - id PA_TRACE #918
2018| 61 - op/sep =
2018| 2 - num 1
2018| 59 - op/sep ;

2019| 132 - kw if
2019| 40 - op/sep (
2019| 5 - id av #460
2019| 91 - op/sep [
2019| 5 - id i #83
2019| 93 - op/sep ]
2019| 91 - op/sep [
2019| 2 - num 1
2019| 93 - op/sep ]
2019| 101 - op/sep e
2019| 3 - chr 73
2019| 41 - op/sep )
2019| 5 - id IT_DEBUG #861
2019| 61 - op/sep =
2019| 2 - num 1
2019| 59 - op/sep ;

2020| 132 - kw if
2020| 40 - op/sep (
2020| 5 - id av #460
2020| 91 - op/sep [
2020| 5 - id i #83
2020| 93 - op/sep ]
2020| 91 - op/sep [
2020| 2 - num 1
2020| 93 - op/sep ]
2020| 101 - op/sep e
2020| 3 - chr 68
2020| 41 - op/sep )
2020| 5 - id IT_DUMP #623
2020| 61 - op/sep =
2020| 2 - num 1
2020| 59 - op/sep ;

2021| 132 - kw if
2021| 40 - op/sep (
2021| 5 - id av #460
2021| 91 - op/sep [
2021| 5 - id i #83
2021| 93 - op/sep ]
2021| 91 - op/sep [
2021| 2 - num 1
2021| 93 - op/sep ]
2021| 101 - op/sep e
2021| 3 - chr 83
2021| 41 - op/sep )
2021| 5 - id ST_DUMP #185
2021| 61 - op/sep =
2021| 2 - num 1
2021| 59 - op/sep ;

2022| 132 - kw if
2022| 40 - op/sep (
2022| 5 - id av #460
2022| 91 - op/sep [
2022| 5 - id i #83
2022| 93 - op/sep ]
2022| 91 - op/sep [
2022| 2 - num 1
2022| 93 - op/sep ]
2022| 101 - op/sep e
2022| 3 - chr 69
2022| 41 - op/sep )
2022| 5 - id ET_TRACE #18
2022| 61 - op/sep =
2022| 2 - num 1
2022| 59 - op/sep ;

2023| 132 - kw if
2023| 40 - op/sep (
2023| 5 - id av #460
2023| 91 - op/sep [
2023| 5 - id i #83
2023| 93 - op/sep ]
2023| 91 - op/sep [
2023| 2 - num 1
2023| 93 - op/sep ]
2023| 101 - op/sep e
2023| 3 - chr 76
2023| 41 - op/sep )
2023| 5 - id CG_LINES #579
2023| 61 - op/sep =
2023| 2 - num 0
2023| 59 - op/sep ;

2024| 132 - kw if
2024| 40 - op/sep (
2024| 5 - id av #460
2024| 91 - op/sep [
2024| 5 - id i #83
2024| 93 - op/sep ]
2024| 91 - op/sep [
2024| 2 - num 1
2024| 93 - op/sep ]
2024| 101 - op/sep e
2024| 3 - chr 111
2024| 41 - op/sep )
2024| 123 - op/sep {
2024| 5 - id outputfn #133
2024| 61 - op/sep =
2024| 5 - id av #460
2024| 91 - op/sep [
2024| 105 - op/sep i
2024| 5 - id i #83
2024| 93 - op/sep ]
2024| 59 - op/sep ;
2024| 125 - op/sep }

2025| 125 - op/sep }

2027| 132 - kw if
2027| 40 - op/sep (
2027| 33 - op/sep !
2027| 5 - id filename #935
2027| 41 - op/sep )
2027| 123 - op/sep {
2027| 5 - id p1 #371
2027| 40 - op/sep (
2027| 4 - str "No input file\n"
2027| 41 - op/sep )
2027| 59 - op/sep ;
2027| 5 - id exit #906
2027| 40 - op/sep (
2027| 2 - num 1
2027| 41 - op/sep )
2027| 59 - op/sep ;
2027| 125 - op/sep }

2028| 5 - id rd_file #57
2028| 61 - op/sep =
2028| 5 - id open #413
2028| 40 - op/sep (
2028| 5 - id filename #935
2028| 44 - op/sep ,
2028| 5 - id O_RDONLY #844
2028| 44 - op/sep ,
2028| 2 - num 0
2028| 41 - op/sep )
2028| 59 - op/sep ;

2029| 132 - kw if
2029| 40 - op/sep (
2029| 5 - id rd_file #57
2029| 108 - op/sep l
2029| 2 - num 0
2029| 41 - op/sep )
2029| 123 - op/sep {
2029| 5 - id p3 #373
2029| 40 - op/sep (
2029| 4 - str "Can't open input file '"
2029| 44 - op/sep ,
2029| 5 - id filename #935
2029| 44 - op/sep ,
2029| 4 - str "'\n"
2029| 41 - op/sep )
2029| 59 - op/sep ;
2029| 5 - id exit #906
2029| 40 - op/sep (
2029| 2 - num 1
2029| 41 - op/sep )
2029| 59 - op/sep ;
2029| 125 - op/sep }

2031| 5 - id op_set_prec #687
2031| 40 - op/sep (
2031| 41 - op/sep )
2031| 59 - op/sep ;

2032| 5 - id st_create #733
2032| 40 - op/sep (
2032| 5 - id ST_DIM #473
2032| 41 - op/sep )
2032| 59 - op/sep ;

2033| 5 - id id_table_create #200
2033| 40 - op/sep (
2033| 5 - id ID_TABLE_DIM #644
2033| 41 - op/sep )
2033| 59 - op/sep ;

2034| 5 - id sl_table_create #533
2034| 40 - op/sep (
2034| 5 - id SL_TABLE_DIM #95
2034| 41 - op/sep )
2034| 59 - op/sep ;

2035| 132 - kw if
2035| 40 - op/sep (
2035| 33 - op/sep !
2035| 5 - id outputfn #133
2035| 41 - op/sep )
2035| 5 - id outputfn #133
2035| 61 - op/sep =
2035| 4 - str "a.s"
2035| 59 - op/sep ;

2036| 5 - id cg_file #859
2036| 61 - op/sep =
2036| 5 - id open #413
2036| 40 - op/sep (
2036| 5 - id outputfn #133
2036| 44 - op/sep ,
2036| 5 - id O_CREAT #922
2036| 124 - op/sep |
2036| 5 - id O_TRUNC #307
2036| 124 - op/sep |
2036| 5 - id O_WRONLY #328
2036| 44 - op/sep ,
2036| 2 - num 438
2036| 41 - op/sep )
2036| 59 - op/sep ;

2037| 132 - kw if
2037| 40 - op/sep (
2037| 5 - id cg_file #859
2037| 60 - op/sep <
2037| 2 - num 0
2037| 41 - op/sep )
2037| 123 - op/sep {
2037| 5 - id p3 #373
2037| 40 - op/sep (
2037| 4 - str "Can't create file '"
2037| 44 - op/sep ,
2037| 5 - id outputfn #133
2037| 44 - op/sep ,
2037| 4 - str "'\n"
2037| 41 - op/sep )
2037| 59 - op/sep ;
2037| 5 - id exit #906
2037| 40 - op/sep (
2037| 2 - num 1
2037| 41 - op/sep )
2037| 59 - op/sep ;
2037| 125 - op/sep }

2038| 5 - id cg_begin #478
2038| 40 - op/sep (
2038| 5 - id filename #935
2038| 41 - op/sep )
2038| 59 - op/sep ;

2039| 132 - kw if
2039| 40 - op/sep (
2039| 33 - op/sep !
2039| 5 - id pa_program #711
2039| 40 - op/sep (
2039| 5 - id filename #935
2039| 41 - op/sep )
2039| 41 - op/sep )
2039| 5 - id err1 #522
2039| 40 - op/sep (
2039| 4 - str "wrong syntax"
2039| 41 - op/sep )
2039| 59 - op/sep ;

2040| 5 - id cg_sl_table #841
2040| 40 - op/sep (
2040| 41 - op/sep )
2040| 59 - op/sep ;

2041| 5 - id cg_end #951
2041| 40 - op/sep (
2041| 41 - op/sep )
2041| 59 - op/sep ;

2042| 5 - id before_exit #492
2042| 40 - op/sep (
2042| 41 - op/sep )
2042| 59 - op/sep ;

2043| 132 - kw if
2043| 40 - op/sep (
2043| 5 - id IT_DUMP #623
2043| 41 - op/sep )
2043| 123 - op/sep {
2043| 5 - id id_table_dump #552
2043| 40 - op/sep (
2043| 41 - op/sep )
2043| 59 - op/sep ;
2043| 5 - id sl_table_dump #891
2043| 40 - op/sep (
2043| 41 - op/sep )
2043| 59 - op/sep ;
2043| 125 - op/sep }

2044| 132 - kw if
2044| 40 - op/sep (
2044| 5 - id ST_DUMP #185
2044| 41 - op/sep )

2045| 123 - op/sep {

2046| 130 - kw int
2046| 5 - id n #88
2046| 59 - op/sep ;

2047| 5 - id p1 #371
2047| 40 - op/sep (
2047| 4 - str "** globals **\nenums:\n"
2047| 41 - op/sep )
2047| 59 - op/sep ;
2047| 5 - id n #88
2047| 61 - op/sep =
2047| 5 - id st_dump #624
2047| 40 - op/sep (
2047| 2 - num 0
2047| 44 - op/sep ,
2047| 5 - id K_enum #356
2047| 41 - op/sep )
2047| 59 - op/sep ;
2047| 5 - id p1n #619
2047| 40 - op/sep (
2047| 5 - id i2s #466
2047| 40 - op/sep (
2047| 5 - id n #88
2047| 41 - op/sep )
2047| 41 - op/sep )
2047| 59 - op/sep ;

2048| 5 - id p1 #371
2048| 40 - op/sep (
2048| 4 - str "vars:\n"
2048| 41 - op/sep )
2048| 59 - op/sep ;
2048| 5 - id n #88
2048| 61 - op/sep =
2048| 5 - id st_dump #624
2048| 40 - op/sep (
2048| 2 - num 0
2048| 44 - op/sep ,
2048| 5 - id K_var #777
2048| 41 - op/sep )
2048| 59 - op/sep ;
2048| 5 - id p1n #619
2048| 40 - op/sep (
2048| 5 - id i2s #466
2048| 40 - op/sep (
2048| 5 - id n #88
2048| 41 - op/sep )
2048| 41 - op/sep )
2048| 59 - op/sep ;

2049| 5 - id p1 #371
2049| 40 - op/sep (
2049| 4 - str "funcs:\n"
2049| 41 - op/sep )
2049| 59 - op/sep ;
2049| 5 - id n #88
2049| 61 - op/sep =
2049| 5 - id st_dump #624
2049| 40 - op/sep (
2049| 2 - num 0
2049| 44 - op/sep ,
2049| 5 - id K_fn #550
2049| 41 - op/sep )
2049| 59 - op/sep ;
2049| 5 - id p1n #619
2049| 40 - op/sep (
2049| 5 - id i2s #466
2049| 40 - op/sep (
2049| 5 - id n #88
2049| 41 - op/sep )
2049| 41 - op/sep )
2049| 59 - op/sep ;

2050| 5 - id p2n #683
2050| 40 - op/sep (
2050| 4 - str "data size: "
2050| 44 - op/sep ,
2050| 5 - id i2s #466
2050| 40 - op/sep (
2050| 5 - id se_data_offset #528
2050| 41 - op/sep )
2050| 41 - op/sep )
2050| 59 - op/sep ;

2051| 5 - id p2n #683
2051| 40 - op/sep (
2051| 4 - str "bss size: "
2051| 44 - op/sep ,
2051| 5 - id i2s #466
2051| 40 - op/sep (
2051| 5 - id se_bss_offset #400
2051| 41 - op/sep )
2051| 41 - op/sep )
2051| 59 - op/sep ;

2052| 125 - op/sep }

2053| 132 - kw if
2053| 40 - op/sep (
2053| 5 - id SC_DEBUG #598
2053| 41 - op/sep )
2053| 5 - id p2 #372
2053| 40 - op/sep (
2053| 5 - id i2s #466
2053| 40 - op/sep (
2053| 5 - id sc_n_tokens #257
2053| 41 - op/sep )
2053| 44 - op/sep ,
2053| 4 - str " tokens\n"
2053| 41 - op/sep )
2053| 59 - op/sep ;

2054| 137 - kw return
2054| 2 - num 0
2054| 59 - op/sep ;

2055| 125 - op/sep }

2057| 1 - eof

15272 tokens
